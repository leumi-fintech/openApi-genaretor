{
    "openapi": "3.0.1",
    "info": {
        "title": "NextGenPSD2 XS2A Framework",
        "version": "1.0.8",
        "description": "# Summary\nThe **NextGenPSD2** *Framework Version 1.3.4* offers a modern, open, harmonised and interoperable set of \nApplication Programming Interfaces (APIs) as the safest and most efficient way to provide data securely. \nThe NextGenPSD2 Framework reduces XS2A complexity and costs, addresses the problem of multiple competing standards \nin Europe and, aligned with the goals of the Euro Retail Payments Board,\nenables European banking customers to benefit from innovative products and services ('Banking as a Service') \nby granting TPPs safe and secure (authenticated and authorised) access to their bank accounts and financial data.\n\nThe possible Approaches are:\n  * OAuth SCA Approach\n  * Decoupled SCA Approach\n\n  Not every message defined in this API definition is necessary for all approaches. \n  Furthermore this API definition does not differ between methods which are mandatory, conditional, or optional\n  Therefore for a particular implementation of a Berlin Group PSD2 compliant API it is only necessary to support \n  a certain subset of the methods defined in this API definition.\n\n  **Please have a look at the implementation guidelines if you are not sure \n  which message has to be used for the approach you are going to use.**\n\n## Some General Remarks Related to this version of the OpenAPI Specification:\n* **This API definition is based on the Implementation Guidelines of the Berlin Group PSD2 API.** \n  It is not a replacement in any sense.\n  The main specification is (at the moment) always the Implementation Guidelines of the Berlin Group PSD2 API.\n* **This API definition contains the REST-API for requests from the PISP to the ASPSP.**\n* **This API definition contains the messages for all different approaches defined in the Implementation Guidelines.**\n* According to the OpenAPI-Specification [https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.1.md]\n  \n    \"If in is \"header\" and the name field is \"Accept\", \"Content-Type\" or \"Authorization\", the parameter definition SHALL be ignored.\"\n  \n  The element \"Accept\" will not be defined in this file at any place.\n  \n  The elements \"Content-Type\" and \"Authorization\" are implicitly defined by the OpenApi tags \"content\" and \"security\".\n  \n* There are several predefined types which might occur in payment initiation messages, \n  but are not used in the standard JSON messages in the Implementation Guidelines.\n  Therefore they are not used in the corresponding messages in this file either.\n  We added them for the convenience of the user.\n  If there is a payment product, which need these field, one can easily use the predefined types.\n  But the ASPSP need not to accept them in general.\n  \n* **We omit the definition of all standard HTTP header elements (mandatory/optional/conditional) \n   except they are mentioned in the Implementation Guidelines.**\n  Therefore the implementer might add these in his own realisation of a PSD2 comlient API in addition to the elements defined in this file.\n\n   \n## General Remarks on Data Types\n\n   The Berlin Group definition of UTF-8 strings in context of the PSD2 API has to support at least the following characters\n\n\na b c d e f g h i j k l m n o p q r s t u v w x y z\n\nA B C D E F G H I J K L M N O P Q R S T U V W X Y Z\n\n#BOI-REMARK: The Hebrew alphabt must be supported as part of the character set\n\u05d0 \u05d1 \u05d2 \u05d3 \u05d4 \u05d5 \u05d6 \u05d7 \u05d8 \u05d9 \u05db \u05da \u05dc \u05de \u05dd \u05e0 \u05df \u05e1 \u05e2 \u05e4 \u05e3 \u05e6 \u05e5 \u05e7 \u05e8 \u05e9 \u05ea\n\n0 1 2 3 4 5 6 7 8 9\n\n/ - ? : ( ) . , ' +\n\nSpace\n",
        "license": {
            "name": "Creative Commons Attribution 4.0 International Public License",
            "url": "https://creativecommons.org/licenses/by/4.0/"
        },
        "contact": {
            "name": "The Berlin Group - A European Standards Initiative",
            "url": "https://www.berlin-group.org/",
            "email": "info@berlin-group.org"
        }
    },
    "externalDocs": {
        "description": "Full Documentation of NextGenPSD2 Access to Account Interoperability Framework\n(General Introduction Paper, Operational Rules, Implementation Guidelines)\n",
        "url": "https://www.berlin-group.org/nextgenpsd2-downloads"
    },
    "servers": [
        {
            "url": "https://api.testbank.com/psd2",
            "description": "PSD2 server"
        },
        {
            "url": "https://test-api.testbank.com/psd2",
            "description": "Optional PSD2 test server"
        }
    ],
    "paths": {
        "/v1.0.8/{payment-service}/{payment-product}": {
            "post": {
                "summary": "Payment initiation request",
                "description": "This method is used to initiate a payment at the ASPSP.\n\n\nThere are the following **payment products**:\n\n  - Payment products with payment information in *JSON* format:\n    - ***masav***\n    - ***zahav***\n    - ***FP***\n\nFurthermore the request body depends on the **payment-service**\n  * ***payments***: A single payment initiation request.\n  * ***bulk-payments***: A collection of several payment iniatiation requests.\n  * ***periodic-payments***: \n    Create a standing order initiation resource for recurrent i.e. periodic payments addressable under {paymentId} \n     with all data relevant for the corresponding payment product and the execution of the standing order contained in a JSON body. \n\n\nThis is the first step in the API to initiate the related recurring/periodic payment.\n  \n### BOI-REMARK : Multilevel SCA Approach does not supported.\nThe Payment Initiation Requests are independent from the need of one or multilevel \nSCA processing, i.e. independent from the number of authorisations needed for the execution of payments. \n\nBut the response messages are specific to either one SCA processing or multilevel SCA processing. \n\nFor payment initiation with multilevel SCA, this specification requires an explicit start of the authorisation, \ni.e. links directly associated with SCA processing like 'scaRedirect' or 'scaOAuth' cannot be contained in the \nresponse message of a Payment Initation Request for a payment, where multiple authorisations are needed. \nAlso if any data is needed for the next action, like selecting an SCA method is not supported in the response, \nsince all starts of the multiple authorisations are fully equal. \nIn these cases, first an authorisation sub-resource has to be generated following the 'startAuthorisation' link.\n",
                "operationId": "initiatePayment",
                "tags": [
                    "Payment Initiation Service (PIS)"
                ],
                "security": [
                    {},
                    {
                        "BearerAuthOAuth": []
                    }
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/paymentService"
                    },
                    {
                        "$ref": "#/components/parameters/paymentProduct"
                    },
                    {
                        "$ref": "#/components/parameters/X-Request-ID"
                    },
                    {
                        "$ref": "#/components/parameters/Digest"
                    },
                    {
                        "$ref": "#/components/parameters/Signature"
                    },
                    {
                        "$ref": "#/components/parameters/TPP-Signature-Certificate"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-ID"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-ID-Type"
                    },
                    {
                        "$ref": "#/components/parameters/consentId_HEADER_optional"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-IP-Address_mandatory"
                    },
                    {
                        "$ref": "#/components/parameters/TPP-Redirect-Preferred"
                    },
                    {
                        "$ref": "#/components/parameters/TPP-Redirect-URI"
                    },
                    {
                        "$ref": "#/components/parameters/TPP-Nok-Redirect-URI"
                    },
                    {
                        "$ref": "#/components/parameters/TPP-Explicit-Authorisation-Preferred"
                    },
                    {
                        "$ref": "#/components/parameters/TPP-Rejection-NoFunds-Preferred"
                    },
                    {
                        "$ref": "#/components/parameters/TPP-Notification-URI"
                    },
                    {
                        "$ref": "#/components/parameters/TPP-Notification-Content-Preferred"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-IP-Port_mandatory"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Accept"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Accept-Charset"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Accept-Encoding"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Accept-Language"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-User-Agent"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Http-Method"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Device-ID_conditional"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Geo-Location_conditional"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/paymentInitiation"
                },
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/CREATED_201_PaymentInitiation"
                    },
                    "400": {
                        "$ref": "#/components/responses/BAD_REQUEST_400_PIS"
                    },
                    "401": {
                        "$ref": "#/components/responses/UNAUTHORIZED_401_PIS"
                    },
                    "403": {
                        "$ref": "#/components/responses/FORBIDDEN_403_PIS"
                    },
                    "404": {
                        "$ref": "#/components/responses/NOT_FOUND_404_PIS"
                    },
                    "405": {
                        "$ref": "#/components/responses/METHOD_NOT_ALLOWED_405_PIS"
                    },
                    "406": {
                        "$ref": "#/components/responses/NOT_ACCEPTABLE_406_PIS"
                    },
                    "408": {
                        "$ref": "#/components/responses/REQUEST_TIMEOUT_408_PIS"
                    },
                    "409": {
                        "$ref": "#/components/responses/CONFLICT_409_PIS"
                    },
                    "415": {
                        "$ref": "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415_PIS"
                    },
                    "429": {
                        "$ref": "#/components/responses/TOO_MANY_REQUESTS_429_PIS"
                    },
                    "500": {
                        "$ref": "#/components/responses/INTERNAL_SERVER_ERROR_500_PIS"
                    },
                    "503": {
                        "$ref": "#/components/responses/SERVICE_UNAVAILABLE_503_PIS"
                    }
                }
            }
        },
        "/v1.0.8/{payment-service}/{payment-product}/{paymentId}": {
            "get": {
                "summary": "Get Payment Information",
                "description": "Returns the content of a payment object",
                "operationId": "getPaymentInformation",
                "tags": [
                    "Payment Initiation Service (PIS)"
                ],
                "security": [
                    {},
                    {
                        "BearerAuthOAuth": []
                    }
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/paymentService"
                    },
                    {
                        "$ref": "#/components/parameters/paymentProduct"
                    },
                    {
                        "$ref": "#/components/parameters/paymentId"
                    },
                    {
                        "$ref": "#/components/parameters/X-Request-ID"
                    },
                    {
                        "$ref": "#/components/parameters/Digest"
                    },
                    {
                        "$ref": "#/components/parameters/Signature"
                    },
                    {
                        "$ref": "#/components/parameters/TPP-Signature-Certificate"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-IP-Address_optional"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-IP-Port"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Accept"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Accept-Charset"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Accept-Encoding"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Accept-Language"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-User-Agent"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Http-Method"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Device-ID"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Geo-Location"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/OK_200_PaymentInitiationInformation"
                    },
                    "400": {
                        "$ref": "#/components/responses/BAD_REQUEST_400_PIS"
                    },
                    "401": {
                        "$ref": "#/components/responses/UNAUTHORIZED_401_PIS"
                    },
                    "403": {
                        "$ref": "#/components/responses/FORBIDDEN_403_PIS"
                    },
                    "404": {
                        "$ref": "#/components/responses/NOT_FOUND_404_PIS"
                    },
                    "405": {
                        "$ref": "#/components/responses/METHOD_NOT_ALLOWED_405_PIS"
                    },
                    "406": {
                        "$ref": "#/components/responses/NOT_ACCEPTABLE_406_PIS"
                    },
                    "408": {
                        "$ref": "#/components/responses/REQUEST_TIMEOUT_408_PIS"
                    },
                    "409": {
                        "$ref": "#/components/responses/CONFLICT_409_PIS"
                    },
                    "415": {
                        "$ref": "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415_PIS"
                    },
                    "429": {
                        "$ref": "#/components/responses/TOO_MANY_REQUESTS_429_PIS"
                    },
                    "500": {
                        "$ref": "#/components/responses/INTERNAL_SERVER_ERROR_500_PIS"
                    },
                    "503": {
                        "$ref": "#/components/responses/SERVICE_UNAVAILABLE_503_PIS"
                    }
                }
            },
            "delete": {
                "summary": "Payment Cancellation Request",
                "description": "This method initiates the cancellation of a payment. \nDepending on the payment-service, the payment-product and the ASPSP's implementation, \nthis TPP call might be sufficient to cancel a payment. \nIf an authorisation of the payment cancellation is mandated by the ASPSP, \na corresponding hyperlink will be contained in the response message.\n\nCancels the addressed payment with resource identification paymentId if applicable to the payment-service, payment-product and received in product related timelines (e.g. before end of business day for scheduled payments of the last business day before the scheduled execution day). \n\nThe response to this DELETE command will tell the TPP whether the \n  * access method was rejected\n  * access method was successful, or\n  * access method is generally applicable, but further authorisation processes are needed.\n",
                "operationId": "cancelPayment",
                "tags": [
                    "Payment Initiation Service (PIS)"
                ],
                "security": [
                    {},
                    {
                        "BearerAuthOAuth": []
                    }
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/paymentService"
                    },
                    {
                        "$ref": "#/components/parameters/paymentProduct"
                    },
                    {
                        "$ref": "#/components/parameters/paymentId"
                    },
                    {
                        "$ref": "#/components/parameters/X-Request-ID"
                    },
                    {
                        "$ref": "#/components/parameters/Digest"
                    },
                    {
                        "$ref": "#/components/parameters/Signature"
                    },
                    {
                        "$ref": "#/components/parameters/TPP-Signature-Certificate"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-IP-Address_optional"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-IP-Port"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Accept"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Accept-Charset"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Accept-Encoding"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Accept-Language"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-User-Agent"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Http-Method"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Device-ID"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Geo-Location"
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#/components/responses/NO_CONTENT_204_PaymentInitiationCancel"
                    },
                    "202": {
                        "$ref": "#/components/responses/RECEIVED_202_PaymentInitiationCancel"
                    },
                    "400": {
                        "$ref": "#/components/responses/BAD_REQUEST_400_PIS"
                    },
                    "401": {
                        "$ref": "#/components/responses/UNAUTHORIZED_401_PIS"
                    },
                    "403": {
                        "$ref": "#/components/responses/FORBIDDEN_403_PIS"
                    },
                    "404": {
                        "$ref": "#/components/responses/NOT_FOUND_404_PIS"
                    },
                    "405": {
                        "$ref": "#/components/responses/METHOD_NOT_ALLOWED_405_PIS_CANC"
                    },
                    "406": {
                        "$ref": "#/components/responses/NOT_ACCEPTABLE_406_PIS"
                    },
                    "408": {
                        "$ref": "#/components/responses/REQUEST_TIMEOUT_408_PIS"
                    },
                    "409": {
                        "$ref": "#/components/responses/CONFLICT_409_PIS"
                    },
                    "415": {
                        "$ref": "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415_PIS"
                    },
                    "429": {
                        "$ref": "#/components/responses/TOO_MANY_REQUESTS_429_PIS"
                    },
                    "500": {
                        "$ref": "#/components/responses/INTERNAL_SERVER_ERROR_500_PIS"
                    },
                    "503": {
                        "$ref": "#/components/responses/SERVICE_UNAVAILABLE_503_PIS"
                    }
                }
            }
        },
        "/v1.0.8/{payment-service}/{payment-product}/{paymentId}/status": {
            "get": {
                "summary": "Payment initiation status request",
                "description": "Check the transaction status of a payment initiation.",
                "operationId": "getPaymentInitiationStatus",
                "tags": [
                    "Payment Initiation Service (PIS)"
                ],
                "security": [
                    {},
                    {
                        "BearerAuthOAuth": []
                    }
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/paymentService"
                    },
                    {
                        "$ref": "#/components/parameters/paymentProduct"
                    },
                    {
                        "$ref": "#/components/parameters/paymentId"
                    },
                    {
                        "$ref": "#/components/parameters/X-Request-ID"
                    },
                    {
                        "$ref": "#/components/parameters/Digest"
                    },
                    {
                        "$ref": "#/components/parameters/Signature"
                    },
                    {
                        "$ref": "#/components/parameters/TPP-Signature-Certificate"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-IP-Address_optional"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-IP-Port"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Accept"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Accept-Charset"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Accept-Encoding"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Accept-Language"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-User-Agent"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Http-Method"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Device-ID"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Geo-Location"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/OK_200_PaymentInitiationStatus"
                    },
                    "400": {
                        "$ref": "#/components/responses/BAD_REQUEST_400_PIS"
                    },
                    "401": {
                        "$ref": "#/components/responses/UNAUTHORIZED_401_PIS"
                    },
                    "403": {
                        "$ref": "#/components/responses/FORBIDDEN_403_PIS"
                    },
                    "404": {
                        "$ref": "#/components/responses/NOT_FOUND_404_PIS"
                    },
                    "405": {
                        "$ref": "#/components/responses/METHOD_NOT_ALLOWED_405_PIS"
                    },
                    "406": {
                        "$ref": "#/components/responses/NOT_ACCEPTABLE_406_PIS"
                    },
                    "408": {
                        "$ref": "#/components/responses/REQUEST_TIMEOUT_408_PIS"
                    },
                    "409": {
                        "$ref": "#/components/responses/CONFLICT_409_PIS"
                    },
                    "415": {
                        "$ref": "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415_PIS"
                    },
                    "429": {
                        "$ref": "#/components/responses/TOO_MANY_REQUESTS_429_PIS"
                    },
                    "500": {
                        "$ref": "#/components/responses/INTERNAL_SERVER_ERROR_500_PIS"
                    },
                    "503": {
                        "$ref": "#/components/responses/SERVICE_UNAVAILABLE_503_PIS"
                    }
                }
            }
        },
        "/v1.0.8/{payment-service}/{payment-product}/{paymentId}/authorisations/{authorisationId}": {
            "get": {
                "summary": "Read the SCA Status of the payment authorisation",
                "description": "This method returns the SCA status of a payment initiation's authorisation sub-resource.\n",
                "operationId": "getPaymentInitiationScaStatus",
                "tags": [
                    "Payment Initiation Service (PIS)",
                    "Common Services"
                ],
                "security": [
                    {},
                    {
                        "BearerAuthOAuth": []
                    }
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/paymentService"
                    },
                    {
                        "$ref": "#/components/parameters/paymentProduct"
                    },
                    {
                        "$ref": "#/components/parameters/paymentId"
                    },
                    {
                        "$ref": "#/components/parameters/authorisationId"
                    },
                    {
                        "$ref": "#/components/parameters/X-Request-ID"
                    },
                    {
                        "$ref": "#/components/parameters/Digest"
                    },
                    {
                        "$ref": "#/components/parameters/Signature"
                    },
                    {
                        "$ref": "#/components/parameters/TPP-Signature-Certificate"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-IP-Address_mandatory"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-IP-Port"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Accept"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Accept-Charset"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Accept-Encoding"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Accept-Language"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-User-Agent"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Http-Method"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Device-ID"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Geo-Location"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/OK_200_ScaStatus"
                    },
                    "400": {
                        "$ref": "#/components/responses/BAD_REQUEST_400_PIS"
                    },
                    "401": {
                        "$ref": "#/components/responses/UNAUTHORIZED_401_PIS"
                    },
                    "403": {
                        "$ref": "#/components/responses/FORBIDDEN_403_PIS"
                    },
                    "404": {
                        "$ref": "#/components/responses/NOT_FOUND_404_PIS"
                    },
                    "405": {
                        "$ref": "#/components/responses/METHOD_NOT_ALLOWED_405_PIS"
                    },
                    "406": {
                        "$ref": "#/components/responses/NOT_ACCEPTABLE_406_PIS"
                    },
                    "408": {
                        "$ref": "#/components/responses/REQUEST_TIMEOUT_408_PIS"
                    },
                    "409": {
                        "$ref": "#/components/responses/CONFLICT_409_PIS"
                    },
                    "415": {
                        "$ref": "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415_PIS"
                    },
                    "429": {
                        "$ref": "#/components/responses/TOO_MANY_REQUESTS_429_PIS"
                    },
                    "500": {
                        "$ref": "#/components/responses/INTERNAL_SERVER_ERROR_500_PIS"
                    },
                    "503": {
                        "$ref": "#/components/responses/SERVICE_UNAVAILABLE_503_PIS"
                    }
                }
            }
        },
        "/v1.0.8/accounts": {
            "get": {
                "summary": "Read Account List",
                "description": "Read the identifiers of the available payment account together with \nbooking balance information, depending on the consent granted.\n\nIt is assumed that a consent of the PSU to this access is already given and stored on the ASPSP system. \nThe addressed list of accounts depends then on the PSU ID and the stored consent addressed by consentId, \nrespectively the OAuth2 access token. \n\nReturns all identifiers of the accounts, to which an account access has been granted to through \nthe /consents endpoint by the PSU. \nIn addition, relevant information about the accounts and hyperlinks to corresponding account \ninformation resources are provided if a related consent has been already granted.\n\nRemark: Note that the /consents endpoint optionally offers to grant an access on all available \npayment accounts of a PSU. \nIn this case, this endpoint will deliver the information about all available payment accounts \nof the PSU at this ASPSP.\n\nBOI-REMARK: TPP with PSP_IC role is authorised to much less details about accounts, all attributes that should be filtered are marked on schema AccountDetails.\n",
                "operationId": "getAccountList",
                "tags": [
                    "Account Information Service (AIS)"
                ],
                "security": [
                    {},
                    {
                        "BearerAuthOAuth": []
                    }
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/withBalanceQuery"
                    },
                    {
                        "$ref": "#/components/parameters/X-Request-ID"
                    },
                    {
                        "$ref": "#/components/parameters/Digest"
                    },
                    {
                        "$ref": "#/components/parameters/Signature"
                    },
                    {
                        "$ref": "#/components/parameters/TPP-Signature-Certificate"
                    },
                    {
                        "$ref": "#/components/parameters/consentId_HEADER_mandatory"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-IP-Address_conditionalForAis"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-IP-Port"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Accept"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Accept-Charset"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Accept-Encoding"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Accept-Language"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-User-Agent"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Http-Method"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Device-ID"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Geo-Location"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/OK_200_AccountList"
                    },
                    "400": {
                        "$ref": "#/components/responses/BAD_REQUEST_400_AIS"
                    },
                    "401": {
                        "$ref": "#/components/responses/UNAUTHORIZED_401_AIS"
                    },
                    "403": {
                        "$ref": "#/components/responses/FORBIDDEN_403_AIS"
                    },
                    "404": {
                        "$ref": "#/components/responses/NOT_FOUND_404_AIS"
                    },
                    "405": {
                        "$ref": "#/components/responses/METHOD_NOT_ALLOWED_405_AIS"
                    },
                    "406": {
                        "$ref": "#/components/responses/NOT_ACCEPTABLE_406_AIS"
                    },
                    "408": {
                        "$ref": "#/components/responses/REQUEST_TIMEOUT_408_AIS"
                    },
                    "409": {
                        "$ref": "#/components/responses/CONFLICT_409_AIS"
                    },
                    "415": {
                        "$ref": "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415_AIS"
                    },
                    "429": {
                        "$ref": "#/components/responses/TOO_MANY_REQUESTS_429_AIS"
                    },
                    "500": {
                        "$ref": "#/components/responses/INTERNAL_SERVER_ERROR_500_AIS"
                    },
                    "503": {
                        "$ref": "#/components/responses/SERVICE_UNAVAILABLE_503_AIS"
                    }
                }
            }
        },
        "/v1.0.8/accounts/{account-id}": {
            "get": {
                "summary": "Read Account Details",
                "description": "Reads details about an account, with balances where required. \nIt is assumed that a consent of the PSU to \nthis access is already given and stored on the ASPSP system. \nThe addressed details of this account depends then on the stored consent addressed by consentId, \nrespectively the OAuth2 access token.\n\n**NOTE:** The account-id can represent a multicurrency account. \nIn this case the currency code is set to \"XXX\".\n\nGive detailed information about the addressed account.\n\nGive detailed information about the addressed account together with balance information\n\n\nBOI-REMARK: TPP with PSP_IC role is authorised to much less details about accounts, all attributes that should be filtered are marked on schema AccountDetails.\n",
                "operationId": "readAccountDetails",
                "tags": [
                    "Account Information Service (AIS)"
                ],
                "security": [
                    {},
                    {
                        "BearerAuthOAuth": []
                    }
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/accountId"
                    },
                    {
                        "$ref": "#/components/parameters/withBalanceQuery"
                    },
                    {
                        "$ref": "#/components/parameters/X-Request-ID"
                    },
                    {
                        "$ref": "#/components/parameters/Digest"
                    },
                    {
                        "$ref": "#/components/parameters/Signature"
                    },
                    {
                        "$ref": "#/components/parameters/TPP-Signature-Certificate"
                    },
                    {
                        "$ref": "#/components/parameters/consentId_HEADER_mandatory"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-IP-Address_conditionalForAis"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-IP-Port"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Accept"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Accept-Charset"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Accept-Encoding"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Accept-Language"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-User-Agent"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Http-Method"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Device-ID"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Geo-Location"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/OK_200_AccountDetails"
                    },
                    "400": {
                        "$ref": "#/components/responses/BAD_REQUEST_400_AIS"
                    },
                    "401": {
                        "$ref": "#/components/responses/UNAUTHORIZED_401_AIS"
                    },
                    "403": {
                        "$ref": "#/components/responses/FORBIDDEN_403_AIS"
                    },
                    "404": {
                        "$ref": "#/components/responses/NOT_FOUND_404_AIS"
                    },
                    "405": {
                        "$ref": "#/components/responses/METHOD_NOT_ALLOWED_405_AIS"
                    },
                    "406": {
                        "$ref": "#/components/responses/NOT_ACCEPTABLE_406_AIS"
                    },
                    "408": {
                        "$ref": "#/components/responses/REQUEST_TIMEOUT_408_AIS"
                    },
                    "409": {
                        "$ref": "#/components/responses/CONFLICT_409_AIS"
                    },
                    "415": {
                        "$ref": "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415_AIS"
                    },
                    "429": {
                        "$ref": "#/components/responses/TOO_MANY_REQUESTS_429_AIS"
                    },
                    "500": {
                        "$ref": "#/components/responses/INTERNAL_SERVER_ERROR_500_AIS"
                    },
                    "503": {
                        "$ref": "#/components/responses/SERVICE_UNAVAILABLE_503_AIS"
                    }
                }
            }
        },
        "/v1.0.8/accounts/{account-id}/balances": {
            "get": {
                "summary": "Read Balance",
                "description": "Reads account data from a given account addressed by \"account-id\". \n\n**Remark:** This account-id can be a tokenised identification due to data protection reason since the path \ninformation might be logged on intermediary servers within the ASPSP sphere. \nThis account-id then can be retrieved by the \"GET Account List\" call.\n\nThe account-id is constant at least throughout the lifecycle of a given consent.\n",
                "operationId": "getBalances",
                "tags": [
                    "Account Information Service (AIS)"
                ],
                "security": [
                    {},
                    {
                        "BearerAuthOAuth": []
                    }
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/accountId"
                    },
                    {
                        "$ref": "#/components/parameters/X-Request-ID"
                    },
                    {
                        "$ref": "#/components/parameters/Digest"
                    },
                    {
                        "$ref": "#/components/parameters/Signature"
                    },
                    {
                        "$ref": "#/components/parameters/TPP-Signature-Certificate"
                    },
                    {
                        "$ref": "#/components/parameters/consentId_HEADER_mandatory"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-IP-Address_conditionalForAis"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-IP-Port"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Accept"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Accept-Charset"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Accept-Encoding"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Accept-Language"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-User-Agent"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Http-Method"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Device-ID"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Geo-Location"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/OK_200_Balances"
                    },
                    "400": {
                        "$ref": "#/components/responses/BAD_REQUEST_400_AIS"
                    },
                    "401": {
                        "$ref": "#/components/responses/UNAUTHORIZED_401_AIS"
                    },
                    "403": {
                        "$ref": "#/components/responses/FORBIDDEN_403_AIS"
                    },
                    "404": {
                        "$ref": "#/components/responses/NOT_FOUND_404_AIS"
                    },
                    "405": {
                        "$ref": "#/components/responses/METHOD_NOT_ALLOWED_405_AIS"
                    },
                    "406": {
                        "$ref": "#/components/responses/NOT_ACCEPTABLE_406_AIS"
                    },
                    "408": {
                        "$ref": "#/components/responses/REQUEST_TIMEOUT_408_AIS"
                    },
                    "409": {
                        "$ref": "#/components/responses/CONFLICT_409_AIS"
                    },
                    "415": {
                        "$ref": "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415_AIS"
                    },
                    "429": {
                        "$ref": "#/components/responses/TOO_MANY_REQUESTS_429_AIS"
                    },
                    "500": {
                        "$ref": "#/components/responses/INTERNAL_SERVER_ERROR_500_AIS"
                    },
                    "503": {
                        "$ref": "#/components/responses/SERVICE_UNAVAILABLE_503_AIS"
                    }
                }
            }
        },
        "/v1.0.8/accounts/{account-id}/transactions": {
            "get": {
                "summary": "Read transaction list of an account",
                "description": "Read transaction reports or transaction lists of a given account ddressed by \"account-id\", depending on the steering parameter \n\"bookingStatus\" together with balances.\n\nFor a given account, additional parameters are e.g. the attributes \"dateFrom\" and \"dateTo\". \nThe ASPSP might add balance information, if transaction lists without balances are not supported.\n      \nBOI-REMARK - ASPSP shall choose between responding to read transaction list service in one step to responding in two steps as described below:\n* For 'read transaction list service', conditional attributes - attributes presented to the PSU by the ASPSP through the on-line channels at the current account transaction page.\n* For 'transaction details service' , conditional attribute - attributes presented to the PSU by the ASPSP through the on-line channels, following an added PSU's query (for example - an additional click).\nThe implementation option shall be documented in the ASPSP's XS2A interface.\n",
                "operationId": "getTransactionList",
                "tags": [
                    "Account Information Service (AIS)"
                ],
                "security": [
                    {},
                    {
                        "BearerAuthOAuth": []
                    }
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/accountId"
                    },
                    {
                        "$ref": "#/components/parameters/dateFrom"
                    },
                    {
                        "$ref": "#/components/parameters/dateTo"
                    },
                    {
                        "$ref": "#/components/parameters/entryReferenceFrom"
                    },
                    {
                        "$ref": "#/components/parameters/bookingStatus"
                    },
                    {
                        "$ref": "#/components/parameters/deltaList"
                    },
                    {
                        "$ref": "#/components/parameters/withBalanceQuery"
                    },
                    {
                        "$ref": "#/components/parameters/X-Request-ID"
                    },
                    {
                        "$ref": "#/components/parameters/Digest"
                    },
                    {
                        "$ref": "#/components/parameters/Signature"
                    },
                    {
                        "$ref": "#/components/parameters/TPP-Signature-Certificate"
                    },
                    {
                        "$ref": "#/components/parameters/consentId_HEADER_mandatory"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-IP-Address_conditionalForAis"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-IP-Port"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Accept"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Accept-Charset"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Accept-Encoding"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Accept-Language"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-User-Agent"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Http-Method"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Device-ID"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Geo-Location"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/OK_200_AccountsTransactions"
                    },
                    "400": {
                        "$ref": "#/components/responses/BAD_REQUEST_400_AIS"
                    },
                    "401": {
                        "$ref": "#/components/responses/UNAUTHORIZED_401_AIS"
                    },
                    "403": {
                        "$ref": "#/components/responses/FORBIDDEN_403_AIS"
                    },
                    "404": {
                        "$ref": "#/components/responses/NOT_FOUND_404_AIS"
                    },
                    "405": {
                        "$ref": "#/components/responses/METHOD_NOT_ALLOWED_405_AIS"
                    },
                    "406": {
                        "$ref": "#/components/responses/NOT_ACCEPTABLE_406_AIS"
                    },
                    "408": {
                        "$ref": "#/components/responses/REQUEST_TIMEOUT_408_AIS"
                    },
                    "409": {
                        "$ref": "#/components/responses/CONFLICT_409_AIS"
                    },
                    "415": {
                        "$ref": "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415_AIS"
                    },
                    "429": {
                        "$ref": "#/components/responses/TOO_MANY_REQUESTS_429_AIS"
                    },
                    "500": {
                        "$ref": "#/components/responses/INTERNAL_SERVER_ERROR_500_AIS"
                    },
                    "503": {
                        "$ref": "#/components/responses/SERVICE_UNAVAILABLE_503_AIS"
                    }
                }
            }
        },
        "/v1.0.8/accounts/{account-id}/transactions/{transactionId}": {
            "get": {
                "summary": "Read Transaction Details",
                "description": "Reads transaction details from a given transaction addressed by \"transactionId\" on a given account addressed by \"account-id\". \nThis call is only available on transactions as reported in a JSON format.\n\n**Remark:** Please note that the PATH might be already given in detail by the corresponding entry of the response of the \n\"Read Transaction List\" call within the _links subfield.\n",
                "operationId": "getTransactionDetails",
                "tags": [
                    "Account Information Service (AIS)"
                ],
                "security": [
                    {},
                    {
                        "BearerAuthOAuth": []
                    }
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/accountId"
                    },
                    {
                        "$ref": "#/components/parameters/transactionId"
                    },
                    {
                        "$ref": "#/components/parameters/X-Request-ID"
                    },
                    {
                        "$ref": "#/components/parameters/Digest"
                    },
                    {
                        "$ref": "#/components/parameters/Signature"
                    },
                    {
                        "$ref": "#/components/parameters/TPP-Signature-Certificate"
                    },
                    {
                        "$ref": "#/components/parameters/consentId_HEADER_mandatory"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-IP-Address_conditionalForAis"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-IP-Port"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Accept"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Accept-Charset"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Accept-Encoding"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Accept-Language"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-User-Agent"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Http-Method"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Device-ID"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Geo-Location"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/OK_200_TransactionDetails"
                    },
                    "400": {
                        "$ref": "#/components/responses/BAD_REQUEST_400_AIS"
                    },
                    "401": {
                        "$ref": "#/components/responses/UNAUTHORIZED_401_AIS"
                    },
                    "403": {
                        "$ref": "#/components/responses/FORBIDDEN_403_AIS"
                    },
                    "404": {
                        "$ref": "#/components/responses/NOT_FOUND_404_AIS"
                    },
                    "405": {
                        "$ref": "#/components/responses/METHOD_NOT_ALLOWED_405_AIS"
                    },
                    "406": {
                        "$ref": "#/components/responses/NOT_ACCEPTABLE_406_AIS"
                    },
                    "408": {
                        "$ref": "#/components/responses/REQUEST_TIMEOUT_408_AIS"
                    },
                    "409": {
                        "$ref": "#/components/responses/CONFLICT_409_AIS"
                    },
                    "415": {
                        "$ref": "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415_AIS"
                    },
                    "429": {
                        "$ref": "#/components/responses/TOO_MANY_REQUESTS_429_AIS"
                    },
                    "500": {
                        "$ref": "#/components/responses/INTERNAL_SERVER_ERROR_500_AIS"
                    },
                    "503": {
                        "$ref": "#/components/responses/SERVICE_UNAVAILABLE_503_AIS"
                    }
                }
            }
        },
        "/v1.0.8/card-accounts": {
            "get": {
                "summary": "Reads a list of card accounts",
                "description": "Reads a list of card accounts with additional information, e.g. balance information. \nIt is assumed that a consent of the PSU to this access is already given and stored on the ASPSP system. \nThe addressed list of card accounts depends then on the PSU ID and the stored consent addressed by consentId, \nrespectively the OAuth2 access token. \n",
                "operationId": "getCardAccount",
                "tags": [
                    "Account Information Service (AIS)"
                ],
                "security": [
                    {},
                    {
                        "BearerAuthOAuth": []
                    }
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/X-Request-ID"
                    },
                    {
                        "$ref": "#/components/parameters/Digest"
                    },
                    {
                        "$ref": "#/components/parameters/Signature"
                    },
                    {
                        "$ref": "#/components/parameters/TPP-Signature-Certificate"
                    },
                    {
                        "$ref": "#/components/parameters/consentId_HEADER_mandatory"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-IP-Address_conditionalForAis"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-IP-Port"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Accept"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Accept-Charset"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Accept-Encoding"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Accept-Language"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-User-Agent"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Http-Method"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Device-ID"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Geo-Location"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/OK_200_CardAccountList"
                    },
                    "400": {
                        "$ref": "#/components/responses/BAD_REQUEST_400_AIS"
                    },
                    "401": {
                        "$ref": "#/components/responses/UNAUTHORIZED_401_AIS"
                    },
                    "403": {
                        "$ref": "#/components/responses/FORBIDDEN_403_AIS"
                    },
                    "404": {
                        "$ref": "#/components/responses/NOT_FOUND_404_AIS"
                    },
                    "405": {
                        "$ref": "#/components/responses/METHOD_NOT_ALLOWED_405_AIS"
                    },
                    "406": {
                        "$ref": "#/components/responses/NOT_ACCEPTABLE_406_AIS"
                    },
                    "408": {
                        "$ref": "#/components/responses/REQUEST_TIMEOUT_408_AIS"
                    },
                    "409": {
                        "$ref": "#/components/responses/CONFLICT_409_AIS"
                    },
                    "415": {
                        "$ref": "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415_AIS"
                    },
                    "429": {
                        "$ref": "#/components/responses/TOO_MANY_REQUESTS_429_AIS"
                    },
                    "500": {
                        "$ref": "#/components/responses/INTERNAL_SERVER_ERROR_500_AIS"
                    },
                    "503": {
                        "$ref": "#/components/responses/SERVICE_UNAVAILABLE_503_AIS"
                    }
                }
            }
        },
        "/v1.0.8/card-accounts/{account-id}": {
            "get": {
                "summary": "Reads details about a card account",
                "description": "Reads details about a card account. \nIt is assumed that a consent of the PSU to this access is already given \nand stored on the ASPSP system. The addressed details of this account depends \nthen on the stored consent addressed by consentId, respectively the OAuth2 \naccess token.\n",
                "operationId": "ReadCardAccount",
                "tags": [
                    "Account Information Service (AIS)"
                ],
                "security": [
                    {},
                    {
                        "BearerAuthOAuth": []
                    }
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/accountId"
                    },
                    {
                        "$ref": "#/components/parameters/X-Request-ID"
                    },
                    {
                        "$ref": "#/components/parameters/Digest"
                    },
                    {
                        "$ref": "#/components/parameters/Signature"
                    },
                    {
                        "$ref": "#/components/parameters/TPP-Signature-Certificate"
                    },
                    {
                        "$ref": "#/components/parameters/consentId_HEADER_mandatory"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-IP-Address_conditionalForAis"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-IP-Port"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Accept"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Accept-Charset"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Accept-Encoding"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Accept-Language"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-User-Agent"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Http-Method"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Device-ID"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Geo-Location"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/OK_200_CardAccountDetails"
                    },
                    "400": {
                        "$ref": "#/components/responses/BAD_REQUEST_400_AIS"
                    },
                    "401": {
                        "$ref": "#/components/responses/UNAUTHORIZED_401_AIS"
                    },
                    "403": {
                        "$ref": "#/components/responses/FORBIDDEN_403_AIS"
                    },
                    "404": {
                        "$ref": "#/components/responses/NOT_FOUND_404_AIS"
                    },
                    "405": {
                        "$ref": "#/components/responses/METHOD_NOT_ALLOWED_405_AIS"
                    },
                    "406": {
                        "$ref": "#/components/responses/NOT_ACCEPTABLE_406_AIS"
                    },
                    "408": {
                        "$ref": "#/components/responses/REQUEST_TIMEOUT_408_AIS"
                    },
                    "409": {
                        "$ref": "#/components/responses/CONFLICT_409_AIS"
                    },
                    "415": {
                        "$ref": "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415_AIS"
                    },
                    "429": {
                        "$ref": "#/components/responses/TOO_MANY_REQUESTS_429_AIS"
                    },
                    "500": {
                        "$ref": "#/components/responses/INTERNAL_SERVER_ERROR_500_AIS"
                    },
                    "503": {
                        "$ref": "#/components/responses/SERVICE_UNAVAILABLE_503_AIS"
                    }
                }
            }
        },
        "/v1.0.8/card-accounts/{account-id}/balances": {
            "get": {
                "summary": "Read card account balances",
                "description": "Reads balance data from a given card account addressed by \n\"account-id\". \n\n\nRemark: This account-id can be a tokenised identification due \nto data protection reason since the path information might be \nlogged on intermediary servers within the ASPSP sphere. \nThis account-id then can be retrieved by the \n\"GET Card Account List\" call\n",
                "operationId": "getCardAccountBalances",
                "tags": [
                    "Account Information Service (AIS)"
                ],
                "security": [
                    {},
                    {
                        "BearerAuthOAuth": []
                    }
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/accountId"
                    },
                    {
                        "$ref": "#/components/parameters/X-Request-ID"
                    },
                    {
                        "$ref": "#/components/parameters/Digest"
                    },
                    {
                        "$ref": "#/components/parameters/Signature"
                    },
                    {
                        "$ref": "#/components/parameters/TPP-Signature-Certificate"
                    },
                    {
                        "$ref": "#/components/parameters/consentId_HEADER_mandatory"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-IP-Address_conditionalForAis"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-IP-Port"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Accept"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Accept-Charset"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Accept-Encoding"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Accept-Language"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-User-Agent"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Http-Method"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Device-ID"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Geo-Location"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/OK_200_CardAccountBalances"
                    },
                    "400": {
                        "$ref": "#/components/responses/BAD_REQUEST_400_AIS"
                    },
                    "401": {
                        "$ref": "#/components/responses/UNAUTHORIZED_401_AIS"
                    },
                    "403": {
                        "$ref": "#/components/responses/FORBIDDEN_403_AIS"
                    },
                    "404": {
                        "$ref": "#/components/responses/NOT_FOUND_404_AIS"
                    },
                    "405": {
                        "$ref": "#/components/responses/METHOD_NOT_ALLOWED_405_AIS"
                    },
                    "406": {
                        "$ref": "#/components/responses/NOT_ACCEPTABLE_406_AIS"
                    },
                    "408": {
                        "$ref": "#/components/responses/REQUEST_TIMEOUT_408_AIS"
                    },
                    "409": {
                        "$ref": "#/components/responses/CONFLICT_409_AIS"
                    },
                    "415": {
                        "$ref": "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415_AIS"
                    },
                    "429": {
                        "$ref": "#/components/responses/TOO_MANY_REQUESTS_429_AIS"
                    },
                    "500": {
                        "$ref": "#/components/responses/INTERNAL_SERVER_ERROR_500_AIS"
                    },
                    "503": {
                        "$ref": "#/components/responses/SERVICE_UNAVAILABLE_503_AIS"
                    }
                }
            }
        },
        "/v1.0.8/card-accounts/{account-id}/transactions": {
            "get": {
                "summary": "Read transaction list of an account",
                "description": "Reads account data from a given card account addressed by \"account-id\".\nASPSP shall choose between responding to read card transaction list service in one step to responding in two steps as described below-\n* For 'read card transaction list service', conditional attributes - attributes presented to the PSU by the ASPSP through the on-line channels at the card transaction page.\n* For 'card transaction details service' , conditional attribute - attributes presented to the PSU by the ASPSP through the on-line channels, following an added PSU's query (for example - an additional click).\nThe implementation option shall be documented in the ASPSP's XS2A interface.\n",
                "operationId": "getCardAccountTransactionList",
                "tags": [
                    "Account Information Service (AIS)"
                ],
                "security": [
                    {},
                    {
                        "BearerAuthOAuth": []
                    }
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/accountId"
                    },
                    {
                        "$ref": "#/components/parameters/dateFrom"
                    },
                    {
                        "$ref": "#/components/parameters/dateTo"
                    },
                    {
                        "$ref": "#/components/parameters/entryReferenceFrom"
                    },
                    {
                        "$ref": "#/components/parameters/bookingStatus"
                    },
                    {
                        "$ref": "#/components/parameters/deltaList"
                    },
                    {
                        "$ref": "#/components/parameters/withBalanceQuery"
                    },
                    {
                        "$ref": "#/components/parameters/X-Request-ID"
                    },
                    {
                        "$ref": "#/components/parameters/Digest"
                    },
                    {
                        "$ref": "#/components/parameters/Signature"
                    },
                    {
                        "$ref": "#/components/parameters/TPP-Signature-Certificate"
                    },
                    {
                        "$ref": "#/components/parameters/consentId_HEADER_mandatory"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-IP-Address_conditionalForAis"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-IP-Port"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Accept"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Accept-Charset"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Accept-Encoding"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Accept-Language"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-User-Agent"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Http-Method"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Device-ID"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Geo-Location"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/OK_200_CardAccountsTransactions"
                    },
                    "400": {
                        "$ref": "#/components/responses/BAD_REQUEST_400_AIS"
                    },
                    "401": {
                        "$ref": "#/components/responses/UNAUTHORIZED_401_AIS"
                    },
                    "403": {
                        "$ref": "#/components/responses/FORBIDDEN_403_AIS"
                    },
                    "404": {
                        "$ref": "#/components/responses/NOT_FOUND_404_AIS"
                    },
                    "405": {
                        "$ref": "#/components/responses/METHOD_NOT_ALLOWED_405_AIS"
                    },
                    "406": {
                        "$ref": "#/components/responses/NOT_ACCEPTABLE_406_AIS"
                    },
                    "408": {
                        "$ref": "#/components/responses/REQUEST_TIMEOUT_408_AIS"
                    },
                    "409": {
                        "$ref": "#/components/responses/CONFLICT_409_AIS"
                    },
                    "415": {
                        "$ref": "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415_AIS"
                    },
                    "429": {
                        "$ref": "#/components/responses/TOO_MANY_REQUESTS_429_AIS"
                    },
                    "500": {
                        "$ref": "#/components/responses/INTERNAL_SERVER_ERROR_500_AIS"
                    },
                    "503": {
                        "$ref": "#/components/responses/SERVICE_UNAVAILABLE_503_AIS"
                    }
                }
            }
        },
        "/v1.0.8/consents": {
            "post": {
                "summary": "Create consent",
                "description": "This method create a consent resource, defining access rights to dedicated accounts of \na given PSU-ID. These accounts are addressed explicitly in the method as \nparameters as a core function.\n\n**Side Effects**\nWhen this Consent Request is a request where the \"recurringIndicator\" equals \"true\", \nand if it exists already a former consent for recurring access on account information \nfor the addressed PSU, then the former consent automatically expires as soon as the new \nconsent request is authorised by the PSU.\n\n\nBOI-REMARK:\nBOI is differentiating ASPSPs in the role of banks and of credit card processors.\nFor banks, the detailed consent will differentiate between payment accounts and card\naccounts- payment accounts are addressed by the IBAN as offered in the generic\nNextGenPSD2 standard. If card related information is also addressed, the TPP shall not use\nPANs of a credit card. The TPP may use the IBAN with the additional cashAccountType\n\"CARD\". When card related information is addressed the meaning is that the consent is given\nto all credit cards related to the same IBAN.\nFor credit card processors, all cards which are to be consented for account information need\nto be addressed by maskedPANs specificlly in the Detailed Consent Model. Credit card\nprocessors are mandated to offer in addition the Bank Offered Consent Model, i.e. in a first (or follow up) consent request, the TPP can let the PSU choose all cards to be addressed during authorisation on the ASPSP authorisation page. The TPP will retrieve the maskedPANs of all related cards in the GET /card-accounts/\u2026 calls.\n\nOptional Extension:\nAs an option, an ASPSP might optionally accept a specific access right on the access on all psd2 related services for all available accounts. \n\nAs another option an ASPSP might optionally also accept a command, where only access rights are inserted without mentioning the addressed account. \nThe relation to accounts is then handled afterwards between PSU and ASPSP. \nThis option is not supported for the Embedded SCA Approach. \nAs a last option, an ASPSP might in addition accept a command with access rights\n  * to see the list of available payment accounts or\n  * to see the list of available payment accounts with balances.\n",
                "operationId": "createConsent",
                "tags": [
                    "Account Information Service (AIS)"
                ],
                "security": [
                    {},
                    {
                        "BearerAuthOAuth": []
                    }
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/X-Request-ID"
                    },
                    {
                        "$ref": "#/components/parameters/Digest"
                    },
                    {
                        "$ref": "#/components/parameters/Signature"
                    },
                    {
                        "$ref": "#/components/parameters/TPP-Signature-Certificate"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-ID"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-ID-Type"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Corporate-ID"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Corporate-ID-Type"
                    },
                    {
                        "$ref": "#/components/parameters/TPP-Redirect-Preferred"
                    },
                    {
                        "$ref": "#/components/parameters/TPP-Redirect-URI"
                    },
                    {
                        "$ref": "#/components/parameters/TPP-Nok-Redirect-URI"
                    },
                    {
                        "$ref": "#/components/parameters/TPP-Explicit-Authorisation-Preferred"
                    },
                    {
                        "$ref": "#/components/parameters/TPP-Notification-URI"
                    },
                    {
                        "$ref": "#/components/parameters/TPP-Notification-Content-Preferred"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-IP-Address_conditionalForAis"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-IP-Port"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Accept"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Accept-Charset"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Accept-Encoding"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Accept-Language"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-User-Agent"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Http-Method"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Device-ID"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Geo-Location"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/consents"
                },
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/CREATED_201_Consents"
                    },
                    "400": {
                        "$ref": "#/components/responses/BAD_REQUEST_400_AIS"
                    },
                    "401": {
                        "$ref": "#/components/responses/UNAUTHORIZED_401_AIS"
                    },
                    "403": {
                        "$ref": "#/components/responses/FORBIDDEN_403_AIS"
                    },
                    "404": {
                        "$ref": "#/components/responses/NOT_FOUND_404_AIS"
                    },
                    "405": {
                        "$ref": "#/components/responses/METHOD_NOT_ALLOWED_405_AIS"
                    },
                    "406": {
                        "$ref": "#/components/responses/NOT_ACCEPTABLE_406_AIS"
                    },
                    "408": {
                        "$ref": "#/components/responses/REQUEST_TIMEOUT_408_AIS"
                    },
                    "409": {
                        "$ref": "#/components/responses/CONFLICT_409_AIS"
                    },
                    "415": {
                        "$ref": "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415_AIS"
                    },
                    "429": {
                        "$ref": "#/components/responses/TOO_MANY_REQUESTS_429_AIS"
                    },
                    "500": {
                        "$ref": "#/components/responses/INTERNAL_SERVER_ERROR_500_AIS"
                    },
                    "503": {
                        "$ref": "#/components/responses/SERVICE_UNAVAILABLE_503_AIS"
                    }
                }
            }
        },
        "/v1.0.8/consents/{consentId}": {
            "get": {
                "summary": "Get Consent Request",
                "description": "Returns the content of an account information consent object. \nThis is returning the data for the TPP especially in cases, \nwhere the consent was directly managed between ASPSP and PSU e.g. in a re-direct SCA Approach.\n",
                "operationId": "getConsentInformation",
                "tags": [
                    "Account Information Service (AIS)"
                ],
                "security": [
                    {},
                    {
                        "BearerAuthOAuth": []
                    }
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/consentId_PATH"
                    },
                    {
                        "$ref": "#/components/parameters/X-Request-ID"
                    },
                    {
                        "$ref": "#/components/parameters/Digest"
                    },
                    {
                        "$ref": "#/components/parameters/Signature"
                    },
                    {
                        "$ref": "#/components/parameters/TPP-Signature-Certificate"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-IP-Address_conditionalForAis"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-IP-Port"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Accept"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Accept-Charset"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Accept-Encoding"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Accept-Language"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-User-Agent"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Http-Method"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Device-ID"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Geo-Location"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/OK_200_ConsentInformation"
                    },
                    "400": {
                        "$ref": "#/components/responses/BAD_REQUEST_400_AIS"
                    },
                    "401": {
                        "$ref": "#/components/responses/UNAUTHORIZED_401_AIS"
                    },
                    "403": {
                        "$ref": "#/components/responses/FORBIDDEN_403_AIS"
                    },
                    "404": {
                        "$ref": "#/components/responses/NOT_FOUND_404_AIS"
                    },
                    "405": {
                        "$ref": "#/components/responses/METHOD_NOT_ALLOWED_405_AIS"
                    },
                    "406": {
                        "$ref": "#/components/responses/NOT_ACCEPTABLE_406_AIS"
                    },
                    "408": {
                        "$ref": "#/components/responses/REQUEST_TIMEOUT_408_AIS"
                    },
                    "409": {
                        "$ref": "#/components/responses/CONFLICT_409_AIS"
                    },
                    "415": {
                        "$ref": "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415_AIS"
                    },
                    "429": {
                        "$ref": "#/components/responses/TOO_MANY_REQUESTS_429_AIS"
                    },
                    "500": {
                        "$ref": "#/components/responses/INTERNAL_SERVER_ERROR_500_AIS"
                    },
                    "503": {
                        "$ref": "#/components/responses/SERVICE_UNAVAILABLE_503_AIS"
                    }
                }
            },
            "delete": {
                "summary": "Delete Consent",
                "description": "The TPP can delete an account information consent object if needed.",
                "operationId": "deleteConsent",
                "tags": [
                    "Account Information Service (AIS)"
                ],
                "security": [
                    {},
                    {
                        "BearerAuthOAuth": []
                    }
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/consentId_PATH"
                    },
                    {
                        "$ref": "#/components/parameters/X-Request-ID"
                    },
                    {
                        "$ref": "#/components/parameters/Digest"
                    },
                    {
                        "$ref": "#/components/parameters/Signature"
                    },
                    {
                        "$ref": "#/components/parameters/TPP-Signature-Certificate"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-IP-Address_conditionalForAis"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-IP-Port"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Accept"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Accept-Charset"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Accept-Encoding"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Accept-Language"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-User-Agent"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Http-Method"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Device-ID"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Geo-Location"
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#/components/responses/NO_CONTENT_204_Consents"
                    },
                    "400": {
                        "$ref": "#/components/responses/BAD_REQUEST_400_AIS"
                    },
                    "401": {
                        "$ref": "#/components/responses/UNAUTHORIZED_401_AIS"
                    },
                    "403": {
                        "$ref": "#/components/responses/FORBIDDEN_403_AIS"
                    },
                    "404": {
                        "$ref": "#/components/responses/NOT_FOUND_404_AIS"
                    },
                    "405": {
                        "$ref": "#/components/responses/METHOD_NOT_ALLOWED_405_AIS"
                    },
                    "406": {
                        "$ref": "#/components/responses/NOT_ACCEPTABLE_406_AIS"
                    },
                    "408": {
                        "$ref": "#/components/responses/REQUEST_TIMEOUT_408_AIS"
                    },
                    "409": {
                        "$ref": "#/components/responses/CONFLICT_409_AIS"
                    },
                    "415": {
                        "$ref": "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415_AIS"
                    },
                    "429": {
                        "$ref": "#/components/responses/TOO_MANY_REQUESTS_429_AIS"
                    },
                    "500": {
                        "$ref": "#/components/responses/INTERNAL_SERVER_ERROR_500_AIS"
                    },
                    "503": {
                        "$ref": "#/components/responses/SERVICE_UNAVAILABLE_503_AIS"
                    }
                }
            }
        },
        "/v1.0.8/consents/{consentId}/status": {
            "get": {
                "summary": "Consent status request",
                "description": "Read the status of an account information consent resource.",
                "operationId": "getConsentStatus",
                "tags": [
                    "Account Information Service (AIS)"
                ],
                "security": [
                    {},
                    {
                        "BearerAuthOAuth": []
                    }
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/consentId_PATH"
                    },
                    {
                        "$ref": "#/components/parameters/X-Request-ID"
                    },
                    {
                        "$ref": "#/components/parameters/Digest"
                    },
                    {
                        "$ref": "#/components/parameters/Signature"
                    },
                    {
                        "$ref": "#/components/parameters/TPP-Signature-Certificate"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-IP-Address_conditionalForAis"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-IP-Port"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Accept"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Accept-Charset"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Accept-Encoding"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Accept-Language"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-User-Agent"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Http-Method"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Device-ID"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Geo-Location"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/OK_200_ConsentStatus"
                    },
                    "400": {
                        "$ref": "#/components/responses/BAD_REQUEST_400_AIS"
                    },
                    "401": {
                        "$ref": "#/components/responses/UNAUTHORIZED_401_AIS"
                    },
                    "403": {
                        "$ref": "#/components/responses/FORBIDDEN_403_AIS"
                    },
                    "404": {
                        "$ref": "#/components/responses/NOT_FOUND_404_AIS"
                    },
                    "405": {
                        "$ref": "#/components/responses/METHOD_NOT_ALLOWED_405_AIS"
                    },
                    "406": {
                        "$ref": "#/components/responses/NOT_ACCEPTABLE_406_AIS"
                    },
                    "408": {
                        "$ref": "#/components/responses/REQUEST_TIMEOUT_408_AIS"
                    },
                    "409": {
                        "$ref": "#/components/responses/CONFLICT_409_AIS"
                    },
                    "415": {
                        "$ref": "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415_AIS"
                    },
                    "429": {
                        "$ref": "#/components/responses/TOO_MANY_REQUESTS_429_AIS"
                    },
                    "500": {
                        "$ref": "#/components/responses/INTERNAL_SERVER_ERROR_500_AIS"
                    },
                    "503": {
                        "$ref": "#/components/responses/SERVICE_UNAVAILABLE_503_AIS"
                    }
                }
            }
        },
        "/v1.0.8/consents/{consentId}/authorisations/{authorisationId}": {
            "get": {
                "summary": "Read the SCA status of the consent authorisation.",
                "description": "This method returns the SCA status of a consent initiation's authorisation sub-resource.\n",
                "operationId": "getConsentScaStatus",
                "tags": [
                    "Account Information Service (AIS)",
                    "Common Services"
                ],
                "security": [
                    {},
                    {
                        "BearerAuthOAuth": []
                    }
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/consentId_PATH"
                    },
                    {
                        "$ref": "#/components/parameters/authorisationId"
                    },
                    {
                        "$ref": "#/components/parameters/X-Request-ID"
                    },
                    {
                        "$ref": "#/components/parameters/Digest"
                    },
                    {
                        "$ref": "#/components/parameters/Signature"
                    },
                    {
                        "$ref": "#/components/parameters/TPP-Signature-Certificate"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-IP-Address_conditionalForAis"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-IP-Port"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Accept"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Accept-Charset"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Accept-Encoding"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Accept-Language"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-User-Agent"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Http-Method"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Device-ID"
                    },
                    {
                        "$ref": "#/components/parameters/PSU-Geo-Location"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/OK_200_ScaStatus"
                    },
                    "400": {
                        "$ref": "#/components/responses/BAD_REQUEST_400_AIS"
                    },
                    "401": {
                        "$ref": "#/components/responses/UNAUTHORIZED_401_AIS"
                    },
                    "403": {
                        "$ref": "#/components/responses/FORBIDDEN_403_AIS"
                    },
                    "404": {
                        "$ref": "#/components/responses/NOT_FOUND_404_AIS"
                    },
                    "405": {
                        "$ref": "#/components/responses/METHOD_NOT_ALLOWED_405_AIS"
                    },
                    "406": {
                        "$ref": "#/components/responses/NOT_ACCEPTABLE_406_AIS"
                    },
                    "408": {
                        "$ref": "#/components/responses/REQUEST_TIMEOUT_408_AIS"
                    },
                    "409": {
                        "$ref": "#/components/responses/CONFLICT_409_AIS"
                    },
                    "415": {
                        "$ref": "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415_AIS"
                    },
                    "429": {
                        "$ref": "#/components/responses/TOO_MANY_REQUESTS_429_AIS"
                    },
                    "500": {
                        "$ref": "#/components/responses/INTERNAL_SERVER_ERROR_500_AIS"
                    },
                    "503": {
                        "$ref": "#/components/responses/SERVICE_UNAVAILABLE_503_AIS"
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "BearerAuthOAuth": {
                "description": "Bearer Token. \n\nIs contained only, if an OAuth2 based authentication was performed in a pre-step or \nan OAuth2 based SCA was performed in an preceding AIS service in the same session.\n",
                "type": "http",
                "scheme": "bearer"
            }
        },
        "schemas": {
            "paymentId": {
                "description": "Resource identification of the generated payment initiation resource.",
                "type": "string",
                "example": "1234-wertiq-983"
            },
            "authorisationId": {
                "description": "Resource identification of the related SCA",
                "type": "string",
                "example": "123auth456"
            },
            "authenticationMethodId": {
                "description": "An identification provided by the ASPSP for the later identification of the authentication method selection.\n",
                "type": "string",
                "maxLength": 35,
                "example": "myAuthenticationID"
            },
            "accountId": {
                "description": "This identification is denoting the addressed account, where the transaction has been performed.",
                "type": "string",
                "example": "qwer3456tzui7890"
            },
            "consentId": {
                "description": "ID of the corresponding consent object as returned by an Account Information Consent Request.\n",
                "type": "string",
                "maxLength": 512
            },
            "authorization": {
                "description": "Authorization by OAuth2 based Protocol.\n",
                "type": "string"
            },
            "transactionId": {
                "description": "This identification is given by the attribute transactionId of the corresponding entry of a transaction list.\n",
                "type": "string",
                "example": "3dc3d5b3-7023-4848-9853-f5400a64e80f"
            },
            "cardTransactionId": {
                "description": "Unique end to end identity.",
                "type": "string",
                "maxLength": 35
            },
            "terminalId": {
                "description": "Identification of the Terminal, where the card has been used.",
                "type": "string",
                "maxLength": 35
            },
            "transactionStatus": {
                "description": "The transaction status is filled with codes of the ISO 20022 data table:\n- 'ACCC': 'AcceptedSettlementCompleted' -\n  Settlement on the creditor's account has been completed.\n- 'ACCP': 'AcceptedCustomerProfile' - \n  Preceding check of technical validation was successful. \n  Customer profile check was also successful.\n- 'ACSC': 'AcceptedSettlementCompleted' - \n  Settlement on the debtor\ufffds account has been completed.\n  \n  **Usage:** this can be used by the first agent to report to the debtor that the transaction has been completed. \n  \n  **Warning:** this status is provided for transaction status reasons, not for financial information. \n  It can only be used after bilateral agreement.\n- 'ACSP': 'AcceptedSettlementInProcess' - \n  All preceding checks such as technical validation and customer profile were successful and therefore the payment initiation has been accepted for execution.\n- 'ACTC': 'AcceptedTechnicalValidation' - \n  Authentication and syntactical and semantical validation are successful.\n- 'ACWC': 'AcceptedWithChange' - \n  Instruction is accepted but a change will be made, such as date or remittance not sent.\n- 'ACWP': 'AcceptedWithoutPosting' - \n  Payment instruction included in the credit transfer is accepted without being posted to the creditor customer\ufffds account.\n- 'RCVD': 'Received' - \n  Payment initiation has been received by the receiving agent.\n- 'PDNG': 'Pending' - \n  Payment initiation or individual transaction included in the payment initiation is pending. \n  Further checks and status update will be performed.\n- 'RJCT': 'Rejected' - \n  Payment initiation has been cancelled before execution\n  Remark: This codeis accepted as new code by ISO20022.\n- 'CANC': 'Cancelled' - \n  Payment initation has been cancelled before execution.\n  Remark: This code is accepted as new code by ISO20022.\n- 'ACFC': 'AcceptedFundsChecked' -\n  Preceding check of technical validation and customer profile was successful and an automatic funds check was positive .\n  Remark: This code is accepted as new code by ISO20022.\n- 'PATC': 'PartiallyAcceptedTechnical'\n  Correct The payment initiation needs multiple authentications, where some but not yet all have been performed. Syntactical and semantical validations are successful.\n  Remark: This code is accepted as new code by ISO20022.\n- 'PART': 'PartiallyAccepted' -\n  A number of transactions have been accepted, whereas another number of transactions have not yet achieved \n",
                "type": "string",
                "enum": [
                    "ACCC",
                    "ACCP",
                    "ACSC",
                    "ACSP",
                    "ACTC",
                    "ACWC",
                    "ACWP",
                    "RCVD",
                    "PDNG",
                    "RJCT",
                    "CANC",
                    "ACFC",
                    "PATC",
                    "PART"
                ],
                "example": "ACCP"
            },
            "scaStatus": {
                "description": "This data element is containing information about the status of the SCA method applied. \n\nThe following codes are defined for this data type.\n\n  * 'received':\n    An authorisation or cancellation-authorisation resource has been created successfully.\n  * 'psuIdentified':\n    The PSU related to the authorisation or cancellation-authorisation resource has been identified.\n  * 'psuAuthenticated':\n    The PSU related to the authorisation or cancellation-authorisation resource has been identified and authenticated e.g. by a password or by an access token.\n  * 'started':\n    The addressed SCA routine has been started.\n  * 'finalised':\n    The SCA routine has been finalised successfully.\n  * 'failed':\n    The SCA routine failed\n  * 'exempted':\n    SCA was exempted for the related transaction, the related authorisation is successful.\n",
                "type": "string",
                "enum": [
                    "received",
                    "psuIdentified",
                    "psuAuthenticated",
                    "started",
                    "finalised",
                    "failed",
                    "exempted"
                ],
                "example": "psuAuthenticated"
            },
            "consentStatus": {
                "description": "This is the overall lifecycle status of the consent.\n\nBOI-REMARK: Any further codes should be cordinated in advance with BOI.\n\nValid values are:\n  - 'received': The consent data have been received and are technically correct. \n    The data is not authorised yet.\n  - 'rejected': The consent data have been rejected e.g. since no successful authorisation has taken place.\n  - 'partiallyAuthorised': The consent is due to a multi-level authorisation, some but not all mandated authorisations have been performed yet.\n  - 'valid': The consent is accepted and valid for GET account data calls and others as specified in the consent object.\n  - 'revokedByPsu': The consent has been revoked by the PSU towards the ASPSP.\n  - 'expired': The consent expired.\n  - 'terminatedByTpp': The corresponding TPP has terminated the consent by applying the DELETE method to the consent resource.\n  - 'suspendedByASPSP' : The consent has been suspended by the ASPSP, according to requirements that are detailed in BOI's directive.\n  - 'blockedByASPSP' : The consent has been blocked by the ASPSP, according to requirements that are detailed in BOI's directive.\n\nThe ASPSP might add further codes. These codes then shall be contained in the ASPSP's documentation of the XS2A interface \nand has to be added to this API definition as well.\n",
                "type": "string",
                "enum": [
                    "received",
                    "rejected",
                    "partiallyAuthorised",
                    "valid",
                    "revokedByPsu",
                    "expired",
                    "terminatedByTpp",
                    "suspendedByASPSP",
                    "blockedByASPSP"
                ]
            },
            "transactionFeeIndicator": {
                "description": "If equals 'true', the transaction will involve specific transaction cost as shown by the ASPSP in\ntheir public price list or as agreed between ASPSP and PSU.\nIf equals 'false', the transaction will not involve additional specific transaction costs to the PSU.\nIf this data element is not used, there is no information about transaction fees unless the fee amount is given explicitly in the data element transactionFees and/or currencyConversionFees.\n",
                "type": "boolean"
            },
            "recurringIndicator": {
                "description": "\"true\", if the consent is for recurring access to the account data.\n\n\"false\", if the consent is for one access to the account data.\n",
                "type": "boolean",
                "example": false
            },
            "combinedServiceIndicator": {
                "description": "If \"true\" indicates that a payment initiation service will be addressed in the same \"session\".\n",
                "type": "boolean",
                "example": false
            },
            "batchBookingPreferred": {
                "description": "If this element equals 'true', the PSU prefers only one booking entry. \nIf this element equals 'false', the PSU prefers individual booking of all contained individual transactions. \n    The ASPSP will follow this preference according to contracts agreed on with the PSU.\n",
                "type": "boolean",
                "example": false
            },
            "scaMethods": {
                "description": "This data element might be contained, if SCA is required and if the PSU has a choice between different\nauthentication methods.\n\nDepending on the risk management of the ASPSP this choice might be offered before or after the PSU\nhas been identified with the first relevant factor, or if an access token is transported.\n\nIf this data element is contained, then there is also an hyperlink of type 'startAuthorisationWithAuthenticationMethodSelection'\ncontained in the response body.\n\nThese methods shall be presented towards the PSU for selection by the TPP.\n",
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/authenticationObject"
                }
            },
            "authenticationType": {
                "description": "Type of the authentication method.\n\nMore authentication types might be added during implementation projects and documented in the ASPSP documentation.\n\n  - 'SMS_OTP': An SCA method, where an OTP linked to the transaction to be authorised is sent to the PSU through a SMS channel.\n  - 'CHIP_OTP': An SCA method, where an OTP is generated by a chip card, e.g. an TOP derived from an EMV cryptogram. \n    To contact the card, the PSU normally needs a (handheld) device. \n    With this device, the PSU either reads the challenging data through a visual interface like flickering or \n    the PSU types in the challenge through the device key pad. \n    The device then derives an OTP from the challenge data and displays the OTP to the PSU.\n  - 'PHOTO_OTP': An SCA method, where the challenge is a QR code or similar encoded visual data \n    which can be read in by a consumer device or specific mobile app. \n    The device resp. the specific app than derives an OTP from the visual challenge data and displays \n    the OTP to the PSU.\n  - 'PUSH_OTP': An OTP is pushed to a dedicated authentication APP and displayed to the PSU.\n",
                "type": "string",
                "enum": [
                    "SMS_OTP",
                    "CHIP_OTP",
                    "PHOTO_OTP",
                    "PUSH_OTP"
                ]
            },
            "authenticationObject": {
                "description": "Authentication Object\n",
                "type": "object",
                "required": [
                    "authenticationType",
                    "authenticationMethodId"
                ],
                "properties": {
                    "authenticationType": {
                        "$ref": "#/components/schemas/authenticationType"
                    },
                    "authenticationVersion": {
                        "description": "Depending on the \"authenticationType\".\nThis version can be used by differentiating authentication tools used within performing OTP generation in the same authentication type.\nThis version can be referred to in the ASPSP?s documentation.\n",
                        "type": "string"
                    },
                    "authenticationMethodId": {
                        "$ref": "#/components/schemas/authenticationMethodId"
                    },
                    "name": {
                        "description": "This is the name of the authentication method defined by the PSU in the Online Banking frontend of the ASPSP.\nAlternatively this could be a description provided by the ASPSP like \"SMS OTP on phone +49160 xxxxx 28\".\nThis name shall be used by the TPP when presenting a list of authentication methods to the PSU, if available.\n",
                        "type": "string",
                        "example": "SMS OTP on phone +49160 xxxxx 28"
                    },
                    "explanation": {
                        "description": "Detailed information about the SCA method for the PSU.\n",
                        "type": "string",
                        "example": "Detailed information about the SCA method for the PSU."
                    }
                }
            },
            "fundsAvailable": {
                "description": "Equals true if sufficient funds are available at the time of the request, false otherwise.\n\nThis datalemenet is allways contained in a confirmation of funds response.\n\nThis data element is contained in a payment status response, \nif supported by the ASPSP, if a funds check has been performed and \nif the transactionStatus is \"ATCT\", \"ACWC\" or \"ACCP\".\n",
                "type": "boolean"
            },
            "hrefType": {
                "description": "Link to a resource",
                "type": "object",
                "properties": {
                    "href": {
                        "$ref": "#/components/schemas/hrefEntry"
                    }
                }
            },
            "hrefEntry": {
                "description": "Link to a resource",
                "type": "string",
                "example": "/v1.0.8/payments/sepa-credit-transfers/1234-wertiq-983"
            },
            "authorisationsList": {
                "description": "An array of all authorisationIds",
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/authorisationId"
                }
            },
            "authorisations": {
                "description": "An array of all authorisationIds",
                "type": "object",
                "required": [
                    "authorisationIds"
                ],
                "properties": {
                    "authorisationIds": {
                        "$ref": "#/components/schemas/authorisationsList"
                    }
                }
            },
            "consentAccountReference": {
                "description": "Reference to an account by either\n  * IBAN, of a payment accounts, or\n  * PAN of a card in a masked form, or\n  * an alias to access a payment account via a registered mobile phone number (MSISDN).\n  \n  BOI-REMARK: The currency of the account is needed, where the currency is an account charactaristic identifying certain sub-accounts under one external identifier like an IBAN. Once the currency wasn't defined, a specific IBAN includes all the currencies relates to this IBAN.\n  \n",
                "type": "object",
                "properties": {
                    "iban": {
                        "$ref": "#/components/schemas/iban"
                    },
                    "maskedPan": {
                        "$ref": "#/components/schemas/maskedPan"
                    },
                    "msisdn": {
                        "$ref": "#/components/schemas/msisdn"
                    },
                    "currency": {
                        "$ref": "#/components/schemas/consentCurrencyCode"
                    },
                    "other": {
                        "$ref": "#/components/schemas/otherType"
                    },
                    "cashAccountType": {
                        "$ref": "#/components/schemas/cashAccountType"
                    }
                }
            },
            "accountReference": {
                "description": "Reference to an account by either\n  * IBAN, of a payment accounts, or\n  * BBAN, for payment accounts if there is no IBAN, or \n  * PAN of a card in a masked form, or\n  * an alias to access a payment account via a registered mobile phone number (MSISDN).\n  \n  BOI-REMARK: The currency of the account is needed, where the currency is an account charactaristic identifying certain sub-accounts under one external identifier like an IBAN. Once the currncy wasn't defined, a specific IBAN includes all the currencies relates to this IBAN.\n  \n",
                "type": "object",
                "properties": {
                    "iban": {
                        "$ref": "#/components/schemas/iban"
                    },
                    "bban": {
                        "$ref": "#/components/schemas/bban"
                    },
                    "maskedPan": {
                        "$ref": "#/components/schemas/maskedPan"
                    },
                    "other": {
                        "$ref": "#/components/schemas/otherType"
                    },
                    "msisdn": {
                        "$ref": "#/components/schemas/msisdn"
                    },
                    "currency": {
                        "$ref": "#/components/schemas/currencyCode"
                    },
                    "cashAccountType": {
                        "$ref": "#/components/schemas/cashAccountType"
                    }
                }
            },
            "balanceType": {
                "description": "The following balance types are defined:\n  - \"closingBooked\": #BOI-REMARK: THIS TYPE IS MANDATORY\n    Balance of the account at the end of the pre-agreed account reporting period. \n    It is the sum of the opening booked balance at the beginning of the period and all entries booked \n    to the account during the pre-agreed account reporting period.\n    \n    For card-accounts, this is composed of\n    \n      - invoiced, but not yet paid entries\n  - \"expected\": #BOI-REMARK: THIS TYPE IS CONDITIONAL\n    Balance composed of booked entries and pending items known at the time of calculation, \n    which projects the end of day balance if everything is booked on the account and no other entry is posted.\n    \n    For card accounts, this is composed of \n      - invoiced, but not yet paid entries, \n      - not yet invoiced but already booked entries and\n      - pending items (not yet booked)\n    \n    \n    For card-accounts:\n    \n    \"money to spend with the value of a pre-approved credit limit on the card account\"\n    \n  - \"openingBooked\":  #BOI-REMARK: THIS TYPE IS OPTIONAL\n    Book balance of the account at the beginning of the account reporting period. \n    It always equals the closing book balance from the previous report.\n  - \"interimAvailable\":  #BOI-REMARK: THIS TYPE IS CONDITIONAL\n    Available balance calculated in the course of the account ?servicer?s business day, \n    at the time specified, and subject to further changes during the business day. \n    The interim balance is calculated on the basis of booked credit and debit items during the calculation \n    time/period specified.\n    \n    For card-accounts, this is composed of\n      - invoiced, but not yet paid entries, \n      - not yet invoiced but already booked entries\n  - \"interimBooked\": #BOI-REMARK: THIS TYPE IS CONDITIONAL\n    Balance calculated in the course of the account servicer's business day, at the time specified, \n    and subject to further changes during the business day. \n    The interim balance is calculated on the basis of booked credit and debit items during the calculation time/period \n    specified.\n  - \"forwardAvailable\": #BOI-REMARK: THIS TYPE IS CONDITIONAL\n    Forward available balance of money that is at the disposal of the account owner on the date specified.\n  - \"nonInvoiced\":  #BOI-REMARK: THIS TYPE IS CONDITIONAL\n    Only for card accounts, to be checked yet. \n",
                "type": "string",
                "enum": [
                    "closingBooked",
                    "expected",
                    "openingBooked",
                    "interimAvailable",
                    "interimBooked",
                    "forwardAvailable",
                    "nonInvoiced"
                ]
            },
            "accountAccess": {
                "description": "Requested access services for a consent.\n",
                "type": "object",
                "properties": {
                    "accounts": {
                        "description": "Is asking for detailed account information. \n\nIf the array is empty, the TPP is asking for an accessible account list. \nThis may be restricted in a PSU/ASPSP authorization dialogue.\nIf the array is empty, also the arrays for balances or transactions shall be empty, if used\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/consentAccountReference"
                        }
                    },
                    "balances": {
                        "description": "Is asking for balances of the addressed accounts.\n\nIf the array is empty, the TPP is asking for the balances of all accessible account lists. \nThis may be restricted in a PSU/ASPSP authorization dialogue.\nIf the array is empty, also the arrays for accounts or transactions shall be empty, if used.\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/accountReference"
                        }
                    },
                    "transactions": {
                        "description": "Is asking for transactions of the addressed accounts. \n\nIf the array is empty, the TPP is asking for the transactions of all accessible account lists. \nThis may be restricted in a PSU/ASPSP authorization dialogue.\nIf the array is empty, also the arrays for accounts or balances shall be empty, if used.\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/accountReference"
                        }
                    },
                    "availableAccounts": {
                        "description": "Optional.\n\nOnly the value \"allAccounts\" is admitted.\n",
                        "type": "string",
                        "enum": [
                            "allAccounts"
                        ]
                    },
                    "availableAccountsWithBalance": {
                        "description": "Optional if supported by API provider.            \nOnly the value \"allAccounts\" is admitted.\n",
                        "type": "string",
                        "enum": [
                            "allAccounts"
                        ]
                    },
                    "allPsd2": {
                        "description": "Optional if supported by API provider.\n\nOnly the value \"allAccounts\" is admitted.\n",
                        "type": "string",
                        "enum": [
                            "allAccounts"
                        ]
                    }
                }
            },
            "cashAccountType": {
                "description": "ExternalCashAccountType1Code from ISO 20022.\nBOI-REMARK - The API provider may restrict the accepted values further (e.g. only \"CARD\" and \"CACC\" may be supported).\nThe TPP includes this element, if the account reference may identify several accounts of different types, but the TPP only requests access to a specific type (e.g. card accounts).\n",
                "type": "string",
                "enum": [
                    "CARD",
                    "CACC"
                ]
            },
            "accountStatus": {
                "description": "Account status. The value is one of the following:\n  - \"enabled\": account is available\n  - \"deleted\": account is terminated\n  - \"blocked\": account is blocked e.g. for legal reasons\nIf this field is not used, than the account is available in the sense of this specification.\n",
                "type": "string",
                "enum": [
                    "enabled",
                    "deleted",
                    "blocked"
                ]
            },
            "accountDetails": {
                "description": "The ASPSP shall give at least one of the account reference identifiers:\n  - iban\n  - bban\n  - maskedPan\n  - msisdn\n  - other\nIf the account is a multicurrency account currency code in \"currency\" is set to \"XXX\".\n",
                "type": "object",
                "required": [
                    "currency"
                ],
                "properties": {
                    "resourceId": {
                        "description": "This shall be filled, if addressable resource are created by the ASPSP on the /accounts or /card-accounts endpoint.",
                        "type": "string"
                    },
                    "iban": {
                        "$ref": "#/components/schemas/iban"
                    },
                    "bban": {
                        "$ref": "#/components/schemas/bban"
                    },
                    "msisdn": {
                        "$ref": "#/components/schemas/msisdn"
                    },
                    "currency": {
                        "$ref": "#/components/schemas/currencyCode"
                    },
                    "ownerName": {
                        "description": "Name of the legal account owner. If there is more than one owner then e.g. two names might be noted here. For a corporate account, the corporate name is used for this attribute.",
                        "type": "string",
                        "maxLength": 140
                    },
                    "name": {
                        "description": "Name of the account given by the bank or the PSU in online-banking.",
                        "type": "string",
                        "maxLength": 70
                    },
                    "displayName": {
                        "$ref": "#/components/schemas/displayName"
                    },
                    "product": {
                        "description": "Product name of the bank for this account, proprietary definition.",
                        "type": "string",
                        "maxLength": 35
                    },
                    "cashAccountType": {
                        "$ref": "#/components/schemas/cashAccountType"
                    },
                    "status": {
                        "$ref": "#/components/schemas/accountStatus"
                    },
                    "bic": {
                        "$ref": "#/components/schemas/bicfi"
                    },
                    "linkedAccounts": {
                        "description": "Case of a set of pending card transactions, the APSP will provide the relevant cash account the card is set up on.",
                        "type": "string",
                        "maxLength": 70
                    },
                    "usage": {
                        "description": "Specifies the usage of the account\n  * PRIV: private personal account\n  * ORGA: professional account\n",
                        "type": "string",
                        "maxLength": 4,
                        "enum": [
                            "PRIV",
                            "ORGA"
                        ]
                    },
                    "details": {
                        "description": "Specifications that might be provided by the ASPSP\n  - characteristics of the account\n  - characteristics of the relevant card\n",
                        "type": "string",
                        "maxLength": 500
                    },
                    "balances": {
                        "$ref": "#/components/schemas/balanceList"
                    },
                    "_links": {
                        "$ref": "#/components/schemas/_linksAccountDetails"
                    },
                    "other": {
                        "$ref": "#/components/schemas/otherType"
                    }
                }
            },
            "cardAccountDetails": {
                "description": "Card account details.\n",
                "type": "object",
                "required": [
                    "maskedPan",
                    "currency"
                ],
                "properties": {
                    "resourceId": {
                        "description": "This is the data element to be used in the path when retrieving data from a dedicated account.\nThis shall be filled, if addressable resource are created by the ASPSP on the /card-accounts endpoint.\n",
                        "type": "string"
                    },
                    "maskedPan": {
                        "$ref": "#/components/schemas/maskedPan"
                    },
                    "currency": {
                        "$ref": "#/components/schemas/currencyCode"
                    },
                    "ownerName": {
                        "$ref": "#/components/schemas/ownerName"
                    },
                    "name": {
                        "description": "Name of the card / card account, as assigned by the ASPSP, \nin agreement with the account owner in order to provide an additional means of identification of the account.\n",
                        "type": "string",
                        "maxLength": 70
                    },
                    "displayName": {
                        "$ref": "#/components/schemas/displayName"
                    },
                    "product": {
                        "description": "Product Name of the Bank for this card / card account, proprietary definition.\n",
                        "type": "string",
                        "maxLength": 35
                    },
                    "debitAccounting": {
                        "$ref": "#/components/schemas/debitAccounting"
                    },
                    "status": {
                        "$ref": "#/components/schemas/accountStatus"
                    },
                    "usage": {
                        "description": "Specifies the usage of the card / card account:\n  * PRIV: private personal card / card account\n  * ORGA: professional card / card account\n",
                        "type": "string",
                        "maxLength": 4,
                        "enum": [
                            "PRIV",
                            "ORGA"
                        ]
                    },
                    "details": {
                        "description": "Specifications that might be provided by the ASPSP:\n  - characteristics of the account\n  - characteristics of the relevant card\n  BOI REMARK:\n  For example\n  - charactaristic of the creditLimit level.\n  - charactaristic of the monthly billing date.\n",
                        "type": "string",
                        "maxLength": 1000
                    },
                    "creditLimit": {
                        "$ref": "#/components/schemas/amount"
                    },
                    "balances": {
                        "$ref": "#/components/schemas/balanceList"
                    },
                    "_links": {
                        "$ref": "#/components/schemas/_linksAccountDetails"
                    }
                }
            },
            "accountList": {
                "description": "List of accounts with details.\n",
                "type": "object",
                "required": [
                    "accounts"
                ],
                "properties": {
                    "accounts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/accountDetails"
                        }
                    }
                }
            },
            "cardAccountList": {
                "description": "List of card accounts with details.\n",
                "type": "object",
                "required": [
                    "cardAccounts"
                ],
                "properties": {
                    "cardAccounts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/cardAccountDetails"
                        }
                    }
                }
            },
            "otherType": {
                "description": "In cases where the specifically defined criteria (IBAN, BBAN, MSISDN) are not provided to identify an instance of the respective account type (e.g. a savings account), the ASPSP shall include a proprietary ID of the respective account that uniquely identifies the account for this ASPSP.",
                "type": "object",
                "required": [
                    "identification"
                ],
                "properties": {
                    "identification": {
                        "description": "Proprietary identification of the account.",
                        "type": "string",
                        "maxLength": 35
                    },
                    "schemeNameCode": {
                        "description": "An entry provided by an external ISO code list.",
                        "type": "string",
                        "maxLength": 35
                    },
                    "schemeNameProprietary": {
                        "description": "A scheme name defined in a proprietary way.",
                        "type": "string",
                        "maxLength": 35
                    },
                    "issuer": {
                        "description": "Issuer of the identification.",
                        "type": "string",
                        "maxLength": 35
                    }
                }
            },
            "accountReport": {
                "description": "JSON based account report.\nThis account report contains transactions resulting from the query parameters.\n\n'booked' shall be contained if bookingStatus parameter is set to \"booked\" or \"both\".\n\n'pending' is not contained if the bookingStatus parameter is set to \"booked\".\n",
                "type": "object",
                "required": [
                    "_links"
                ],
                "properties": {
                    "booked": {
                        "$ref": "#/components/schemas/transactionList"
                    },
                    "pending": {
                        "$ref": "#/components/schemas/transactionList"
                    },
                    "information": {
                        "$ref": "#/components/schemas/transactionList"
                    },
                    "_links": {
                        "$ref": "#/components/schemas/_linksAccountReport"
                    }
                }
            },
            "cardAccountReport": {
                "description": "JSON based card account report.\n\nThis card account report contains transactions resulting from the query parameters.\n",
                "type": "object",
                "required": [
                    "booked",
                    "_links"
                ],
                "properties": {
                    "booked": {
                        "$ref": "#/components/schemas/cardTransactionList"
                    },
                    "pending": {
                        "$ref": "#/components/schemas/cardTransactionList"
                    },
                    "_links": {
                        "$ref": "#/components/schemas/_linksCardAccountReport"
                    }
                }
            },
            "transactionList": {
                "description": "Array of transaction details",
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/transactions"
                }
            },
            "transactionDetailsBody": {
                "description": "Transaction details.",
                "type": "object",
                "required": [
                    "transactionDetails"
                ],
                "properties": {
                    "transactionDetails": {
                        "$ref": "#/components/schemas/transactions"
                    }
                }
            },
            "cardTransactionList": {
                "description": "Array of transaction details",
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/cardTransaction"
                }
            },
            "transactions": {
                "description": "Transaction details.",
                "type": "object",
                "required": [
                    "transactionAmount"
                ],
                "properties": {
                    "transactionId": {
                        "description": "the Transaction Id can be used as access-ID in the API, where more details on an transaction is offered. \nIf this data attribute is provided this shows that the AIS can get access on more details about this \ntransaction using the GET Transaction Details Request \n",
                        "type": "string"
                    },
                    "entryReference": {
                        "description": "Is the identification of the transaction as used e.g. for reference for deltafunction on application level. \nThe same identification as for example used within camt.05x messages.\n",
                        "type": "string",
                        "maxLength": 35
                    },
                    "batchIndicator": {
                        "description": "If this indicator equals true, then the related entry is a batch entry.\n",
                        "type": "boolean"
                    },
                    "batchNumberOfTransactions": {
                        "description": "Shall be used if and only if the batchIndicator is contained and equals true.\n",
                        "type": "integer"
                    },
                    "endToEndId": {
                        "$ref": "#/components/schemas/endToEndId"
                    },
                    "mandateId": {
                        "description": "Identification of Mandates.",
                        "type": "string",
                        "maxLength": 35
                    },
                    "checkId": {
                        "$ref": "#/components/schemas/checkId"
                    },
                    "creditorId": {
                        "$ref": "#/components/schemas/creditorId"
                    },
                    "bookingDate": {
                        "$ref": "#/components/schemas/bookingDate"
                    },
                    "valueDate": {
                        "$ref": "#/components/schemas/valueDate"
                    },
                    "transactionAmount": {
                        "$ref": "#/components/schemas/amount"
                    },
                    "currencyExchange": {
                        "$ref": "#/components/schemas/reportExchangeRateList"
                    },
                    "creditorName": {
                        "$ref": "#/components/schemas/creditorName"
                    },
                    "creditorAccount": {
                        "$ref": "#/components/schemas/accountReference"
                    },
                    "creditorAgent": {
                        "$ref": "#/components/schemas/bicfi"
                    },
                    "ultimateCreditor": {
                        "$ref": "#/components/schemas/ultimateCreditor"
                    },
                    "debtorName": {
                        "$ref": "#/components/schemas/debtorName"
                    },
                    "debtorAccount": {
                        "$ref": "#/components/schemas/accountReference"
                    },
                    "debtorAgent": {
                        "$ref": "#/components/schemas/bicfi"
                    },
                    "ultimateDebtor": {
                        "$ref": "#/components/schemas/ultimateDebtor"
                    },
                    "remittanceInformationUnstructured": {
                        "$ref": "#/components/schemas/remittanceInformationUnstructured"
                    },
                    "remittanceInformationUnstructuredArray": {
                        "$ref": "#/components/schemas/remittanceInformationUnstructuredArray"
                    },
                    "remittanceInformationStructuredArray": {
                        "$ref": "#/components/schemas/remittanceInformationStructuredArray"
                    },
                    "entryDetails": {
                        "$ref": "#/components/schemas/entryDetails"
                    },
                    "additionalInformation": {
                        "$ref": "#/components/schemas/additionalInformation"
                    },
                    "additionalInformationStructured": {
                        "$ref": "#/components/schemas/additionalInformationStructured"
                    },
                    "purposeCode": {
                        "$ref": "#/components/schemas/purposeCode"
                    },
                    "bankTransactionCode": {
                        "$ref": "#/components/schemas/bankTransactionCode"
                    },
                    "proprietaryBankTransactionCode": {
                        "$ref": "#/components/schemas/proprietaryBankTransactionCode"
                    },
                    "balanceAfterTransaction": {
                        "$ref": "#/components/schemas/balance"
                    },
                    "_links": {
                        "$ref": "#/components/schemas/_linksTransactionDetails"
                    }
                }
            },
            "cardTransaction": {
                "description": "Card transaction information",
                "type": "object",
                "required": [
                    "transactionAmount"
                ],
                "properties": {
                    "cardTransactionId": {
                        "$ref": "#/components/schemas/cardTransactionId"
                    },
                    "terminalId": {
                        "$ref": "#/components/schemas/terminalId"
                    },
                    "transactionDate": {
                        "$ref": "#/components/schemas/transactionDate"
                    },
                    "acceptorTransactionDateTime": {
                        "description": "Timestamp of the actual card transaction within the acceptance system",
                        "type": "string",
                        "format": "date-time"
                    },
                    "bookingDate": {
                        "$ref": "#/components/schemas/bookingDate"
                    },
                    "transactionAmount": {
                        "$ref": "#/components/schemas/amount"
                    },
                    "currencyExchange": {
                        "$ref": "#/components/schemas/reportExchangeRateList"
                    },
                    "originalAmount": {
                        "$ref": "#/components/schemas/amount"
                    },
                    "markupFee": {
                        "$ref": "#/components/schemas/amount"
                    },
                    "markupFeePercentage": {
                        "type": "string",
                        "example": "0.3"
                    },
                    "cardAcceptorId": {
                        "type": "string",
                        "maxLength": 35
                    },
                    "cardAcceptorAddress": {
                        "$ref": "#/components/schemas/address"
                    },
                    "cardAcceptorPhone": {
                        "$ref": "#/components/schemas/cardAcceptorPhone"
                    },
                    "merchantCategoryCode": {
                        "$ref": "#/components/schemas/merchantCategoryCode"
                    },
                    "maskedPAN": {
                        "$ref": "#/components/schemas/maskedPan"
                    },
                    "transactionDetails": {
                        "type": "string",
                        "maxLength": 140
                    },
                    "invoiced": {
                        "type": "boolean"
                    },
                    "proprietaryBankTransactionCode": {
                        "$ref": "#/components/schemas/proprietaryBankTransactionCode"
                    }
                }
            },
            "reportExchangeRateList": {
                "description": "Array of exchange rates",
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/reportExchangeRate"
                }
            },
            "reportExchangeRate": {
                "description": "Exchange Rate",
                "type": "object",
                "required": [
                    "sourceCurrency",
                    "exchangeRate",
                    "unitCurrency",
                    "targetCurrency",
                    "quotationDate"
                ],
                "properties": {
                    "sourceCurrency": {
                        "$ref": "#/components/schemas/currencyCode"
                    },
                    "exchangeRate": {
                        "type": "string"
                    },
                    "unitCurrency": {
                        "type": "string"
                    },
                    "targetCurrency": {
                        "$ref": "#/components/schemas/currencyCode"
                    },
                    "quotationDate": {
                        "type": "string",
                        "format": "date"
                    },
                    "contractIdentification": {
                        "type": "string"
                    }
                }
            },
            "balance": {
                "description": "A single balance element\n",
                "type": "object",
                "required": [
                    "balanceAmount",
                    "balanceType",
                    "creditLimitIncluded",
                    "referenceDate"
                ],
                "properties": {
                    "balanceAmount": {
                        "$ref": "#/components/schemas/amount"
                    },
                    "balanceType": {
                        "$ref": "#/components/schemas/balanceType"
                    },
                    "creditLimitIncluded": {
                        "description": "A flag indicating if the credit limit of the corresponding account \nis included in the calculation of the balance, where applicable.\n",
                        "type": "boolean",
                        "example": false
                    },
                    "lastChangeDateTime": {
                        "description": "This data element might be used to indicate e.g. with the expected or booked balance that no action is known \non the account, which is not yet booked.\n",
                        "type": "string",
                        "format": "date-time"
                    },
                    "referenceDate": {
                        "description": "Reference date of the balance",
                        "type": "string",
                        "format": "date"
                    },
                    "lastCommittedTransaction": {
                        "description": "\"entryReference\" of the last commited transaction to support the TPP in identifying whether all \nPSU transactions are already known.\n",
                        "type": "string",
                        "maxLength": 35
                    }
                }
            },
            "balanceList": {
                "description": "A list of balances regarding this account, e.g. the current balance, the last booked balance.\nThe list migght be restricted to the current ballance.\n",
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/balance"
                }
            },
            "bicfi": {
                "description": "BICFI\n",
                "type": "string",
                "pattern": "[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}",
                "example": "AAAADEBBXXX"
            },
            "maskedPan": {
                "description": "Masked Primary Account Number\n",
                "type": "string",
                "maxLength": 35,
                "example": "123456xxxxxx1234"
            },
            "bban": {
                "description": "Basic Bank Account Number (BBAN) Identifier\n\nThis data element can be used in the body of the Consent Request\n  Message for retrieving Account access Consent from this Account. This\n  data elements is used for payment Accounts which have no IBAN.\n  ISO20022: Basic Bank Account Number (BBAN). \n  \n  Identifier used nationally by financial institutions, i.e., in individual countries, \n  generally as part of a National Account Numbering Scheme(s), \n  which uniquely identifies the account of a customer.\n  BOI REMARK - This field is used for accounts which  have no IBAN or for accounts that are not a part of the consent.\n  \n",
                "type": "string",
                "pattern": "[0-9]{2}-[0-9]{3}-[0-9]{4,10}",
                "example": "11-111-11111"
            },
            "msisdn": {
                "type": "string",
                "maxLength": 35,
                "description": "Mobile phone number.",
                "example": "+49 170 1234567"
            },
            "iban": {
                "type": "string",
                "description": "IBAN of an account",
                "pattern": "[A-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}",
                "example": "FR7612345987650123456789014"
            },
            "address": {
                "type": "object",
                "required": [
                    "country"
                ],
                "properties": {
                    "streetName": {
                        "type": "string",
                        "maxLength": 70
                    },
                    "buildingNumber": {
                        "type": "string",
                        "maxLength": 10
                    },
                    "townName": {
                        "type": "string",
                        "maxLength": 70
                    },
                    "postCode": {
                        "type": "string",
                        "maxLength": 10
                    },
                    "country": {
                        "$ref": "#/components/schemas/countryCode"
                    }
                },
                "example": {
                    "streetName": "rue blue",
                    "buildingnNumber": "89",
                    "townName": "Paris",
                    "postCode": "75000",
                    "country": "FR"
                }
            },
            "countryCode": {
                "description": "ISO 3166 ALPHA2 country code",
                "type": "string",
                "pattern": "[A-Z]{2}",
                "example": "SE"
            },
            "ownerName": {
                "description": "Name of the legal account owner. \nIf there is more than one owner, then e.g. two names might be noted here.\n\nFor a corporate account, the corporate name is used for this attribute.\nEven if supported by the ASPSP, the provision of this field might depend on the fact whether an explicit consent to this specific additional account information has been given by the PSU.\n",
                "type": "string",
                "maxLength": 140,
                "example": "John Doe"
            },
            "debitAccounting": {
                "description": "If true, the amounts of debits on the reports are quoted positive with the related consequence for balances.\nIf false, the amount of debits on the reports are quoted negative.\n",
                "type": "boolean"
            },
            "cardAcceptorPhone": {
                "description": "Merchant phone number\nIt consists of a \"+\" followed by the country code (from 1 to 3 characters) then a \"-\" and finally, any\ncombination of numbers, \"(\", \")\", \"+\" and \"-\" (up to 30 characters).\npattern according to ISO20022 \\+[0-9]{1,3}-[0-9()+\\-]{1,30}\n",
                "type": "string",
                "pattern": "\\+[0-9]{1,3}\\-[0-9()+\\-]{1,30}"
            },
            "displayName": {
                "description": "Name of the account as defined by the PSU within online channels.\n",
                "type": "string",
                "maxLength": 70
            },
            "amount": {
                "type": "object",
                "required": [
                    "currency",
                    "amount"
                ],
                "properties": {
                    "currency": {
                        "$ref": "#/components/schemas/currencyCode"
                    },
                    "amount": {
                        "$ref": "#/components/schemas/amountValue"
                    }
                },
                "example": {
                    "currency": "EUR",
                    "amount": "123"
                }
            },
            "consentCurrencyCode": {
                "description": "In the Israeli market there is only one option for currency code in post consent- \n * \"ILS\" - consent just for the ILS local currency.\n \nIf the user want a multicurrency consent, this field should be empty.\n",
                "type": "string",
                "enum": [
                    "ILS"
                ],
                "example": "ILS"
            },
            "currencyCode": {
                "description": "ISO 4217 Alpha 3 currency code \nBOI REMARK - XXX for multicurrency account. \n",
                "type": "string",
                "pattern": "[A-Z]{3}",
                "example": "EUR"
            },
            "amountValue": {
                "description": "The amount given with fractional digits, where fractions must be compliant to the currency definition.\nUp to 14 significant figures. Negative amounts are signed by minus.\nThe decimal separator is a dot.\n\n**Example:**\nValid representations for EUR with up to two decimals are:\n\n  * 1056\n  * 5768.2\n  * -1.50\n  * 5877.78\n",
                "type": "string",
                "pattern": "-?[0-9]{1,14}(\\.[0-9]{1,3})?",
                "example": "5877.78"
            },
            "checkId": {
                "description": "Identification of a Cheque.",
                "type": "string",
                "maxLength": 35
            },
            "endToEndId": {
                "description": "Unique end to end identity.",
                "type": "string",
                "maxLength": 35
            },
            "creditorId": {
                "description": "Identification of Creditors.",
                "type": "string",
                "maxLength": 35
            },
            "valueDate": {
                "description": "The Date at which assets become available to the account owner in case of a credit.",
                "type": "string",
                "format": "date",
                "example": "2017-09-26"
            },
            "additionalInformation": {
                "description": "Might be used by the ASPSP to transport additional transaction related information to the PSU.\n",
                "type": "string",
                "maxLength": 512
            },
            "remittanceInformationUnstructured": {
                "description": "Unstructured remittance information\n",
                "type": "string",
                "maxLength": 28,
                "example": "Ref Number Merchant"
            },
            "remittanceInformationStructured": {
                "description": "Structured remittance information.\n",
                "type": "object",
                "required": [
                    "reference"
                ],
                "properties": {
                    "reference": {
                        "type": "string",
                        "maxLength": 35
                    },
                    "referenceType": {
                        "type": "string",
                        "maxLength": 35
                    },
                    "referenceIssuer": {
                        "type": "string",
                        "maxLength": 35
                    }
                }
            },
            "remittanceInformationStructuredArray": {
                "description": "Array of structured remittance information.\n",
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/remittanceInformationStructured"
                }
            },
            "remittanceInformationUnstructuredArray": {
                "description": "Array of unstructured remittance information\n",
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/remittanceInformationUnstructured"
                },
                "example": [
                    "Ref Number Merchant",
                    "Some Other Text"
                ]
            },
            "EntryDetailsElement": {
                "type": "object",
                "required": [
                    "transactionAmount"
                ],
                "properties": {
                    "endToEndId": {
                        "description": "Unique end to end identity.",
                        "type": "string",
                        "maxLength": 35
                    },
                    "mandateId": {
                        "description": "Identification of Mandates, e.g. a SEPA Mandate ID.",
                        "type": "string",
                        "maxLength": 35
                    },
                    "checkId": {
                        "description": "Identification of a Cheque.",
                        "type": "string",
                        "maxLength": 35
                    },
                    "creditorId": {
                        "$ref": "#/components/schemas/creditorId"
                    },
                    "transactionAmount": {
                        "$ref": "#/components/schemas/amount"
                    },
                    "currencyExchange": {
                        "$ref": "#/components/schemas/reportExchangeRateList"
                    },
                    "creditorName": {
                        "$ref": "#/components/schemas/creditorName"
                    },
                    "creditorAccount": {
                        "$ref": "#/components/schemas/accountReference"
                    },
                    "creditorAgent": {
                        "$ref": "#/components/schemas/bicfi"
                    },
                    "ultimateCreditor": {
                        "$ref": "#/components/schemas/ultimateCreditor"
                    },
                    "debtorName": {
                        "$ref": "#/components/schemas/debtorName"
                    },
                    "debtorAccount": {
                        "$ref": "#/components/schemas/accountReference"
                    },
                    "debtorAgent": {
                        "$ref": "#/components/schemas/bicfi"
                    },
                    "ultimateDebtor": {
                        "$ref": "#/components/schemas/ultimateDebtor"
                    },
                    "remittanceInformationUnstructured": {
                        "$ref": "#/components/schemas/remittanceInformationUnstructured"
                    },
                    "remittanceInformationUnstructuredArray": {
                        "$ref": "#/components/schemas/remittanceInformationUnstructuredArray"
                    },
                    "remittanceInformationStructuredArray": {
                        "$ref": "#/components/schemas/remittanceInformationStructuredArray"
                    },
                    "purposeCode": {
                        "$ref": "#/components/schemas/purposeCode"
                    }
                }
            },
            "entryDetails": {
                "description": "Might be used by the ASPSP to transport details about transactions within a batch.\n",
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/EntryDetailsElement"
                }
            },
            "additionalInformationStructured": {
                "description": "Additional information for multiple transfers or multiple checks undor one transaction \n",
                "type": "object",
                "items": {
                    "oneOf": [
                        {
                            "$ref": "#/components/schemas/checkList"
                        },
                        {
                            "$ref": "#/components/schemas/transferList"
                        }
                    ]
                }
            },
            "checkList": {
                "description": "Array of Check Details \n",
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/checkDetails"
                }
            },
            "checkDetails": {
                "description": "Details of underlying checks.",
                "type": "object",
                "required": [
                    "checkId",
                    "transactionAmount"
                ],
                "properties": {
                    "checkId": {
                        "$ref": "#/components/schemas/checkId"
                    },
                    "endToEndId": {
                        "$ref": "#/components/schemas/endToEndId"
                    },
                    "creditorId": {
                        "$ref": "#/components/schemas/creditorId"
                    },
                    "creditorName": {
                        "$ref": "#/components/schemas/creditorName"
                    },
                    "debtorName": {
                        "$ref": "#/components/schemas/debtorName"
                    },
                    "debtorAccount": {
                        "$ref": "#/components/schemas/accountReference"
                    },
                    "bankTransactionCode": {
                        "$ref": "#/components/schemas/bankTransactionCode"
                    },
                    "proprietaryBankTransactionCode": {
                        "$ref": "#/components/schemas/proprietaryBankTransactionCode"
                    },
                    "bookingDate": {
                        "$ref": "#/components/schemas/bookingDate"
                    },
                    "valueDate": {
                        "$ref": "#/components/schemas/valueDate"
                    },
                    "transactionAmount": {
                        "$ref": "#/components/schemas/amount"
                    },
                    "currencyExchange": {
                        "$ref": "#/components/schemas/reportExchangeRateList"
                    },
                    "additionalInformation": {
                        "$ref": "#/components/schemas/additionalInformation"
                    }
                }
            },
            "transferList": {
                "description": "Array of Transfer Details \n",
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/transferDetails"
                }
            },
            "transferDetails": {
                "type": "object",
                "required": [
                    "transactionAmount"
                ],
                "properties": {
                    "transactionId": {
                        "description": "the Transaction Id can be used as access-ID in the API, where more details on an transaction is offered. \nIf this data attribute is provided this shows that the AIS can get access on more details about this \ntransaction using the GET Transaction Details Request \n",
                        "type": "string"
                    },
                    "entryReference": {
                        "description": "Is the identification of the transaction as used e.g. for reference for deltafunction on application level. \nThe same identification as for example used within camt.05x messages.\n",
                        "type": "string",
                        "maxLength": 35
                    },
                    "endToEndId": {
                        "$ref": "#/components/schemas/endToEndId"
                    },
                    "mandateId": {
                        "description": "Identification of Mandates.",
                        "type": "string",
                        "maxLength": 35
                    },
                    "creditorId": {
                        "$ref": "#/components/schemas/creditorId"
                    },
                    "bookingDate": {
                        "$ref": "#/components/schemas/bookingDate"
                    },
                    "valueDate": {
                        "$ref": "#/components/schemas/valueDate"
                    },
                    "transactionAmount": {
                        "$ref": "#/components/schemas/amount"
                    },
                    "currencyExchange": {
                        "$ref": "#/components/schemas/reportExchangeRateList"
                    },
                    "creditorName": {
                        "$ref": "#/components/schemas/creditorName"
                    },
                    "creditorAccount": {
                        "$ref": "#/components/schemas/accountReference"
                    },
                    "ultimateCreditor": {
                        "$ref": "#/components/schemas/ultimateCreditor"
                    },
                    "remittanceInformationUnstructured": {
                        "$ref": "#/components/schemas/remittanceInformationUnstructured"
                    },
                    "additionalInformation": {
                        "$ref": "#/components/schemas/additionalInformation"
                    },
                    "purposeCode": {
                        "$ref": "#/components/schemas/purposeCode"
                    },
                    "bankTransactionCode": {
                        "$ref": "#/components/schemas/bankTransactionCode"
                    },
                    "proprietaryBankTransactionCode": {
                        "$ref": "#/components/schemas/proprietaryBankTransactionCode"
                    }
                }
            },
            "purposeCode": {
                "description": "ExternalPurpose1Code from ISO 20022.\n\nValues from ISO 20022 External Code List ExternalCodeSets_1Q2018 June 2018.\n",
                "type": "string",
                "enum": [
                    "BKDF",
                    "BKFE",
                    "BKFM",
                    "BKIP",
                    "BKPP",
                    "CBLK",
                    "CDCB",
                    "CDCD",
                    "CDCS",
                    "CDDP",
                    "CDOC",
                    "CDQC",
                    "ETUP",
                    "FCOL",
                    "MTUP",
                    "ACCT",
                    "CASH",
                    "COLL",
                    "CSDB",
                    "DEPT",
                    "INTC",
                    "LIMA",
                    "NETT",
                    "BFWD",
                    "CCIR",
                    "CCPC",
                    "CCPM",
                    "CCSM",
                    "CRDS",
                    "CRPR",
                    "CRSP",
                    "CRTL",
                    "EQPT",
                    "EQUS",
                    "EXPT",
                    "EXTD",
                    "FIXI",
                    "FWBC",
                    "FWCC",
                    "FWSB",
                    "FWSC",
                    "MARG",
                    "MBSB",
                    "MBSC",
                    "MGCC",
                    "MGSC",
                    "OCCC",
                    "OPBC",
                    "OPCC",
                    "OPSB",
                    "OPSC",
                    "OPTN",
                    "OTCD",
                    "REPO",
                    "RPBC",
                    "RPCC",
                    "RPSB",
                    "RPSC",
                    "RVPO",
                    "SBSC",
                    "SCIE",
                    "SCIR",
                    "SCRP",
                    "SHBC",
                    "SHCC",
                    "SHSL",
                    "SLEB",
                    "SLOA",
                    "SWBC",
                    "SWCC",
                    "SWPT",
                    "SWSB",
                    "SWSC",
                    "TBAS",
                    "TBBC",
                    "TBCC",
                    "TRCP",
                    "AGRT",
                    "AREN",
                    "BEXP",
                    "BOCE",
                    "COMC",
                    "CPYR",
                    "GDDS",
                    "GDSV",
                    "GSCB",
                    "LICF",
                    "MP2B",
                    "POPE",
                    "ROYA",
                    "SCVE",
                    "SERV",
                    "SUBS",
                    "SUPP",
                    "TRAD",
                    "CHAR",
                    "COMT",
                    "MP2P",
                    "ECPG",
                    "ECPR",
                    "ECPU",
                    "EPAY",
                    "CLPR",
                    "COMP",
                    "DBTC",
                    "GOVI",
                    "HLRP",
                    "HLST",
                    "INPC",
                    "INPR",
                    "INSC",
                    "INSU",
                    "INTE",
                    "LBRI",
                    "LIFI",
                    "LOAN",
                    "LOAR",
                    "PENO",
                    "PPTI",
                    "RELG",
                    "RINP",
                    "TRFD",
                    "FORW",
                    "FXNT",
                    "ADMG",
                    "ADVA",
                    "BCDM",
                    "BCFG",
                    "BLDM",
                    "BNET",
                    "CBFF",
                    "CBFR",
                    "CCRD",
                    "CDBL",
                    "CFEE",
                    "CGDD",
                    "CORT",
                    "COST",
                    "CPKC",
                    "DCRD",
                    "DSMT",
                    "DVPM",
                    "EDUC",
                    "FACT",
                    "FAND",
                    "FCPM",
                    "FEES",
                    "GOVT",
                    "ICCP",
                    "IDCP",
                    "IHRP",
                    "INSM",
                    "IVPT",
                    "MCDM",
                    "MCFG",
                    "MSVC",
                    "NOWS",
                    "OCDM",
                    "OCFG",
                    "OFEE",
                    "OTHR",
                    "PADD",
                    "PTSP",
                    "RCKE",
                    "RCPT",
                    "REBT",
                    "REFU",
                    "RENT",
                    "REOD",
                    "RIMB",
                    "RPNT",
                    "RRBN",
                    "RVPM",
                    "SLPI",
                    "SPLT",
                    "STDY",
                    "TBAN",
                    "TBIL",
                    "TCSC",
                    "TELI",
                    "TMPG",
                    "TPRI",
                    "TPRP",
                    "TRNC",
                    "TRVC",
                    "WEBI",
                    "ANNI",
                    "CAFI",
                    "CFDI",
                    "CMDT",
                    "DERI",
                    "DIVD",
                    "FREX",
                    "HEDG",
                    "INVS",
                    "PRME",
                    "SAVG",
                    "SECU",
                    "SEPI",
                    "TREA",
                    "UNIT",
                    "FNET",
                    "FUTR",
                    "ANTS",
                    "CVCF",
                    "DMEQ",
                    "DNTS",
                    "HLTC",
                    "HLTI",
                    "HSPC",
                    "ICRF",
                    "LTCF",
                    "MAFC",
                    "MARF",
                    "MDCS",
                    "VIEW",
                    "CDEP",
                    "SWFP",
                    "SWPP",
                    "SWRS",
                    "SWUF",
                    "ADCS",
                    "AEMP",
                    "ALLW",
                    "ALMY",
                    "BBSC",
                    "BECH",
                    "BENE",
                    "BONU",
                    "CCHD",
                    "COMM",
                    "CSLP",
                    "GFRP",
                    "GVEA",
                    "GVEB",
                    "GVEC",
                    "GVED",
                    "GWLT",
                    "HREC",
                    "PAYR",
                    "PEFC",
                    "PENS",
                    "PRCP",
                    "RHBS",
                    "SALA",
                    "SSBE",
                    "LBIN",
                    "LCOL",
                    "LFEE",
                    "LMEQ",
                    "LMFI",
                    "LMRK",
                    "LREB",
                    "LREV",
                    "LSFL",
                    "ESTX",
                    "FWLV",
                    "GSTX",
                    "HSTX",
                    "INTX",
                    "NITX",
                    "PTXP",
                    "RDTX",
                    "TAXS",
                    "VATX",
                    "WHLD",
                    "TAXR",
                    "B112",
                    "BR12",
                    "TLRF",
                    "TLRR",
                    "AIRB",
                    "BUSB",
                    "FERB",
                    "RLWY",
                    "TRPT",
                    "CBTV",
                    "ELEC",
                    "ENRG",
                    "GASB",
                    "NWCH",
                    "NWCM",
                    "OTLC",
                    "PHON",
                    "UBIL",
                    "WTER"
                ]
            },
            "bankTransactionCode": {
                "description": "Bank transaction code as used by the ASPSP and using the sub elements of this structured code defined by ISO 20022. \n\nThis code type is concatenating the three ISO20022 Codes \n  * Domain Code, \n  * Family Code, and \n  * SubFamiliy Code \nby hyphens, resulting in \ufffdDomainCode\ufffd-\ufffdFamilyCode\ufffd-\ufffdSubFamilyCode\ufffd.\n",
                "type": "string",
                "example": "PMNT-RCDT-ESCT"
            },
            "proprietaryBankTransactionCode": {
                "description": "Proprietary bank transaction code as used within a community or within an ASPSP e.g. \nfor MT94x based transaction reports.\n",
                "type": "string",
                "maxLength": 35
            },
            "merchantCategoryCode": {
                "description": "Merchant category code",
                "type": "string",
                "maxLength": 4,
                "minLength": 4
            },
            "frequencyCode": {
                "description": "The following codes from the \"EventFrequency7Code\" of ISO 20022 are supported.\n- \"Daily\"\n- \"Weekly\"\n- \"EveryTwoWeeks\"\n- \"Monthly\"\n- \"EveryTwoMonths\"\n- \"Quarterly\"\n- \"SemiAnnual\"\n- \"Annual\"\n",
                "type": "string",
                "enum": [
                    "Daily",
                    "Weekly",
                    "EveryTwoWeeks",
                    "Monthly",
                    "EveryTwoMonths",
                    "Quarterly",
                    "SemiAnnual",
                    "Annual"
                ]
            },
            "frequencyPerDay": {
                "description": "This field indicates the requested maximum frequency for an access without PSU involvement per day.\n\nBOI-REMARK:\nThis attribute always set to \"100\" and has no legal significance.\n\nAny other values are premitted only if agreed bilaterally between TPP and ASPSP. \n",
                "type": "integer",
                "example": 100,
                "enum": [
                    100
                ]
            },
            "dayOfExecution": {
                "description": "Day of execution as string.\n\nThis string consists of up two characters.\nLeading zeroes are not allowed.\n\n31 is ultimo of the month.\n",
                "type": "string",
                "maxLength": 2,
                "enum": [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                    "6",
                    "7",
                    "8",
                    "9",
                    "10",
                    "11",
                    "12",
                    "13",
                    "14",
                    "15",
                    "16",
                    "17",
                    "18",
                    "19",
                    "20",
                    "21",
                    "22",
                    "23",
                    "24",
                    "25",
                    "26",
                    "27",
                    "28",
                    "29",
                    "30",
                    "31"
                ]
            },
            "executionRule": {
                "description": "\"following\" or \"preceding\" supported as values. \nThis data attribute defines the behaviour when recurring payment dates falls on a weekend or bank holiday. \nThe payment is then executed either the \"preceding\" or \"following\" working day.\nASPSP might reject the request due to the communicated value, if rules in Online-Banking are not supporting \nthis execution rule.\n",
                "type": "string",
                "enum": [
                    "following",
                    "preceding"
                ]
            },
            "psuMessageText": {
                "description": "Text to be displayed to the PSU",
                "type": "string",
                "maxLength": 500
            },
            "creditorName": {
                "description": "Creditor Name",
                "type": "string",
                "maxLength": 70,
                "example": "Creditor Name"
            },
            "creditorAgentName": {
                "description": "Creditor Agent Name",
                "type": "string",
                "maxLength": 70,
                "example": "Creditor Agent Name"
            },
            "debtorName": {
                "description": "Debtor Name",
                "type": "string",
                "maxLength": 70,
                "example": "Debtor Name"
            },
            "ultimateDebtor": {
                "description": "Ultimate Debtor",
                "type": "string",
                "maxLength": 70,
                "example": "Ultimate Debtor"
            },
            "ultimateCreditor": {
                "description": "Ultimate Creditor",
                "type": "string",
                "maxLength": 70,
                "example": "Ultimate Creditor"
            },
            "transactionDate": {
                "description": "Date of the actual card transaction",
                "type": "string",
                "format": "date"
            },
            "startDate": {
                "description": "The first applicable day of execution starting from this date is the first payment.\n",
                "type": "string",
                "format": "date"
            },
            "endDate": {
                "description": "The last applicable day of execution\nIf not given, it is an infinite standing order.\n",
                "type": "string",
                "format": "date"
            },
            "bookingDate": {
                "description": "The Date when an entry is posted to an account on the ASPSPs books.\n",
                "type": "string",
                "format": "date"
            },
            "validUntil": {
                "description": "This parameter is requesting a valid until date for the requested consent. \nThe content is the local ASPSP date in ISO-Date Format, e.g. 2017-10-30. \n\nFuture dates might get adjusted by ASPSP. \n\nIf a maximal available date is requested, a date in far future is to be used: \"9999-12-31\". \n\nIn both cases the consent object to be retrieved by the GET Consent Request will contain the adjusted date.\n\nBOI-REMARK: The minimum value can be the current date. In case of exception a message code PERIOD_INVALID is returned.\n",
                "type": "string",
                "format": "date",
                "example": "2020-12-31"
            },
            "lastActionDate": {
                "description": "This date is containing the date of the last action on the consent object either through \nthe XS2A interface or the PSU/ASPSP interface having an impact on the status.\n",
                "type": "string",
                "format": "date",
                "example": "2018-07-01"
            },
            "paymentInitiation_json": {
                "description": "Generic Body for a payment initation via JSON.\n\nThis generic JSON body can be used to represent valid payment initiations for the following JSON based payment product, \nwhich where defined in the Implementation Guidelines:\n   * masav\n   * zahav\n   * FP\n\nFor the convenience of the implementer additional which are already predefinded in the Implementation Guidelines \nare included (but commented in source code), such that an ASPSP may add them easily.\n\nTake care: Since the format is intended to fit for all payment products \nthere are additional conditions which are NOT covered by this specification.\nPlease check the Implementation Guidelines for detailes.\n\n\nThe following data element are depending on the actual payment product available (in source code):\n          \n <table style=\"width:100%\">\n <tr><th>Data Element</th><th>Type</th><th>masav</th><th>zahav</th><th>fp</th></tr>\n <tr><td>endToEndIdentification</td><td> Max35Text</td><td> optional</td> <td>optional</td><td>optional</td> </tr>\n <tr><td>debtorAccount</td><td> Account Reference</td> <td>mandatory</td> <td>mandatory</td><td>mandatory</td> </tr>\n <tr><td>debtorId</td><td> Max35Text</td> <td>n.a.</td> <td>n.a.</td><td>n.a.</td></tr>\n <tr><td>ultimateDebtor</td> <td>Max70Text</td> <td>n.a.</td> <td>n.a.</td><td>n.a.</td></tr>\n <tr><td>instructedAmount</td> <td>Amount</td> <td>mandatory</td> <td>mandatory</td><td>mandatory</td></tr>\n <tr><td>CurrencyOfTransfer</td> <td>CurrencyCode</td> <td>n.a.</td> <td>n.a.</td><td>n.a.</td></tr>\n <tr><td>exchangeRateInformation</td> <td>Payment Exchange Rate</td> <td>n.a.</td><td>n.a.</td><td>n.a.</td></tr>\n <tr><td>creditorAccount</td> <td>Account Reference</td> <td>mandatory</td> <td>mandatory</td><td>mandatory</td>  </tr>\n <tr><td>creditorAgent</td> <td>BICFI</td> <td>optional</td> <td>optional</td><td>optional</td>  </tr>\n <tr><td>creditorAgentName</td> <td>Max140Text</td> <td>n.a.</td> <td>n.a.</td><td>n.a.</td>  </tr>\n <tr><td>creditorName</td> <td>Max70Text</td> <td>mandatory</td> <td>mandatory</td><td>mandatory</td>  </tr>\n <tr><td>creditorId</td> <td>Max35Text</td> <td>n.a.</td> <td>n.a.</td><td>n.a.</td></tr>\n <tr><td>creditorAddress</td>Address</td> <td>optional</td> <td>optional</td><td>optional</td> </tr>\n <tr><td>creditorNameAndAddress</td> <td>Max140Text</td> <td>n.a.</td> <td>n.a.</td><td>n.a.</td> </tr>\n <tr><td>ultimateCreditor</td> <td>Max70Text</td> <td>n.a.</td> <td>n.a.</td><td>n.a.</td>  </tr>\n <tr><td>purposeCode</td> <td>Purpose Code</td> <td>n.a.</td> <td>n.a.</td><td>n.a.</td> </tr>\n <tr><td>chargeBearer</td> <td>Charge Bearer</td> <td>n.a.</td> <td>n.a.</td><td>n.a.</td>  </tr>\n <tr><td>serviceLevel</td> <td>Service Level Code</td> <td>n.a.</td> <td>n.a.</td><td>n.a.</td>  </tr>\n <tr><td>remittanceInformationUnstructured</td> <td>Max28Text</td> <td>mandatory</td> <td> mandatory</td><td> mandatory</td>  </tr>\n <tr><td>remittanceInformationUnstructuredArray</td> <td>Array of Max140Text</td> <td>n.a.</td> <td>n.a.</td><td>n.a.</td></tr>\n <tr><td>remittanceInformationStructured</td> <td>Remmitance</td> <td>n.a.</td> <td>n.a.</td><td>n.a.</td> </tr>\n <tr><td>requestedExecutionDate</td> <td>ISODate</td> <td>n.a.</td> <td>n.a.</td><td>n.a.</td> </tr>\n <tr><td>requestedExecutionTime</td> <td>ISODateTime</td> <td>n.a.</td> <td>n.a.</td><td>n.a.</td> </tr>\n    </td></tr>\n  </table>\n  \nIMPORTANT: In this API definition the following holds:\n  *  All data elements mentioned above are defined, but some of them are commented, \n    i.e. they are only visible in the source code and can be used by uncommenting them.\n  * Data elements which are mandatory in the table above for all payment products \n    are set to be mandatory in this specification.\n  * Data elements which are indicated in the table above as n.a. for all payment products are commented in the source code.\n  * Data elements which are indicated to be option, conditional or mandatory for at least one payment product \n    in the table above are set to be optional in the s specification except the case where all are definde to be mandatory. \n  * Data element which are inticated to be n.a. can be used by the ASPS if needed. \n    In this case uncomment tthe the relatetd lines in the source code.\n  * If one uses this data types for some payment products he has to ensure that the used data type is \n    valid according to the underlying payment product, e.g. by some appropriate validations.\n",
                "type": "object",
                "required": [
                    "debtorAccount",
                    "instructedAmount",
                    "creditorAccount",
                    "creditorName",
                    "remittanceInformationUnstructured"
                ],
                "properties": {
                    "endToEndIdentification": {
                        "type": "string",
                        "maxLength": 35
                    },
                    "debtorAccount": {
                        "$ref": "#/components/schemas/accountReference"
                    },
                    "instructedAmount": {
                        "$ref": "#/components/schemas/amount"
                    },
                    "creditorAccount": {
                        "$ref": "#/components/schemas/accountReference"
                    },
                    "creditorAgent": {
                        "$ref": "#/components/schemas/bicfi"
                    },
                    "creditorAgentName": {
                        "$ref": "#/components/schemas/creditorAgentName"
                    },
                    "creditorName": {
                        "$ref": "#/components/schemas/creditorName"
                    },
                    "creditorAddress": {
                        "$ref": "#/components/schemas/address"
                    },
                    "remittanceInformationUnstructured": {
                        "$ref": "#/components/schemas/remittanceInformationUnstructured"
                    }
                }
            },
            "paymentInitiationBulkElement_json": {
                "description": "Generic body for a bulk payment initation entry.\n\nThe bulk entry type is a type which follows the JSON formats for the supported products for single payments\nexcluding the data elements (if supported):\n   * debtorAccount\n   * requestedExecutionDate,\n   * requestedExecutionTime.\nThese data elements may not be contained in any bulk entry.\nThis data object can be used to represent valid bulk payment initiations entry for the following JSON based payment product, \nwhich where defined in the Implementation Guidelines:\n\n  * masav\n  * zahav\n  * FP\n\nFor the convenience of the implementer additional which are already predefinded in the Implementation Guidelines \nare included (but commented in source code), such that an ASPSP may add them easily.\n\nTake care: Since the format is intended to fit for all payment products \nthere are additional conditions which are NOT covered by this specification.\nPlease check the Implementation Guidelines for detailes.\n\nThe following data element are depending on the actual payment product available (in source code):\n          \n<table style=\"width:100%\">\n<tr><th>Data Element</th><th>Type</th><th>masav</th><th>zahav</th><th>fp</th></tr>\n<tr><td>endToEndIdentification</td><td> Max35Text</td><td> optional</td> <td>optional</td><td>optional</td> </tr>\n<tr><td>debtorAccount</td><td> Account Reference</td> <td>mandatory</td> <td>mandatory</td><td>mandatory</td> </tr>\n<tr><td>debtorId</td><td> Max35Text</td> <td>n.a.</td> <td>n.a.</td><td>n.a.</td></tr>\n<tr><td>ultimateDebtor</td> <td>Max70Text</td> <td>n.a.</td> <td>n.a.</td><td>n.a.</td></tr>\n<tr><td>instructedAmount</td> <td>Amount</td> <td>mandatory</td> <td>mandatory</td><td>mandatory</td></tr>\n<tr><td>CurrencyOfTransfer</td> <td>CurrencyCode</td> <td>n.a.</td> <td>n.a.</td><td>n.a.</td></tr>\n<tr><td>exchangeRateInformation</td> <td>Payment Exchange Rate</td> <td>n.a.</td><td>n.a.</td><td>n.a.</td></tr>\n<tr><td>creditorAccount</td> <td>Account Reference</td> <td>mandatory</td> <td>mandatory</td><td>mandatory</td>  </tr>\n<tr><td>creditorAgent</td> <td>BICFI</td> <td>optional</td> <td>optional</td><td>optional</td>  </tr>\n<tr><td>creditorAgentName</td> <td>Max140Text</td> <td>n.a.</td> <td>n.a.</td><td>n.a.</td>  </tr>\n<tr><td>creditorName</td> <td>Max70Text</td> <td>mandatory</td> <td>mandatory</td><td>mandatory</td>  </tr>\n<tr><td>creditorId</td> <td>Max35Text</td> <td>n.a.</td> <td>n.a.</td><td>n.a.</td></tr>\n<tr><td>creditorAddress</td>Address</td> <td>optional</td> <td>optional</td><td>optional</td> </tr>\n<tr><td>creditorNameAndAddress</td> <td>Max140Text</td> <td>n.a.</td> <td>n.a.</td><td>n.a.</td> </tr>\n<tr><td>ultimateCreditor</td> <td>Max70Text</td> <td>n.a.</td> <td>n.a.</td><td>n.a.</td>  </tr>\n<tr><td>purposeCode</td> <td>Purpose Code</td> <td>n.a.</td> <td>n.a.</td><td>n.a.</td> </tr>\n<tr><td>chargeBearer</td> <td>Charge Bearer</td> <td>n.a.</td> <td>n.a.</td><td>n.a.</td>  </tr>\n<tr><td>serviceLevel</td> <td>Service Level Code</td> <td>n.a.</td> <td>n.a.</td><td>n.a.</td>  </tr>\n<tr><td>remittanceInformationUnstructured</td> <td>Max28Text</td> <td>mandatory</td> <td> mandatory</td><td> mandatory</td>  </tr>\n<tr><td>remittanceInformationUnstructuredArray</td> <td>Array of Max140Text</td> <td>n.a.</td> <td>n.a.</td><td>n.a.</td></tr>\n<tr><td>remittanceInformationStructured</td> <td>Remmitance</td> <td>n.a.</td> <td>n.a.</td><td>n.a.</td> </tr>\n<tr><td>requestedExecutionDate</td> <td>ISODate</td> <td>n.a.</td> <td>n.a.</td><td>n.a.</td> </tr>\n<tr><td>requestedExecutionTime</td> <td>ISODateTime</td> <td>n.a.</td> <td>n.a.</td><td>n.a.</td> </tr>\n   </td></tr>\n</table>\n  \nIMPORTANT: In this API definition the following holds:\n  *  All data elements mentioned above are defined, but some of them are commented, \n     i.e. they are only visible in the source code and can be used by uncommenting them.\n  * Data elements which are mandatory in the table above for all payment products \n     are set to be mandatory in this specification.\n  * Data elements which are indicated in the table above as n.a. for all payment products are commented in the source code.\n  * Data elements which are indicated to be option, conditional or mandatory for at least one payment product \n     in the table above are set to be optional in the s specification except the case where all are definde to be mandatory. \n  * Data element which are inticated to be n.a. can be used by the ASPS if needed. \n     In this case uncomment tthe the relatetd lines in the source code.\n  * If one uses this data types for some payment products he has to ensure that the used data type is \n     valid according to the underlying payment product, e.g. by some appropriate validations.\n",
                "type": "object",
                "required": [
                    "instructedAmount",
                    "creditorAccount",
                    "creditorName"
                ],
                "properties": {
                    "endToEndIdentification": {
                        "type": "string",
                        "maxLength": 35
                    },
                    "instructedAmount": {
                        "$ref": "#/components/schemas/amount"
                    },
                    "creditorAccount": {
                        "$ref": "#/components/schemas/accountReference"
                    },
                    "creditorAgent": {
                        "$ref": "#/components/schemas/bicfi"
                    },
                    "creditorAgentName": {
                        "$ref": "#/components/schemas/creditorAgentName"
                    },
                    "creditorName": {
                        "$ref": "#/components/schemas/creditorName"
                    },
                    "creditorAddress": {
                        "$ref": "#/components/schemas/address"
                    },
                    "remittanceInformationUnstructured": {
                        "$ref": "#/components/schemas/remittanceInformationUnstructured"
                    }
                }
            },
            "periodicPaymentInitiation_json": {
                "description": "Generic Body for a periodic payment initation via JSON.\n\nThis generic JSON body can be used to represent valid periodic payment initiations for the following JSON based payment product, \nwhich where defined in the Implementation Guidelines:\n\n  * masav\n  * zahav\n  * FP\n  \nFor the convenience of the implementer additional which are already predefinded in the Implementation Guidelines \nare included (but commented in source code), such that an ASPSP may add them easily.\n\nTake care: Since the format is intended to fit for all payment products \nthere are additional conditions which are NOT covered by this specification.\nPlease check the Implementation Guidelines for detailes.\n\n\nThe following data element are depending on the actual payment product available (in source code):\n        \n<table style=\"width:100%\">\n<tr><th>Data Element</th><th>Type</th><th>masav</th><th>zahav</th><th>fp</th></tr>\n<tr><td>endToEndIdentification</td><td> Max35Text</td><td> optional</td> <td>optional</td><td>optional</td> </tr>\n<tr><td>debtorAccount</td><td> Account Reference</td> <td>mandatory</td> <td>mandatory</td><td>mandatory</td> </tr>\n<tr><td>debtorId</td><td> Max35Text</td> <td>n.a.</td> <td>n.a.</td><td>n.a.</td></tr>\n<tr><td>ultimateDebtor</td> <td>Max70Text</td> <td>n.a.</td> <td>n.a.</td><td>n.a.</td></tr>\n<tr><td>instructedAmount</td> <td>Amount</td> <td>mandatory</td> <td>mandatory</td><td>mandatory</td></tr>\n<tr><td>CurrencyOfTransfer</td> <td>CurrencyCode</td> <td>n.a.</td> <td>n.a.</td><td>n.a.</td></tr>\n<tr><td>exchangeRateInformation</td> <td>Payment Exchange Rate</td> <td>n.a.</td><td>n.a.</td><td>n.a.</td></tr>\n<tr><td>creditorAccount</td> <td>Account Reference</td> <td>mandatory</td> <td>mandatory</td><td>mandatory</td>  </tr>\n<tr><td>creditorAgent</td> <td>BICFI</td> <td>optional</td> <td>optional</td><td>optional</td>  </tr>\n<tr><td>creditorAgentName</td> <td>Max140Text</td> <td>n.a.</td> <td>n.a.</td><td>n.a.</td>  </tr>\n<tr><td>creditorName</td> <td>Max70Text</td> <td>mandatory</td> <td>mandatory</td><td>mandatory</td>  </tr>\n<tr><td>creditorId</td> <td>Max35Text</td> <td>n.a.</td> <td>n.a.</td><td>n.a.</td></tr>\n<tr><td>creditorAddress</td>Address</td> <td>optional</td> <td>optional</td><td>optional</td> </tr>\n<tr><td>creditorNameAndAddress</td> <td>Max140Text</td> <td>n.a.</td> <td>n.a.</td><td>n.a.</td> </tr>\n<tr><td>ultimateCreditor</td> <td>Max70Text</td> <td>n.a.</td> <td>n.a.</td><td>n.a.</td>  </tr>\n<tr><td>purposeCode</td> <td>Purpose Code</td> <td>n.a.</td> <td>n.a.</td><td>n.a.</td> </tr>\n<tr><td>chargeBearer</td> <td>Charge Bearer</td> <td>n.a.</td> <td>n.a.</td><td>n.a.</td>  </tr>\n<tr><td>serviceLevel</td> <td>Service Level Code</td> <td>n.a.</td> <td>n.a.</td><td>n.a.</td>  </tr>\n<tr><td>remittanceInformationUnstructured</td> <td>Max28Text</td> <td>mandatory</td> <td> mandatory</td><td> mandatory</td>  </tr>\n<tr><td>remittanceInformationUnstructuredArray</td> <td>Array of Max140Text</td> <td>n.a.</td> <td>n.a.</td><td>n.a.</td></tr>\n<tr><td>remittanceInformationStructured</td> <td>Remmitance</td> <td>n.a.</td> <td>n.a.</td><td>n.a.</td> </tr>\n<tr><td>requestedExecutionDate</td> <td>ISODate</td> <td>n.a.</td> <td>n.a.</td><td>n.a.</td> </tr>\n<tr><td>requestedExecutionTime</td> <td>ISODateTime</td> <td>n.a.</td> <td>n.a.</td><td>n.a.</td> </tr>\n  </td></tr>\n</table>\n\nIMPORTANT: In this API definition the following holds:\n*  All data elements mentioned above are defined, but some of them are commented, \n    i.e. they are only visible in the source code and can be used by uncommenting them.\n* Data elements which are mandatory in the table above for all payment products \n    are set to be mandatory in this specification.\n* Data elements which are indicated in the table above as n.a. for all payment products are commented in the source code.\n* Data elements which are indicated to be option, conditional or mandatory for at least one payment product \n    in the table above are set to be optional in the s specification except the case where all are definde to be mandatory. \n* Data element which are inticated to be n.a. can be used by the ASPS if needed. \n    In this case uncomment tthe the relatetd lines in the source code.\n* If one uses this data types for some payment products he has to ensure that the used data type is \n    valid according to the underlying payment product, e.g. by some appropriate validations.\n",
                "type": "object",
                "required": [
                    "debtorAccount",
                    "creditorAccount",
                    "creditorName",
                    "startDate",
                    "frequency"
                ],
                "properties": {
                    "endToEndIdentification": {
                        "type": "string",
                        "maxLength": 35
                    },
                    "debtorAccount": {
                        "$ref": "#/components/schemas/accountReference"
                    },
                    "instructedAmount": {
                        "$ref": "#/components/schemas/amount"
                    },
                    "creditorAccount": {
                        "$ref": "#/components/schemas/accountReference"
                    },
                    "creditorAgent": {
                        "$ref": "#/components/schemas/bicfi"
                    },
                    "creditorName": {
                        "$ref": "#/components/schemas/creditorName"
                    },
                    "creditorAddress": {
                        "$ref": "#/components/schemas/address"
                    },
                    "remittanceInformationUnstructured": {
                        "$ref": "#/components/schemas/remittanceInformationUnstructured"
                    },
                    "startDate": {
                        "$ref": "#/components/schemas/startDate"
                    },
                    "endDate": {
                        "$ref": "#/components/schemas/endDate"
                    },
                    "executionRule": {
                        "$ref": "#/components/schemas/executionRule"
                    },
                    "frequency": {
                        "$ref": "#/components/schemas/frequencyCode"
                    },
                    "dayOfExecution": {
                        "$ref": "#/components/schemas/dayOfExecution"
                    }
                }
            },
            "bulkPaymentInitiation_json": {
                "description": "Generic Body for a bulk payment initation via JSON.\n\npaymentInformationId is contained in code but commented since it is n.a. \nand not all ASPSP are able to support this field now.\nIn a later version the field will be mandatory.\n",
                "type": "object",
                "required": [
                    "payments",
                    "debtorAccount"
                ],
                "properties": {
                    "batchBookingPreferred": {
                        "$ref": "#/components/schemas/batchBookingPreferred"
                    },
                    "debtorAccount": {
                        "$ref": "#/components/schemas/accountReference"
                    },
                    "requestedExecutionDate": {
                        "type": "string",
                        "format": "date"
                    },
                    "requestedExecutionTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "payments": {
                        "description": "A list of generic JSON bodies payment initations for bulk payments via JSON.           \nNote: Some fields from single payments do not occcur in a bulk payment element\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/paymentInitiationBulkElement_json"
                        }
                    }
                }
            },
            "consents": {
                "description": "Content of the body of a consent request.\n",
                "type": "object",
                "required": [
                    "access",
                    "recurringIndicator",
                    "validUntil",
                    "frequencyPerDay",
                    "combinedServiceIndicator"
                ],
                "properties": {
                    "access": {
                        "$ref": "#/components/schemas/accountAccess"
                    },
                    "recurringIndicator": {
                        "$ref": "#/components/schemas/recurringIndicator"
                    },
                    "validUntil": {
                        "$ref": "#/components/schemas/validUntil"
                    },
                    "frequencyPerDay": {
                        "$ref": "#/components/schemas/frequencyPerDay"
                    },
                    "combinedServiceIndicator": {
                        "$ref": "#/components/schemas/combinedServiceIndicator"
                    }
                }
            },
            "paymentInitiationStatusResponse-200_json": {
                "description": "Body of the response for a successful payment initiation status request in case of an JSON based endpoint.",
                "type": "object",
                "required": [
                    "transactionStatus"
                ],
                "properties": {
                    "transactionStatus": {
                        "$ref": "#/components/schemas/transactionStatus"
                    },
                    "fundsAvailable": {
                        "$ref": "#/components/schemas/fundsAvailable"
                    }
                }
            },
            "paymentInitationRequestResponse-201": {
                "description": "Body of the response for a successful payment initiation request.",
                "type": "object",
                "required": [
                    "transactionStatus",
                    "paymentId",
                    "_links"
                ],
                "properties": {
                    "transactionStatus": {
                        "$ref": "#/components/schemas/transactionStatus"
                    },
                    "paymentId": {
                        "$ref": "#/components/schemas/paymentId"
                    },
                    "transactionFees": {
                        "$ref": "#/components/schemas/amount"
                    },
                    "currencyConversionFee": {
                        "$ref": "#/components/schemas/amount"
                    },
                    "estimatedTotalAmount": {
                        "$ref": "#/components/schemas/amount"
                    },
                    "estimatedInterbankSettlementAmount": {
                        "$ref": "#/components/schemas/amount"
                    },
                    "transactionFeeIndicator": {
                        "$ref": "#/components/schemas/transactionFeeIndicator"
                    },
                    "_links": {
                        "$ref": "#/components/schemas/_linksPaymentInitiation"
                    },
                    "psuMessage": {
                        "$ref": "#/components/schemas/psuMessageText"
                    },
                    "tppMessages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/tppMessage2XX"
                        }
                    }
                }
            },
            "paymentInitiationCancelResponse-202": {
                "description": "Body of the response for a successful cancel payment request.",
                "type": "object",
                "required": [
                    "transactionStatus"
                ],
                "properties": {
                    "transactionStatus": {
                        "$ref": "#/components/schemas/transactionStatus"
                    },
                    "scaMethods": {
                        "$ref": "#/components/schemas/scaMethods"
                    }
                }
            },
            "paymentInitiationWithStatusResponse": {
                "description": "Generic JSON response body consistion of the corresponding payment initation JSON body together with an optional transaction status field.\n",
                "type": "object",
                "required": [
                    "debtorAccount",
                    "instructedAmount",
                    "creditorAccount",
                    "creditorName"
                ],
                "properties": {
                    "endToEndIdentification": {
                        "type": "string",
                        "maxLength": 35
                    },
                    "debtorAccount": {
                        "$ref": "#/components/schemas/accountReference"
                    },
                    "instructedAmount": {
                        "$ref": "#/components/schemas/amount"
                    },
                    "creditorAccount": {
                        "$ref": "#/components/schemas/accountReference"
                    },
                    "creditorAgent": {
                        "$ref": "#/components/schemas/bicfi"
                    },
                    "creditorName": {
                        "$ref": "#/components/schemas/creditorName"
                    },
                    "creditorAddress": {
                        "$ref": "#/components/schemas/address"
                    },
                    "remittanceInformationUnstructured": {
                        "$ref": "#/components/schemas/remittanceInformationUnstructured"
                    },
                    "transactionStatus": {
                        "$ref": "#/components/schemas/transactionStatus"
                    }
                }
            },
            "scaStatusResponse": {
                "description": "Body of the JSON response with SCA Status",
                "type": "object",
                "properties": {
                    "scaStatus": {
                        "$ref": "#/components/schemas/scaStatus"
                    }
                }
            },
            "startScaprocessResponse": {
                "description": "Body of the JSON response for a Start SCA authorisation request.",
                "type": "object",
                "required": [
                    "scaStatus",
                    "authorisationId",
                    "_links"
                ],
                "properties": {
                    "scaStatus": {
                        "$ref": "#/components/schemas/scaStatus"
                    },
                    "authorisationId": {
                        "$ref": "#/components/schemas/authorisationId"
                    },
                    "_links": {
                        "$ref": "#/components/schemas/_linksStartScaProcess"
                    },
                    "psuMessage": {
                        "$ref": "#/components/schemas/psuMessageText"
                    }
                }
            },
            "consentsResponse-201": {
                "description": "Body of the JSON response for a successful conset request.",
                "type": "object",
                "required": [
                    "consentStatus",
                    "consentId",
                    "_links"
                ],
                "properties": {
                    "consentStatus": {
                        "$ref": "#/components/schemas/consentStatus"
                    },
                    "consentId": {
                        "$ref": "#/components/schemas/consentId"
                    },
                    "_links": {
                        "$ref": "#/components/schemas/_linksConsents"
                    },
                    "message": {
                        "description": "Text to be displayed to the PSU, e.g. in a Decoupled SCA Approach.",
                        "type": "string",
                        "maxLength": 512
                    }
                }
            },
            "consentStatusResponse-200": {
                "description": "Body of the JSON response for a successful get status request for a consent.",
                "type": "object",
                "required": [
                    "consentStatus"
                ],
                "properties": {
                    "consentStatus": {
                        "$ref": "#/components/schemas/consentStatus"
                    }
                }
            },
            "consentInformationResponse-200_json": {
                "description": "Body of the JSON response for a successfull get consent request.",
                "type": "object",
                "required": [
                    "access",
                    "recurringIndicator",
                    "validUntil",
                    "frequencyPerDay",
                    "lastActionDate",
                    "consentStatus"
                ],
                "properties": {
                    "access": {
                        "$ref": "#/components/schemas/accountAccess"
                    },
                    "recurringIndicator": {
                        "$ref": "#/components/schemas/recurringIndicator"
                    },
                    "validUntil": {
                        "$ref": "#/components/schemas/validUntil"
                    },
                    "frequencyPerDay": {
                        "$ref": "#/components/schemas/frequencyPerDay"
                    },
                    "lastActionDate": {
                        "$ref": "#/components/schemas/lastActionDate"
                    },
                    "consentStatus": {
                        "$ref": "#/components/schemas/consentStatus"
                    },
                    "_links": {
                        "$ref": "#/components/schemas/_linksGetConsent"
                    }
                }
            },
            "readAccountBalanceResponse-200": {
                "description": "Body of the response for a successful read balance for an account request.",
                "type": "object",
                "required": [
                    "account",
                    "balances"
                ],
                "properties": {
                    "account": {
                        "$ref": "#/components/schemas/accountReference"
                    },
                    "balances": {
                        "$ref": "#/components/schemas/balanceList"
                    }
                }
            },
            "readCardAccountBalanceResponse-200": {
                "description": "Body of the response for a successful read balance for a card account request.",
                "type": "object",
                "required": [
                    "balances"
                ],
                "properties": {
                    "cardAccount": {
                        "$ref": "#/components/schemas/accountReference"
                    },
                    "balances": {
                        "$ref": "#/components/schemas/balanceList"
                    }
                }
            },
            "transactionsResponse-200_json": {
                "description": "Body of the JSON response for a successful read transaction list request.\nThis account report contains transactions resulting from the query parameters.\n",
                "type": "object",
                "required": [
                    "account",
                    "transactions"
                ],
                "properties": {
                    "account": {
                        "$ref": "#/components/schemas/accountReference"
                    },
                    "transactions": {
                        "$ref": "#/components/schemas/accountReport"
                    },
                    "balances": {
                        "$ref": "#/components/schemas/balanceList"
                    }
                }
            },
            "cardAccountsTransactionsResponse200": {
                "description": "Body of the JSON response for a successful read card account transaction list request.\nThis card account report contains transactions resulting from the query parameters.\n",
                "type": "object",
                "required": [
                    "cardAccount",
                    "cardTransactions"
                ],
                "properties": {
                    "cardAccount": {
                        "$ref": "#/components/schemas/accountReference"
                    },
                    "cardTransactions": {
                        "$ref": "#/components/schemas/cardAccountReport"
                    },
                    "balances": {
                        "$ref": "#/components/schemas/balanceList"
                    }
                }
            },
            "_linksAll": {
                "description": "A _link object with all availabel link types\n",
                "type": "object",
                "additionalProperties": {
                    "$ref": "#/components/schemas/hrefType"
                },
                "properties": {
                    "scaOAuth": {
                        "$ref": "#/components/schemas/hrefType"
                    },
                    "self": {
                        "$ref": "#/components/schemas/hrefType"
                    },
                    "status": {
                        "$ref": "#/components/schemas/hrefType"
                    },
                    "scaStatus": {
                        "$ref": "#/components/schemas/hrefType"
                    },
                    "account": {
                        "$ref": "#/components/schemas/hrefType"
                    },
                    "balances": {
                        "$ref": "#/components/schemas/hrefType"
                    },
                    "transactions": {
                        "$ref": "#/components/schemas/hrefType"
                    },
                    "transactionDetails": {
                        "$ref": "#/components/schemas/hrefType"
                    },
                    "cardAccount": {
                        "$ref": "#/components/schemas/hrefType"
                    },
                    "cardTransactions": {
                        "$ref": "#/components/schemas/hrefType"
                    },
                    "first": {
                        "$ref": "#/components/schemas/hrefType"
                    },
                    "next": {
                        "$ref": "#/components/schemas/hrefType"
                    },
                    "previous": {
                        "$ref": "#/components/schemas/hrefType"
                    },
                    "last": {
                        "$ref": "#/components/schemas/hrefType"
                    }
                }
            },
            "_linksPaymentInitiation": {
                "description": "A list of hyperlinks to be recognised by the TPP.\nThe actual hyperlinks used in the response depend on the dynamical decisions of the ASPSP when\nprocessing the request.\n\n**Remark:** All links can be relative or full links, to be decided by the ASPSP.\n\nType of links admitted in this response, (further links might be added for ASPSP defined extensions):\n\n* 'scaOAuth': \n  In case of a SCA OAuth2 Approach, the ASPSP is transmitting the URI where the configuration of the Authorisation\n* 'confirmation': \n  Might be added by the ASPSP if either the \"scaRedirect\" or \"scaOAuth\" hyperlink is returned \n  in the same response message. \n  This hyperlink defines the URL to the resource which needs to be updated with \n    * a confirmation code as retrieved after the plain redirect authentication process with the ASPSP authentication server or\n    * an access token as retrieved by submitting an authorization code after the integrated OAuth based authentication process with the ASPSP authentication server.           \n* 'self': \n  The link to the payment initiation resource created by this request.\n  This link can be used to retrieve the resource data.\n* 'status': \n  The link to retrieve the transaction status of the payment initiation.\n* 'scaStatus': \n  The link to retrieve the scaStatus of the corresponding authorisation sub-resource. \n  This link is only contained, if an authorisation sub-resource has been already created.\n",
                "type": "object",
                "additionalProperties": {
                    "$ref": "#/components/schemas/hrefType"
                },
                "properties": {
                    "scaOAuth": {
                        "$ref": "#/components/schemas/hrefType"
                    },
                    "self": {
                        "$ref": "#/components/schemas/hrefType"
                    },
                    "status": {
                        "$ref": "#/components/schemas/hrefType"
                    },
                    "scaStatus": {
                        "$ref": "#/components/schemas/hrefType"
                    }
                },
                "example": {
                    "self": {
                        "href": "/v1.0.8/payments/sepa-credit-transfers/1234-wertiq-983"
                    }
                }
            },
            "_linksStartScaProcess": {
                "description": "A list of hyperlinks to be recognised by the TPP. The actual hyperlinks used in the \nresponse depend on the dynamical decisions of the ASPSP when processing the request.\n\n**Remark:** All links can be relative or full links, to be decided by the ASPSP.\n\nType of links admitted in this response, (further links might be added for ASPSP defined \nextensions):\n\n- 'scaOAuth': \n  In case of a SCA OAuth2 Approach, the ASPSP is transmitting the URI where the configuration of the Authorisation Server can be retrieved. The configuration follows the OAuth 2.0 Authorisation Server Metadata specification.\n- 'scaStatus': \n  The link to retrieve the scaStatus of the corresponding authorisation sub-resource. \n",
                "type": "object",
                "additionalProperties": {
                    "$ref": "#/components/schemas/hrefType"
                },
                "properties": {
                    "scaOAuth": {
                        "$ref": "#/components/schemas/hrefType"
                    },
                    "scaStatus": {
                        "$ref": "#/components/schemas/hrefType"
                    }
                }
            },
            "_linksConsents": {
                "description": "A list of hyperlinks to be recognised by the TPP.\n\nType of links admitted in this response (which might be extended by single ASPSPs as indicated in its XS2A \ndocumentation):\n  - 'scaOAuth': \n    In case of an OAuth2 based Redirect Approach, the ASPSP is transmitting the link where the configuration \n    of the OAuth2 Server is defined. \n    The configuration follows the OAuth 2.0 Authorisation Server Metadata specification. \n  - 'self': \n    The link to the Establish Account Information Consent resource created by this request. \n    This link can be used to retrieve the resource data. \n  - 'status': \n    The link to retrieve the status of the account information consent.\n  - 'scaStatus': The link to retrieve the scaStatus of the corresponding authorisation sub-resource. \n    This link is only contained, if an authorisation sub-resource has been already created.\n",
                "type": "object",
                "additionalProperties": {
                    "$ref": "#/components/schemas/hrefType"
                },
                "properties": {
                    "scaOAuth": {
                        "$ref": "#/components/schemas/hrefType"
                    },
                    "self": {
                        "$ref": "#/components/schemas/hrefType"
                    },
                    "status": {
                        "$ref": "#/components/schemas/hrefType"
                    },
                    "scaStatus": {
                        "$ref": "#/components/schemas/hrefType"
                    }
                }
            },
            "_linksGetConsent": {
                "description": "A list of hyperlinks to be recognised by the TPP.\n\nLinks of type \"account\" and/or \"cardAccount\", depending on the nature of the consent.\n",
                "type": "object",
                "additionalProperties": {
                    "$ref": "#/components/schemas/hrefType"
                },
                "properties": {
                    "account": {
                        "$ref": "#/components/schemas/hrefType"
                    },
                    "card-account": {
                        "$ref": "#/components/schemas/hrefType"
                    }
                }
            },
            "_linksAccountReport": {
                "type": "object",
                "additionalProperties": {
                    "$ref": "#/components/schemas/hrefType"
                },
                "required": [
                    "account"
                ],
                "properties": {
                    "account": {
                        "$ref": "#/components/schemas/hrefType"
                    },
                    "first": {
                        "$ref": "#/components/schemas/hrefType"
                    },
                    "next": {
                        "$ref": "#/components/schemas/hrefType"
                    },
                    "previous": {
                        "$ref": "#/components/schemas/hrefType"
                    },
                    "last": {
                        "$ref": "#/components/schemas/hrefType"
                    }
                }
            },
            "_linksCardAccountReport": {
                "type": "object",
                "additionalProperties": {
                    "$ref": "#/components/schemas/hrefType"
                },
                "required": [
                    "cardAccount"
                ],
                "properties": {
                    "cardAccount": {
                        "$ref": "#/components/schemas/hrefType"
                    },
                    "first": {
                        "$ref": "#/components/schemas/hrefType"
                    },
                    "next": {
                        "$ref": "#/components/schemas/hrefType"
                    },
                    "previous": {
                        "$ref": "#/components/schemas/hrefType"
                    },
                    "last": {
                        "$ref": "#/components/schemas/hrefType"
                    }
                }
            },
            "_linksTransactionDetails": {
                "type": "object",
                "additionalProperties": {
                    "$ref": "#/components/schemas/hrefType"
                },
                "required": [
                    "transactionDetails"
                ],
                "properties": {
                    "transactionDetails": {
                        "$ref": "#/components/schemas/hrefType"
                    }
                }
            },
            "_linksAccountDetails": {
                "description": "Links to the account, which can be directly used for retrieving account information from this dedicated account.\n\nLinks to \"balances\" and/or \"transactions\"\n\nThese links are only supported, when the corresponding consent has been already granted.\n",
                "type": "object",
                "additionalProperties": {
                    "$ref": "#/components/schemas/hrefType"
                },
                "properties": {
                    "balances": {
                        "$ref": "#/components/schemas/hrefType"
                    },
                    "transactions": {
                        "$ref": "#/components/schemas/hrefType"
                    }
                }
            },
            "tppMessageCategory": {
                "description": "Category of the TPP message category",
                "type": "string",
                "enum": [
                    "ERROR",
                    "WARNING"
                ]
            },
            "MessageCode2XX": {
                "description": "Message codes for HTTP Error codes 2XX.",
                "type": "string",
                "enum": [
                    "WARNING"
                ]
            },
            "MessageCode400_AIS": {
                "description": "Message codes defined for AIS for HTTP Error code 400 (BAD_REQUEST).",
                "type": "string",
                "enum": [
                    "FORMAT_ERROR",
                    "PARAMETER_NOT_CONSISTENT",
                    "PARAMETER_NOT_SUPPORTED",
                    "SERVICE_INVALID",
                    "RESOURCE_UNKNOWN",
                    "RESOURCE_EXPIRED",
                    "RESOURCE_BLOCKED",
                    "TIMESTAMP_INVALID",
                    "PERIOD_INVALID",
                    "SCA_METHOD_UNKNOWN",
                    "SCA_INVALID",
                    "CONSENT_UNKNOWN",
                    "SESSIONS_NOT_SUPPORTED"
                ]
            },
            "MessageCode400_PIS": {
                "description": "Message codes defined for PIS for HTTP Error code 400 (BAD_REQUEST).",
                "type": "string",
                "enum": [
                    "FORMAT_ERROR",
                    "PARAMETER_NOT_CONSISTENT",
                    "PARAMETER_NOT_SUPPORTED",
                    "SERVICE_INVALID",
                    "RESOURCE_UNKNOWN",
                    "RESOURCE_EXPIRED",
                    "RESOURCE_BLOCKED",
                    "TIMESTAMP_INVALID",
                    "PERIOD_INVALID",
                    "SCA_METHOD_UNKNOWN",
                    "SCA_INVALID",
                    "CONSENT_UNKNOWN",
                    "PAYMENT_FAILED",
                    "EXECUTION_DATE_INVALID"
                ]
            },
            "MessageCode401_PIS": {
                "description": "Message codes defined for PIS for HTTP Error code 401 (UNAUTHORIZED).",
                "type": "string",
                "enum": [
                    "CERTIFICATE_INVALID",
                    "ROLE_INVALID",
                    "CERTIFICATE_EXPIRED",
                    "CERTIFICATE_BLOCKED",
                    "CERTIFICATE_REVOKE",
                    "CERTIFICATE_MISSING",
                    "SIGNATURE_INVALID",
                    "SIGNATURE_MISSING",
                    "CORPORATE_ID_INVALID",
                    "PSU_CREDENTIALS_INVALID",
                    "CONSENT_INVALID",
                    "CONSENT_EXPIRED",
                    "TOKEN_UNKNOWN",
                    "TOKEN_INVALID",
                    "TOKEN_EXPIRED",
                    "REQUIRED_KID_MISSING"
                ]
            },
            "MessageCode401_AIS": {
                "description": "Message codes defined for AIS for HTTP Error code 401 (UNAUTHORIZED).",
                "type": "string",
                "enum": [
                    "CERTIFICATE_INVALID",
                    "ROLE_INVALID",
                    "CERTIFICATE_EXPIRED",
                    "CERTIFICATE_BLOCKED",
                    "CERTIFICATE_REVOKE",
                    "CERTIFICATE_MISSING",
                    "SIGNATURE_INVALID",
                    "SIGNATURE_MISSING",
                    "CORPORATE_ID_INVALID",
                    "PSU_CREDENTIALS_INVALID",
                    "CONSENT_INVALID",
                    "CONSENT_EXPIRED",
                    "TOKEN_UNKNOWN",
                    "TOKEN_INVALID",
                    "TOKEN_EXPIRED"
                ]
            },
            "MessageCode401_PIIS": {
                "description": "Message codes defined for PIIS for HTTP Error code 401 (UNAUTHORIZED).",
                "type": "string",
                "enum": [
                    "CERTIFICATE_INVALID",
                    "ROLE_INVALID",
                    "CERTIFICATE_EXPIRED",
                    "CERTIFICATE_BLOCKED",
                    "CERTIFICATE_REVOKE",
                    "CERTIFICATE_MISSING",
                    "SIGNATURE_INVALID",
                    "SIGNATURE_MISSING",
                    "CORPORATE_ID_INVALID",
                    "PSU_CREDENTIALS_INVALID",
                    "CONSENT_INVALID",
                    "CONSENT_EXPIRED",
                    "TOKEN_UNKNOWN",
                    "TOKEN_INVALID",
                    "TOKEN_EXPIRED"
                ]
            },
            "MessageCode401_SBS": {
                "description": "Message codes defined for signing baskets for HTTP Error code 401 (UNAUTHORIZED).",
                "type": "string",
                "enum": [
                    "CERTIFICATE_INVALID",
                    "ROLE_INVALID",
                    "CERTIFICATE_EXPIRED",
                    "CERTIFICATE_BLOCKED",
                    "CERTIFICATE_REVOKE",
                    "CERTIFICATE_MISSING",
                    "SIGNATURE_INVALID",
                    "SIGNATURE_MISSING",
                    "CORPORATE_ID_INVALID",
                    "PSU_CREDENTIALS_INVALID",
                    "CONSENT_INVALID",
                    "CONSENT_EXPIRED",
                    "TOKEN_UNKNOWN",
                    "TOKEN_INVALID",
                    "TOKEN_EXPIRED"
                ]
            },
            "MessageCode403_PIS": {
                "description": "Message codes defined defined for PIS for PIS for HTTP Error code 403 (FORBIDDEN).",
                "type": "string",
                "enum": [
                    "CONSENT_UNKNOWN",
                    "SERVICE_BLOCKED",
                    "RESOURCE_UNKNOWN",
                    "RESOURCE_EXPIRED",
                    "PRODUCT_INVALID"
                ]
            },
            "MessageCode403_AIS": {
                "description": "Message codes defined for AIS for HTTP Error code 403 (FORBIDDEN).",
                "type": "string",
                "enum": [
                    "CONSENT_UNKNOWN",
                    "SERVICE_BLOCKED",
                    "RESOURCE_UNKNOWN",
                    "RESOURCE_EXPIRED"
                ]
            },
            "MessageCode403_PIIS": {
                "description": "Message codes defined for PIIS for HTTP Error code 403 (FORBIDDEN).",
                "type": "string",
                "enum": [
                    "CONSENT_UNKNOWN",
                    "SERVICE_BLOCKED",
                    "RESOURCE_UNKNOWN",
                    "RESOURCE_EXPIRED"
                ]
            },
            "MessageCode403_SBS": {
                "description": "Message codes defined for signing baskets for HTTP Error code 403 (FORBIDDEN).",
                "type": "string",
                "enum": [
                    "CONSENT_UNKNOWN",
                    "SERVICE_BLOCKED",
                    "RESOURCE_UNKNOWN",
                    "RESOURCE_EXPIRED"
                ]
            },
            "MessageCode404_PIS": {
                "description": "Message codes defined for PIS for HTTP Error code 404 (NOT FOUND).",
                "type": "string",
                "enum": [
                    "RESOURCE_UNKNOWN",
                    "PRODUCT_UNKNOWN"
                ]
            },
            "MessageCode404_AIS": {
                "description": "Message codes defined for AIS for HTTP Error code 404 (NOT FOUND).",
                "type": "string",
                "enum": [
                    "RESOURCE_UNKNOWN"
                ]
            },
            "MessageCode404_PIIS": {
                "description": "Message codes defined for PIIS for HTTP Error code 404 (NOT FOUND).",
                "type": "string",
                "enum": [
                    "RESOURCE_UNKNOWN"
                ]
            },
            "MessageCode404_SBS": {
                "description": "Message codes defined for signing baskets for HTTP Error code 404 (NOT FOUND).",
                "type": "string",
                "enum": [
                    "RESOURCE_UNKNOWN"
                ]
            },
            "MessageCode405_PIS": {
                "description": "Message codes defined for payment cancelations PIS for HTTP Error code 405 (METHOD NOT ALLOWED).",
                "type": "string",
                "enum": [
                    "SERVICE_INVALID"
                ]
            },
            "MessageCode405_PIS_CANC": {
                "description": "Message codes defined for payment cancelations PIS for HTTP Error code 405 (METHOD NOT ALLOWED).",
                "type": "string",
                "enum": [
                    "CANCELLATION_INVALID",
                    "SERVICE_INVALID"
                ]
            },
            "MessageCode405_AIS": {
                "description": "Message codes defined for AIS for HTTP Error code 405 (METHOD NOT ALLOWED).",
                "type": "string",
                "enum": [
                    "SERVICE_INVALID"
                ]
            },
            "MessageCode405_PIIS": {
                "description": "Message codes defined for PIIS for HTTP Error code 405 (METHOD NOT ALLOWED).",
                "type": "string",
                "enum": [
                    "SERVICE_INVALID"
                ]
            },
            "MessageCode405_SBS": {
                "description": "Message codes defined for SBS for HTTP Error code 405 (METHOD NOT ALLOWED).",
                "type": "string",
                "enum": [
                    "SERVICE_INVALID"
                ]
            },
            "MessageCode406_AIS": {
                "description": "Message codes defined for AIS for HTTP Error code 406 (NOT ACCEPTABLE).",
                "type": "string",
                "enum": [
                    "REQUESTED_FORMATS_INVALID"
                ]
            },
            "MessageCode409_AIS": {
                "description": "Message codes defined for AIS for HTTP Error code 409 (CONFLICT).",
                "type": "string",
                "enum": [
                    "STATUS_INVALID"
                ]
            },
            "MessageCode409_PIS": {
                "description": "Message codes defined for PIS for HTTP Error code 409 (CONFLICT).",
                "type": "string",
                "enum": [
                    "STATUS_INVALID"
                ]
            },
            "MessageCode409_PIIS": {
                "description": "Message codes defined for PIIS for HTTP Error code 409 (CONFLICT).",
                "type": "string",
                "enum": [
                    "STATUS_INVALID"
                ]
            },
            "MessageCode409_SBS": {
                "description": "Message codes defined for signing baskets for HTTP Error code 409 (CONFLICT).",
                "type": "string",
                "enum": [
                    "REFERENCE_STATUS_INVALID",
                    "STATUS_INVALID"
                ]
            },
            "MessageCode429_AIS": {
                "description": "Message codes for HTTP Error code 429 (TOO MANY REQUESTS).",
                "type": "string",
                "enum": [
                    "ACCESS_EXCEEDED"
                ]
            },
            "tppMessageText": {
                "description": "Additional explaining text to the TPP.",
                "type": "string",
                "maxLength": 500
            },
            "tppMessage2XX": {
                "type": "object",
                "required": [
                    "category",
                    "code"
                ],
                "properties": {
                    "category": {
                        "$ref": "#/components/schemas/tppMessageCategory"
                    },
                    "code": {
                        "$ref": "#/components/schemas/MessageCode2XX"
                    },
                    "path": {
                        "type": "string"
                    },
                    "text": {
                        "$ref": "#/components/schemas/tppMessageText"
                    }
                }
            },
            "tppMessage400_AIS": {
                "type": "object",
                "required": [
                    "category",
                    "code"
                ],
                "properties": {
                    "category": {
                        "$ref": "#/components/schemas/tppMessageCategory"
                    },
                    "code": {
                        "$ref": "#/components/schemas/MessageCode400_AIS"
                    },
                    "path": {
                        "type": "string"
                    },
                    "text": {
                        "$ref": "#/components/schemas/tppMessageText"
                    }
                }
            },
            "tppMessage400_PIS": {
                "type": "object",
                "required": [
                    "category",
                    "code"
                ],
                "properties": {
                    "category": {
                        "$ref": "#/components/schemas/tppMessageCategory"
                    },
                    "code": {
                        "$ref": "#/components/schemas/MessageCode400_PIS"
                    },
                    "path": {
                        "type": "string"
                    },
                    "text": {
                        "$ref": "#/components/schemas/tppMessageText"
                    }
                }
            },
            "tppMessage401_PIS": {
                "type": "object",
                "required": [
                    "category",
                    "code"
                ],
                "properties": {
                    "category": {
                        "$ref": "#/components/schemas/tppMessageCategory"
                    },
                    "code": {
                        "$ref": "#/components/schemas/MessageCode401_PIS"
                    },
                    "path": {
                        "type": "string"
                    },
                    "text": {
                        "$ref": "#/components/schemas/tppMessageText"
                    }
                }
            },
            "tppMessage401_AIS": {
                "type": "object",
                "required": [
                    "category",
                    "code"
                ],
                "properties": {
                    "category": {
                        "$ref": "#/components/schemas/tppMessageCategory"
                    },
                    "code": {
                        "$ref": "#/components/schemas/MessageCode401_AIS"
                    },
                    "path": {
                        "type": "string"
                    },
                    "text": {
                        "$ref": "#/components/schemas/tppMessageText"
                    }
                }
            },
            "tppMessage401_PIIS": {
                "type": "object",
                "required": [
                    "category",
                    "code"
                ],
                "properties": {
                    "category": {
                        "$ref": "#/components/schemas/tppMessageCategory"
                    },
                    "code": {
                        "$ref": "#/components/schemas/MessageCode401_PIIS"
                    },
                    "path": {
                        "type": "string"
                    },
                    "text": {
                        "$ref": "#/components/schemas/tppMessageText"
                    }
                }
            },
            "tppMessage401_SBS": {
                "type": "object",
                "required": [
                    "category",
                    "code"
                ],
                "properties": {
                    "category": {
                        "$ref": "#/components/schemas/tppMessageCategory"
                    },
                    "code": {
                        "$ref": "#/components/schemas/MessageCode401_SBS"
                    },
                    "path": {
                        "type": "string"
                    },
                    "text": {
                        "$ref": "#/components/schemas/tppMessageText"
                    }
                }
            },
            "tppMessage403_PIS": {
                "type": "object",
                "required": [
                    "category",
                    "code"
                ],
                "properties": {
                    "category": {
                        "$ref": "#/components/schemas/tppMessageCategory"
                    },
                    "code": {
                        "$ref": "#/components/schemas/MessageCode403_PIS"
                    },
                    "path": {
                        "type": "string"
                    },
                    "text": {
                        "$ref": "#/components/schemas/tppMessageText"
                    }
                }
            },
            "tppMessage403_AIS": {
                "type": "object",
                "required": [
                    "category",
                    "code"
                ],
                "properties": {
                    "category": {
                        "$ref": "#/components/schemas/tppMessageCategory"
                    },
                    "code": {
                        "$ref": "#/components/schemas/MessageCode403_AIS"
                    },
                    "path": {
                        "type": "string"
                    },
                    "text": {
                        "$ref": "#/components/schemas/tppMessageText"
                    }
                }
            },
            "tppMessage403_PIIS": {
                "type": "object",
                "required": [
                    "category",
                    "code"
                ],
                "properties": {
                    "category": {
                        "$ref": "#/components/schemas/tppMessageCategory"
                    },
                    "code": {
                        "$ref": "#/components/schemas/MessageCode403_PIIS"
                    },
                    "path": {
                        "type": "string"
                    },
                    "text": {
                        "$ref": "#/components/schemas/tppMessageText"
                    }
                }
            },
            "tppMessage403_SBS": {
                "type": "object",
                "required": [
                    "category",
                    "code"
                ],
                "properties": {
                    "category": {
                        "$ref": "#/components/schemas/tppMessageCategory"
                    },
                    "code": {
                        "$ref": "#/components/schemas/MessageCode403_SBS"
                    },
                    "path": {
                        "type": "string"
                    },
                    "text": {
                        "$ref": "#/components/schemas/tppMessageText"
                    }
                }
            },
            "tppMessage404_PIS": {
                "type": "object",
                "required": [
                    "category",
                    "code"
                ],
                "properties": {
                    "category": {
                        "$ref": "#/components/schemas/tppMessageCategory"
                    },
                    "code": {
                        "$ref": "#/components/schemas/MessageCode404_PIS"
                    },
                    "path": {
                        "type": "string"
                    },
                    "text": {
                        "$ref": "#/components/schemas/tppMessageText"
                    }
                }
            },
            "tppMessage404_AIS": {
                "type": "object",
                "required": [
                    "category",
                    "code"
                ],
                "properties": {
                    "category": {
                        "$ref": "#/components/schemas/tppMessageCategory"
                    },
                    "code": {
                        "$ref": "#/components/schemas/MessageCode404_AIS"
                    },
                    "path": {
                        "type": "string"
                    },
                    "text": {
                        "$ref": "#/components/schemas/tppMessageText"
                    }
                }
            },
            "tppMessage404_PIIS": {
                "type": "object",
                "required": [
                    "category",
                    "code"
                ],
                "properties": {
                    "category": {
                        "$ref": "#/components/schemas/tppMessageCategory"
                    },
                    "code": {
                        "$ref": "#/components/schemas/MessageCode404_PIIS"
                    },
                    "path": {
                        "type": "string"
                    },
                    "text": {
                        "$ref": "#/components/schemas/tppMessageText"
                    }
                }
            },
            "tppMessage404_SBS": {
                "type": "object",
                "required": [
                    "category",
                    "code"
                ],
                "properties": {
                    "category": {
                        "$ref": "#/components/schemas/tppMessageCategory"
                    },
                    "code": {
                        "$ref": "#/components/schemas/MessageCode404_SBS"
                    },
                    "path": {
                        "type": "string"
                    },
                    "text": {
                        "$ref": "#/components/schemas/tppMessageText"
                    }
                }
            },
            "tppMessage405_PIS": {
                "type": "object",
                "required": [
                    "category",
                    "code"
                ],
                "properties": {
                    "category": {
                        "$ref": "#/components/schemas/tppMessageCategory"
                    },
                    "code": {
                        "$ref": "#/components/schemas/MessageCode405_PIS"
                    },
                    "path": {
                        "type": "string"
                    },
                    "text": {
                        "$ref": "#/components/schemas/tppMessageText"
                    }
                }
            },
            "tppMessage405_PIS_CANC": {
                "type": "object",
                "required": [
                    "category",
                    "code"
                ],
                "properties": {
                    "category": {
                        "$ref": "#/components/schemas/tppMessageCategory"
                    },
                    "code": {
                        "$ref": "#/components/schemas/MessageCode405_PIS_CANC"
                    },
                    "path": {
                        "type": "string"
                    },
                    "text": {
                        "$ref": "#/components/schemas/tppMessageText"
                    }
                }
            },
            "tppMessage405_AIS": {
                "type": "object",
                "required": [
                    "category",
                    "code"
                ],
                "properties": {
                    "category": {
                        "$ref": "#/components/schemas/tppMessageCategory"
                    },
                    "code": {
                        "$ref": "#/components/schemas/MessageCode405_AIS"
                    },
                    "path": {
                        "type": "string"
                    },
                    "text": {
                        "$ref": "#/components/schemas/tppMessageText"
                    }
                }
            },
            "tppMessage405_PIIS": {
                "type": "object",
                "required": [
                    "category",
                    "code"
                ],
                "properties": {
                    "category": {
                        "$ref": "#/components/schemas/tppMessageCategory"
                    },
                    "code": {
                        "$ref": "#/components/schemas/MessageCode405_PIIS"
                    },
                    "path": {
                        "type": "string"
                    },
                    "text": {
                        "$ref": "#/components/schemas/tppMessageText"
                    }
                }
            },
            "tppMessage405_SBS": {
                "type": "object",
                "required": [
                    "category",
                    "code"
                ],
                "properties": {
                    "category": {
                        "$ref": "#/components/schemas/tppMessageCategory"
                    },
                    "code": {
                        "$ref": "#/components/schemas/MessageCode405_SBS"
                    },
                    "path": {
                        "type": "string"
                    },
                    "text": {
                        "$ref": "#/components/schemas/tppMessageText"
                    }
                }
            },
            "tppMessage409_PIS": {
                "type": "object",
                "required": [
                    "category",
                    "code"
                ],
                "properties": {
                    "category": {
                        "$ref": "#/components/schemas/tppMessageCategory"
                    },
                    "code": {
                        "$ref": "#/components/schemas/MessageCode409_PIS"
                    },
                    "path": {
                        "type": "string"
                    },
                    "text": {
                        "$ref": "#/components/schemas/tppMessageText"
                    }
                },
                "example": {
                    "category": "ERROR",
                    "code": "STATUS_INVALID",
                    "text": "additional text information of the ASPSP up to 512 characters"
                }
            },
            "tppMessage406_AIS": {
                "type": "object",
                "required": [
                    "category",
                    "code"
                ],
                "properties": {
                    "category": {
                        "$ref": "#/components/schemas/tppMessageCategory"
                    },
                    "code": {
                        "$ref": "#/components/schemas/MessageCode406_AIS"
                    },
                    "path": {
                        "type": "string"
                    },
                    "text": {
                        "$ref": "#/components/schemas/tppMessageText"
                    }
                }
            },
            "tppMessage409_AIS": {
                "type": "object",
                "required": [
                    "category",
                    "code"
                ],
                "properties": {
                    "category": {
                        "$ref": "#/components/schemas/tppMessageCategory"
                    },
                    "code": {
                        "$ref": "#/components/schemas/MessageCode409_AIS"
                    },
                    "path": {
                        "type": "string"
                    },
                    "text": {
                        "$ref": "#/components/schemas/tppMessageText"
                    }
                },
                "example": {
                    "category": "ERROR",
                    "code": "STATUS_INVALID",
                    "text": "additional text information of the ASPSP up to 512 characters"
                }
            },
            "tppMessage409_PIIS": {
                "type": "object",
                "required": [
                    "category",
                    "code"
                ],
                "properties": {
                    "category": {
                        "$ref": "#/components/schemas/tppMessageCategory"
                    },
                    "code": {
                        "$ref": "#/components/schemas/MessageCode409_PIIS"
                    },
                    "path": {
                        "type": "string"
                    },
                    "text": {
                        "$ref": "#/components/schemas/tppMessageText"
                    }
                },
                "example": {
                    "category": "ERROR",
                    "code": "STATUS_INVALID",
                    "text": "additional text information of the ASPSP up to 512 characters"
                }
            },
            "tppMessage409_SBS": {
                "type": "object",
                "required": [
                    "category",
                    "code"
                ],
                "properties": {
                    "category": {
                        "$ref": "#/components/schemas/tppMessageCategory"
                    },
                    "code": {
                        "$ref": "#/components/schemas/MessageCode409_SBS"
                    },
                    "path": {
                        "type": "string"
                    },
                    "text": {
                        "$ref": "#/components/schemas/tppMessageText"
                    }
                },
                "example": {
                    "category": "ERROR",
                    "code": "STATUS_INVALID",
                    "text": "additional text information of the ASPSP up to 512 characters"
                }
            },
            "tppMessage429_AIS": {
                "type": "object",
                "required": [
                    "category",
                    "code"
                ],
                "properties": {
                    "category": {
                        "$ref": "#/components/schemas/tppMessageCategory"
                    },
                    "code": {
                        "$ref": "#/components/schemas/MessageCode429_AIS"
                    },
                    "path": {
                        "type": "string"
                    },
                    "text": {
                        "$ref": "#/components/schemas/tppMessageText"
                    }
                },
                "example": {
                    "category": "ERROR",
                    "code": "ACCESS_EXCEEDED",
                    "text": "additional text information of the ASPSP up to 512 characters"
                }
            },
            "Error400_NG_PIS": {
                "description": "NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 400.\n",
                "type": "object",
                "properties": {
                    "tppMessages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/tppMessage400_PIS"
                        }
                    },
                    "_links": {
                        "$ref": "#/components/schemas/_linksAll"
                    }
                }
            },
            "Error400_NG_AIS": {
                "description": "NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 400.\n",
                "type": "object",
                "properties": {
                    "tppMessages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/tppMessage400_AIS"
                        }
                    },
                    "_links": {
                        "$ref": "#/components/schemas/_linksAll"
                    }
                }
            },
            "Error401_NG_PIS": {
                "description": "NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 401.\n",
                "type": "object",
                "properties": {
                    "tppMessages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/tppMessage401_PIS"
                        }
                    },
                    "_links": {
                        "$ref": "#/components/schemas/_linksAll"
                    }
                }
            },
            "Error401_NG_AIS": {
                "description": "NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 401.\n",
                "type": "object",
                "properties": {
                    "tppMessages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/tppMessage401_AIS"
                        }
                    },
                    "_links": {
                        "$ref": "#/components/schemas/_linksAll"
                    }
                }
            },
            "Error401_NG_PIIS": {
                "description": "NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 401.\n",
                "type": "object",
                "properties": {
                    "tppMessages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/tppMessage401_PIIS"
                        }
                    },
                    "_links": {
                        "$ref": "#/components/schemas/_linksAll"
                    }
                }
            },
            "Error401_NG_SBS": {
                "description": "NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 401.\n",
                "type": "object",
                "properties": {
                    "tppMessages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/tppMessage401_SBS"
                        }
                    },
                    "_links": {
                        "$ref": "#/components/schemas/_linksAll"
                    }
                }
            },
            "Error403_NG_PIS": {
                "description": "NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 403.\n",
                "type": "object",
                "properties": {
                    "tppMessages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/tppMessage403_PIS"
                        }
                    },
                    "_links": {
                        "$ref": "#/components/schemas/_linksAll"
                    }
                }
            },
            "Error403_NG_AIS": {
                "description": "NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 403.\n",
                "type": "object",
                "properties": {
                    "tppMessages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/tppMessage403_AIS"
                        }
                    },
                    "_links": {
                        "$ref": "#/components/schemas/_linksAll"
                    }
                }
            },
            "Error403_NG_PIIS": {
                "description": "NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 403.\n",
                "type": "object",
                "properties": {
                    "tppMessages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/tppMessage403_PIIS"
                        }
                    },
                    "_links": {
                        "$ref": "#/components/schemas/_linksAll"
                    }
                }
            },
            "Error403_NG_SBS": {
                "description": "NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 403.\n",
                "type": "object",
                "properties": {
                    "tppMessages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/tppMessage403_SBS"
                        }
                    },
                    "_links": {
                        "$ref": "#/components/schemas/_linksAll"
                    }
                }
            },
            "Error404_NG_PIS": {
                "description": "NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 404.\n",
                "type": "object",
                "properties": {
                    "tppMessages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/tppMessage404_PIS"
                        }
                    },
                    "_links": {
                        "$ref": "#/components/schemas/_linksAll"
                    }
                }
            },
            "Error404_NG_AIS": {
                "description": "NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 404.\n",
                "type": "object",
                "properties": {
                    "tppMessages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/tppMessage404_AIS"
                        }
                    },
                    "_links": {
                        "$ref": "#/components/schemas/_linksAll"
                    }
                }
            },
            "Error404_NG_PIIS": {
                "description": "NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 404.\n",
                "type": "object",
                "properties": {
                    "tppMessages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/tppMessage404_PIIS"
                        }
                    },
                    "_links": {
                        "$ref": "#/components/schemas/_linksAll"
                    }
                }
            },
            "Error404_NG_SBS": {
                "description": "NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 404.\n",
                "type": "object",
                "properties": {
                    "tppMessages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/tppMessage404_SBS"
                        }
                    },
                    "_links": {
                        "$ref": "#/components/schemas/_linksAll"
                    }
                }
            },
            "Error405_NG_PIS": {
                "description": "NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 401.\n",
                "type": "object",
                "properties": {
                    "tppMessages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/tppMessage405_PIS"
                        }
                    },
                    "_links": {
                        "$ref": "#/components/schemas/_linksAll"
                    }
                }
            },
            "Error405_NG_PIS_CANC": {
                "description": "NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 401.\n",
                "type": "object",
                "properties": {
                    "tppMessages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/tppMessage405_PIS_CANC"
                        }
                    },
                    "_links": {
                        "$ref": "#/components/schemas/_linksAll"
                    }
                }
            },
            "Error405_NG_AIS": {
                "description": "NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 401.\n",
                "type": "object",
                "properties": {
                    "tppMessages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/tppMessage405_AIS"
                        }
                    },
                    "_links": {
                        "$ref": "#/components/schemas/_linksAll"
                    }
                }
            },
            "Error405_NG_PIIS": {
                "description": "NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 401.\n",
                "type": "object",
                "properties": {
                    "tppMessages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/tppMessage405_PIIS"
                        }
                    },
                    "_links": {
                        "$ref": "#/components/schemas/_linksAll"
                    }
                }
            },
            "Error405_NG_SBS": {
                "description": "NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 401.\n",
                "type": "object",
                "properties": {
                    "tppMessages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/tppMessage405_SBS"
                        }
                    },
                    "_links": {
                        "$ref": "#/components/schemas/_linksAll"
                    }
                }
            },
            "Error406_NG_AIS": {
                "description": "NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 406.\n",
                "type": "object",
                "properties": {
                    "tppMessages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/tppMessage406_AIS"
                        }
                    },
                    "_links": {
                        "$ref": "#/components/schemas/_linksAll"
                    }
                }
            },
            "Error409_NG_PIS": {
                "description": "NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 409.\n",
                "type": "object",
                "properties": {
                    "tppMessages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/tppMessage409_PIS"
                        }
                    },
                    "_links": {
                        "$ref": "#/components/schemas/_linksAll"
                    }
                }
            },
            "Error409_NG_AIS": {
                "description": "NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 409.\n",
                "type": "object",
                "properties": {
                    "tppMessages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/tppMessage409_AIS"
                        }
                    },
                    "_links": {
                        "$ref": "#/components/schemas/_linksAll"
                    }
                }
            },
            "Error409_NG_PIIS": {
                "description": "NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 409.\n",
                "type": "object",
                "properties": {
                    "tppMessages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/tppMessage409_PIIS"
                        }
                    },
                    "_links": {
                        "$ref": "#/components/schemas/_linksAll"
                    }
                }
            },
            "Error409_NG_SBS": {
                "description": "NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 409.\n",
                "type": "object",
                "properties": {
                    "tppMessages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/tppMessage409_SBS"
                        }
                    },
                    "_links": {
                        "$ref": "#/components/schemas/_linksAll"
                    }
                }
            },
            "Error429_NG_AIS": {
                "description": "NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 429.\n",
                "type": "object",
                "properties": {
                    "tppMessages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/tppMessage429_AIS"
                        }
                    },
                    "_links": {
                        "$ref": "#/components/schemas/_linksAll"
                    }
                }
            }
        },
        "parameters": {
            "paymentService": {
                "name": "payment-service",
                "in": "path",
                "description": "Payment service:\n\nPossible values are:\n* payments\n* bulk-payments\n* periodic-payments\n",
                "required": true,
                "schema": {
                    "type": "string",
                    "enum": [
                        "payments",
                        "bulk-payments",
                        "periodic-payments"
                    ]
                }
            },
            "paymentProduct": {
                "name": "payment-product",
                "in": "path",
                "description": "The addressed payment product endpoint.\nThe ASPSP will publish which of the payment products/endpoints will be supported.\n\nThe following payment products are supported:\n  - masav\n  - zahav\n  - FP \u2013 relevant also for transfers on the same bank.\n",
                "required": true,
                "schema": {
                    "type": "string",
                    "enum": [
                        "masav",
                        "zahav",
                        "fp"
                    ]
                }
            },
            "paymentId": {
                "name": "paymentId",
                "in": "path",
                "description": "Resource identification of the generated payment initiation resource.",
                "required": true,
                "schema": {
                    "$ref": "#/components/schemas/paymentId"
                }
            },
            "authorisationId": {
                "name": "authorisationId",
                "in": "path",
                "description": "Resource identification of the related SCA.",
                "required": true,
                "schema": {
                    "$ref": "#/components/schemas/authorisationId"
                }
            },
            "accountId": {
                "name": "account-id",
                "in": "path",
                "description": "This identification is denoting the addressed account. \nThe account-id is retrieved by using a \"Read Account List\" call. \nThe account-id is the \"id\" attribute of the account structure. \nIts value is constant at least throughout the lifecycle of a given consent.\n",
                "required": true,
                "schema": {
                    "$ref": "#/components/schemas/accountId"
                }
            },
            "transactionId": {
                "name": "transactionId",
                "in": "path",
                "description": "This identification is given by the attribute transactionId of the corresponding entry of a transaction list.\n",
                "required": true,
                "schema": {
                    "$ref": "#/components/schemas/transactionId"
                }
            },
            "consentId_PATH": {
                "name": "consentId",
                "in": "path",
                "description": "ID of the corresponding consent object as returned by an Account Information Consent Request.\n",
                "required": true,
                "schema": {
                    "$ref": "#/components/schemas/consentId"
                }
            },
            "consentId_HEADER_optional": {
                "name": "Consent-ID",
                "in": "header",
                "description": "This data element may be contained, if the payment initiation transaction is part of a session, i.e. combined AIS/PIS service.\nThis then contains the consentId of the related AIS consent, which was performed prior to this payment initiation.\n",
                "required": false,
                "schema": {
                    "$ref": "#/components/schemas/consentId"
                }
            },
            "Authorization": {
                "name": "Authorization",
                "in": "header",
                "description": "This field  might be used in case where a consent was agreed between ASPSP and PSU through an OAuth2 based protocol, \nfacilitated by the TPP.\n",
                "required": false,
                "schema": {
                    "$ref": "#/components/schemas/authorization"
                }
            },
            "consentId_HEADER_mandatory": {
                "name": "Consent-ID",
                "in": "header",
                "description": "This then contains the consentId of the related AIS consent, which was performed prior to this payment initiation.\n",
                "required": true,
                "schema": {
                    "$ref": "#/components/schemas/consentId"
                }
            },
            "withBalanceQuery": {
                "name": "withBalance",
                "in": "query",
                "description": "If contained, this function reads the list of accessible payment accounts including the booking balance, \nif granted by the PSU in the related consent and available by the ASPSP. \nThis parameter might be ignored by the ASPSP. \n",
                "required": false,
                "schema": {
                    "type": "boolean"
                }
            },
            "dateFrom": {
                "name": "dateFrom",
                "in": "query",
                "description": "Conditional: Starting date (inclusive the date dateFrom) of the transaction list, mandated if no delta access is required.\n\nFor booked transactions, the relevant date is the booking date. \n\nFor pending transactions, the relevant date is the entry date, which may not be transparent \nneither in this API nor other channels of the ASPSP.\n BOI-REMARK: the minimum value can be 12 month prior to \"now\". In case of exception from the minimum value a message code PERIOD_INVALID should returned.\n",
                "required": true,
                "schema": {
                    "type": "string",
                    "format": "date"
                }
            },
            "dateTo": {
                "name": "dateTo",
                "in": "query",
                "description": "End date (inclusive the data dateTo) of the transaction list, default is \"now\" if not given. \n\nMight be ignored if a delta function is used.\n\nFor booked transactions, the relevant date is the booking date. \n\nFor pending transactions, the relevant date is the entry date, which may not be transparent \nneither in this API nor other channels of the ASPSP.\nBOI-REMARK: ASPSP must support this option for account-id/transactions\n",
                "required": false,
                "schema": {
                    "type": "string",
                    "format": "date"
                }
            },
            "entryReferenceFrom": {
                "name": "entryReferenceFrom",
                "in": "query",
                "description": "This data attribute is indicating that the AISP is in favour to get all transactions after \nthe transaction with identification entryReferenceFrom alternatively to the above defined period. \nThis is a implementation of a delta access. \nIf this data element is contained, the entries \"dateFrom\" and \"dateTo\" might be ignored by the ASPSP \nif a delta report is supported.\n\nOptional if supported by API provider.\n",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "bookingStatus": {
                "name": "bookingStatus",
                "in": "query",
                "description": "Permitted codes are \n  * \"booked\",\n  * \"pending\" and \n  * \"both\"\n\"booked\" shall be supported by the ASPSP.\nTo support the \"pending\" and \"both\" feature is optional for the ASPSP, \nError code if not supported in the online banking frontend\n",
                "required": true,
                "schema": {
                    "type": "string",
                    "enum": [
                        "booked",
                        "pending",
                        "both"
                    ]
                }
            },
            "deltaList": {
                "name": "deltaList",
                "in": "query",
                "description": "This data attribute is indicating that the AISP is in favour to get all transactions after the last report access for this PSU on the addressed account. This is another implementation of a delta access-report.\nThis delta indicator might be rejected by the ASPSP if this function is not supported.\nOptional if supported by API provider",
                "schema": {
                    "type": "boolean"
                }
            },
            "deltaList_mandatory": {
                "name": "deltaList",
                "in": "query",
                "description": "This data attribute is indicating that the AISP is in favour to get all transactions after the last report access for this PSU on the addressed account. This is another implementation of a delta access-report.\nThis delta indicator might be rejected by the ASPSP if this function is not supported.",
                "schema": {
                    "type": "boolean"
                },
                "required": true
            },
            "X-Request-ID": {
                "name": "X-Request-ID",
                "in": "header",
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "required": true,
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "schema": {
                    "type": "string",
                    "format": "uuid"
                }
            },
            "Digest": {
                "name": "Digest",
                "in": "header",
                "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request.",
                "schema": {
                    "type": "string",
                    "maxLength": 1024
                },
                "required": true,
                "example": "SHA-256=hl1/Eps8BEQW58FJhDApwJXjGY4nr1ArGDHIT25vq6A="
            },
            "Signature": {
                "name": "Signature",
                "in": "header",
                "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.\n",
                "schema": {
                    "type": "string",
                    "maxLength": 4096
                },
                "required": true,
                "example": "keyId=\"SN=9FA1,CA=CN=D-TRUST%20CA%202-1%202015,O=D-Trust%20GmbH,C=DE\",algorithm=\"rsa-sha256\", headers=\"Digest X-Request-ID PSU-ID TPP-Redirect-URI Date\", signature=\"Base64(RSA-SHA256(signing string))\"\n"
            },
            "TPP-Signature-Certificate": {
                "name": "TPP-Signature-Certificate",
                "in": "header",
                "description": "The certificate used for signing the request, in base64 encoding. \nMust be contained if a signature is contained.\n",
                "schema": {
                    "type": "string",
                    "format": "byte"
                },
                "required": true
            },
            "TPP-Redirect-Preferred": {
                "name": "TPP-Redirect-Preferred",
                "in": "header",
                "description": "BOI-REMARK- If it equals \"false\" , the ASPSP has to choose Decoupled SCA approach if supported by the ASPSP for the related PSU, because Embedded does not supported.\nASPSP not supporting Decoupled SCA approach can ignore this attribute.\n",
                "schema": {
                    "type": "string",
                    "enum": [
                        "true",
                        "false"
                    ]
                },
                "required": false
            },
            "TPP-Redirect-URI": {
                "name": "TPP-Redirect-URI",
                "in": "header",
                "description": "URI of the TPP, where the transaction flow shall be redirected to after a Redirect.\n\nMandated for the Redirect SCA Approach, specifically \nwhen TPP-Redirect-Preferred equals \"true\".\nIt is recommended to always use this header field.\n\n**Remark for Future:** \nThis field might be changed to mandatory in the next version of the specification.\n",
                "schema": {
                    "type": "string",
                    "format": "uri",
                    "maxLength": 2048
                },
                "required": false
            },
            "TPP-Nok-Redirect-URI": {
                "name": "TPP-Nok-Redirect-URI",
                "in": "header",
                "description": "If this URI is contained, the TPP is asking to redirect the transaction flow to this address instead of the TPP-Redirect-URI in case\nof a negative result of the redirect SCA method. This might be ignored by the ASPSP.\n",
                "schema": {
                    "type": "string",
                    "format": "uri",
                    "maxLength": 2048
                },
                "required": false
            },
            "TPP-Explicit-Authorisation-Preferred": {
                "name": "TPP-Explicit-Authorisation-Preferred",
                "in": "header",
                "description": "If it equals \"true\", the TPP prefers to start the authorisation process separately, \ne.g. because of the usage of a signing basket. \nThis preference might be ignored by the ASPSP, if a signing basket is not supported as functionality.\n\nIf it equals \"false\" or if the parameter is not used, there is no preference of the TPP. \nThis especially indicates that the TPP assumes a direct authorisation of the transaction in the next step, \nwithout using a signing basket.\n",
                "schema": {
                    "type": "string",
                    "enum": [
                        "true",
                        "false"
                    ]
                },
                "required": false
            },
            "TPP-Rejection-NoFunds-Preferred": {
                "name": "TPP-Rejection-NoFunds-Preferred",
                "in": "header",
                "description": "If it equals \"true\" then the TPP prefers a rejection of the payment initiation in case the ASPSP is \nproviding an integrated confirmation of funds request an the result of this is that not sufficient \nfunds are available.\n\nIf it equals \"false\" then the TPP prefers that the ASPSP is dealing with the payment initiation like \nin the ASPSPs online channel, potentially waiting for a certain time period for funds to arrive to initiate the payment.\n\nThis parameter might be ignored by the ASPSP.\n",
                "schema": {
                    "type": "string",
                    "enum": [
                        "true",
                        "false"
                    ]
                },
                "required": false
            },
            "TPP-Notification-URI": {
                "name": "TPP-Notification-URI",
                "in": "header",
                "description": "URI for the Endpoint of the TPP-API to which the status of the payment initiation should be sent.\nThis header field may by ignored by the ASPSP.\n\nFor security reasons, it shall be ensured that the TPP-Notification-URI as introduced above is secured by the TPP eIDAS QWAC used for identification of the TPP. The following applies:\n\nURIs which are provided by TPPs in TPP-Notification-URI shall comply with the domain secured by the eIDAS QWAC certificate of the TPP in the field CN or SubjectAltName of the certificate. Please note that in case of example-TPP.com as certificate entry TPP- Notification-URI like www.example-TPP.com/xs2a-client/v1.0.8/ASPSPidentifcation/mytransaction- id/notifications or notifications.example-TPP.com/xs2a-client/v1.0.8/ASPSPidentifcation/mytransaction- id/notifications would be compliant.\n\nWildcard definitions shall be taken into account for compliance checks by the ASPSP.\n ASPSPs may respond with ASPSP-Notification-Support set to false, if the provided URIs do not comply.\n",
                "schema": {
                    "type": "string",
                    "format": "uri",
                    "maxLength": 2048
                },
                "required": false
            },
            "TPP-Notification-Content-Preferred": {
                "name": "TPP-Notification-Content-Preferred",
                "in": "header",
                "description": "The string has the form \n\nstatus=X1, ..., Xn\n\nwhere Xi is one of the constants SCA, PROCESS, LAST and where constants are not\nrepeated.\nThe usage of the constants supports the of following semantics:\n\n  SCA: A notification on every change of the scaStatus attribute for all related authorisation processes is preferred by the TPP.\n\n  PROCESS: A notification on all changes of consentStatus or transactionStatus attributes is preferred by the TPP.\n  LAST: Only a notification on the last consentStatus or transactionStatus as available in the XS2A interface is preferred by the TPP.\n\nThis header field may be ignored, if the ASPSP does not support resource notification services for the related TPP.\n",
                "schema": {
                    "type": "string",
                    "maxLength": 2048
                },
                "required": false
            },
            "PSU-ID": {
                "name": "PSU-ID",
                "in": "header",
                "description": "BOI-REMARK - The PSU id number or passport number.\nPossible values are:\n* ID = only digits.\n* Passport =  2 characters ISO 3166 country code + '-' + Passport number.\n",
                "schema": {
                    "type": "string",
                    "pattern": "^([0-9]{9}|[A-Za-z]{2}-([A-Za-z0-9]){1,16})$"
                },
                "required": true,
                "example": "IL-12345678945"
            },
            "PSU-ID-Type": {
                "name": "PSU-ID-Type",
                "in": "header",
                "description": "BOI-REMARK - Specific brands or channels of the ASPSP only in case there is more than one.\nPossible values should be found in ASPSP's documentation and get approved in advance by BOI.\n",
                "schema": {
                    "type": "string",
                    "maxLength": 512
                },
                "required": false
            },
            "PSU-Corporate-ID": {
                "name": "PSU-Corporate-ID",
                "in": "header",
                "description": "Might be mandated in the ASPSP's documentation. Only used in a corporate context.\n",
                "schema": {
                    "type": "string",
                    "pattern": "[A-Z]{2}[-]\\d{9,10}|\\d{9,10}"
                },
                "required": false
            },
            "PSU-Corporate-ID-Type": {
                "name": "PSU-Corporate-ID-Type",
                "in": "header",
                "description": "Might be mandated in the ASPSP's documentation. Only used in a corporate context.\n",
                "schema": {
                    "type": "string",
                    "maxLength": 512
                },
                "required": false
            },
            "PSU-IP-Address_mandatory": {
                "name": "PSU-IP-Address",
                "in": "header",
                "description": "The forwarded IP Address header field consists of the corresponding http request IP Address field between PSU and TPP.\n",
                "schema": {
                    "type": "string",
                    "format": "ipv4"
                },
                "required": true,
                "example": "192.168.8.78"
            },
            "PSU-IP-Address_optional": {
                "name": "PSU-IP-Address",
                "in": "header",
                "description": "The forwarded IP Address header field consists of the corresponding http request IP Address field between PSU and TPP.\n",
                "schema": {
                    "type": "string",
                    "format": "ipv4"
                },
                "required": false,
                "example": "192.168.8.78"
            },
            "PSU-IP-Address_conditionalForAis": {
                "name": "PSU-IP-Address",
                "in": "header",
                "description": "The forwarded IP Address header field consists of the corresponding HTTP request \nIP Address field between PSU and TPP. \nIt shall be contained if and only if this request was actively initiated by the PSU.\n",
                "schema": {
                    "type": "string",
                    "format": "ipv4"
                },
                "required": false,
                "example": "192.168.8.78"
            },
            "PSU-IP-Port": {
                "name": "PSU-IP-Port",
                "in": "header",
                "description": "The forwarded IP Port header field consists of the corresponding HTTP request IP Port field between PSU and TPP, if available.\n",
                "schema": {
                    "type": "string",
                    "maxLength": 5
                },
                "required": false,
                "example": "1234"
            },
            "PSU-IP-Port_mandatory": {
                "name": "PSU-IP-Port",
                "in": "header",
                "description": "The forwarded IP Port header field consists of the corresponding HTTP request IP Port field between PSU and TPP, if available.\n",
                "schema": {
                    "type": "string",
                    "maxLength": 5
                },
                "required": false,
                "example": "1234"
            },
            "PSU-Accept": {
                "name": "PSU-Accept",
                "in": "header",
                "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
                "schema": {
                    "type": "string",
                    "maxLength": 1024
                },
                "required": false
            },
            "PSU-Accept-Charset": {
                "name": "PSU-Accept-Charset",
                "in": "header",
                "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
                "schema": {
                    "type": "string",
                    "maxLength": 1024
                },
                "required": false
            },
            "PSU-Accept-Encoding": {
                "name": "PSU-Accept-Encoding",
                "in": "header",
                "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
                "schema": {
                    "type": "string",
                    "maxLength": 1024
                },
                "required": false
            },
            "PSU-Accept-Language": {
                "name": "PSU-Accept-Language",
                "in": "header",
                "description": "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n",
                "schema": {
                    "type": "string",
                    "maxLength": 1024
                },
                "required": false
            },
            "PSU-User-Agent": {
                "name": "PSU-User-Agent",
                "in": "header",
                "description": "The forwarded Agent header field of the HTTP request between PSU and TPP, if available.\n",
                "schema": {
                    "type": "string",
                    "maxLength": 1024
                },
                "required": false
            },
            "PSU-Http-Method": {
                "name": "PSU-Http-Method",
                "in": "header",
                "description": "HTTP method used at the PSU ? TPP interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n",
                "schema": {
                    "type": "string",
                    "enum": [
                        "GET",
                        "POST",
                        "PUT",
                        "PATCH",
                        "DELETE"
                    ]
                },
                "required": false
            },
            "PSU-Device-ID": {
                "name": "PSU-Device-ID",
                "in": "header",
                "description": "UUID (Universally Unique Identifier) for a device, which is used by the PSU, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID need to be unaltered until removal from device.\n",
                "schema": {
                    "type": "string",
                    "format": "uuid"
                },
                "required": false,
                "example": "99435c7e-ad88-49ec-a2ad-99ddcb1f5555"
            },
            "PSU-Device-ID_conditional": {
                "name": "PSU-Device-ID",
                "in": "header",
                "description": "UUID (Universally Unique Identifier) for a device, which is used by the PSU, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID need to be unaltered until removal from device.\n",
                "schema": {
                    "type": "string",
                    "format": "uuid"
                },
                "required": false,
                "example": "99435c7e-ad88-49ec-a2ad-99ddcb1f5555"
            },
            "PSU-Geo-Location": {
                "name": "PSU-Geo-Location",
                "in": "header",
                "description": "The forwarded Geo Location of the corresponding http request between PSU and TPP if available.\n",
                "schema": {
                    "type": "string",
                    "pattern": "GEO:-?[0-9]{1,2}\\.[0-9]{6};-?[0-9]{1,3}\\.[0-9]{6}"
                },
                "required": false,
                "example": "GEO:52.506931;13.144558"
            },
            "PSU-Geo-Location_conditional": {
                "name": "PSU-Geo-Location",
                "in": "header",
                "description": "The forwarded Geo Location of the corresponding http request between PSU and TPP if available.\n",
                "schema": {
                    "type": "string",
                    "pattern": "GEO:-?[0-9]{1,2}\\.[0-9]{6};-?[0-9]{1,3}\\.[0-9]{6}"
                },
                "required": false,
                "example": "GEO:52.506931;13.144558"
            }
        },
        "requestBodies": {
            "paymentInitiation": {
                "description": "JSON request body for a payment inition request message \n\nThere are the following payment-products supported:\n  * \"masav\" with JSON-Body\n  * \"zahav\" with JSON-Body\n  * \"FP\" with JSON-Body\n  \nThere are the following payment-services supported:\n  * \"payments\" \n  * \"bulk-payments\" - optional\n  * \"periodic-payments\" - optional\n\n\nAll optional, conditional and predefined but not yet used fields are defined.\n",
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/paymentInitiation_json"
                                },
                                {
                                    "$ref": "#/components/schemas/periodicPaymentInitiation_json"
                                },
                                {
                                    "$ref": "#/components/schemas/bulkPaymentInitiation_json"
                                }
                            ]
                        },
                        "examples": {
                            "Example 1: 'payments' ": {
                                "$ref": "#/components/examples/paymentInitiationSctBody_payments_json"
                            },
                            "Example 2: 'periodic-payments' - 'masav'": {
                                "$ref": "#/components/examples/paymentInitiationSctBody_periodic-payments_json"
                            },
                            "Example 3: 'bulk-payments' - 'masav'": {
                                "$ref": "#/components/examples/paymentInitiationSctBody_bulk-payments_json"
                            }
                        }
                    }
                }
            },
            "consents": {
                "description": "Requestbody for a consents request\n",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/consents"
                        },
                        "examples": {
                            "Consent Request on Dedicated Accounts": {
                                "$ref": "#/components/examples/consentsExample_DedicatedAccounts"
                            },
                            "Consent on Account List of Available Accounts": {
                                "$ref": "#/components/examples/consentsExample_AccountList"
                            },
                            "Consent Request on Account List or without Indication of dedicated Accounts": {
                                "$ref": "#/components/examples/consentsExample_without_Accounts"
                            }
                        }
                    }
                }
            }
        },
        "headers": {
            "X-Request-ID": {
                "description": "ID of the request, unique to the call, as determined by the initiating party.",
                "required": true,
                "example": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                "schema": {
                    "type": "string",
                    "format": "uuid"
                }
            },
            "ASPSP-SCA-Approach": {
                "description": "This data element must be contained, if the SCA Approach is already fixed.\nPossible values are\n  * DECOUPLED\n  * REDIRECT\nThe OAuth SCA approach will be subsumed by REDIRECT.\n",
                "schema": {
                    "type": "string",
                    "enum": [
                        "DECOUPLED",
                        "REDIRECT"
                    ],
                    "example": "REDIRECT"
                },
                "required": false
            },
            "Location": {
                "description": "Location of the created resource.\n",
                "schema": {
                    "type": "string",
                    "format": "url"
                },
                "required": false
            },
            "ASPSP-Notification-Support": {
                "description": "true if the ASPSP supports resource status notification services.\n\nfalse if the ASPSP supports resource status notification in general, but not for the current request.\n\nNot used, if resource status notification services are generally not supported by the ASPSP.\n\nShall be supported if the ASPSP supports resource status notification services.\n",
                "schema": {
                    "type": "boolean"
                },
                "required": false
            },
            "ASPSP-Notification-Content": {
                "description": "The string has the form\nstatus=X1, \u05d2\u20ac\u00a6, Xn\nwhere Xi is one of the constants SCA, PROCESS, LAST and where constants are not repeated.\nThe usage of the constants supports the following semantics\nSCA - Notification on every change of the scaStatus attribute for all related authorisation processes is provided by the ASPSP for the related resource.\nPROCESS - Notification on all changes of consentStatus or transactionStatus attributes is provided by the ASPSP for the related resource\nLAST - Notification on the last consentStatus or transactionStatus as available in the XS2A interface is provided by the ASPSP for the related resource.\nThis field must be provided if the ASPSP-Notification-Support=true. The ASPSP might consider the notification content as preferred by the TPP, but can also respond independently of the preferred request    \n",
                "schema": {
                    "type": "string"
                },
                "required": false
            }
        },
        "responses": {
            "OK_200_PaymentInitiationInformation": {
                "description": "OK",
                "headers": {
                    "X-Request-ID": {
                        "$ref": "#/components/headers/X-Request-ID"
                    }
                },
                "content": {
                    "application/json": {
                        "schema": {
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/paymentInitiationWithStatusResponse"
                                }
                            ]
                        }
                    }
                }
            },
            "OK_200_PaymentInitiationStatus": {
                "description": "OK",
                "headers": {
                    "X-Request-ID": {
                        "$ref": "#/components/headers/X-Request-ID"
                    }
                },
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/paymentInitiationStatusResponse-200_json"
                        },
                        "examples": {
                            "simple": {
                                "$ref": "#/components/examples/paymentInitiationStatusResponse_json_Simple"
                            },
                            "extended": {
                                "$ref": "#/components/examples/paymentInitiationStatusResponse_json_Extended"
                            }
                        }
                    }
                }
            },
            "OK_200_Authorisations": {
                "description": "OK",
                "headers": {
                    "X-Request-ID": {
                        "$ref": "#/components/headers/X-Request-ID"
                    }
                },
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/authorisations"
                        },
                        "examples": {
                            "Example": {
                                "$ref": "#/components/examples/authorisationListExample"
                            }
                        }
                    }
                }
            },
            "OK_200_ScaStatus": {
                "description": "OK",
                "headers": {
                    "X-Request-ID": {
                        "$ref": "#/components/headers/X-Request-ID"
                    }
                },
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/scaStatusResponse"
                        }
                    }
                }
            },
            "OK_200_AccountList": {
                "description": "OK",
                "headers": {
                    "X-Request-ID": {
                        "$ref": "#/components/headers/X-Request-ID"
                    }
                },
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/accountList"
                        },
                        "examples": {
                            "Example 1": {
                                "$ref": "#/components/examples/accountListExample1"
                            },
                            "Example 2": {
                                "$ref": "#/components/examples/accountListExample2"
                            },
                            "Example 3": {
                                "$ref": "#/components/examples/accountListExample3"
                            }
                        }
                    }
                }
            },
            "OK_200_CardAccountList": {
                "description": "OK",
                "headers": {
                    "X-Request-ID": {
                        "$ref": "#/components/headers/X-Request-ID"
                    }
                },
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/cardAccountList"
                        },
                        "examples": {
                            "Example 1": {
                                "$ref": "#/components/examples/cardAccountListExample1"
                            }
                        }
                    }
                }
            },
            "OK_200_AccountDetails": {
                "description": "OK",
                "headers": {
                    "X-Request-ID": {
                        "$ref": "#/components/headers/X-Request-ID"
                    }
                },
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "required": [
                                "account"
                            ],
                            "properties": {
                                "account": {
                                    "$ref": "#/components/schemas/accountDetails"
                                }
                            }
                        },
                        "examples": {
                            "Regular Account": {
                                "$ref": "#/components/examples/accountDetailsRegularAccount"
                            },
                            "Multicurrency Account": {
                                "$ref": "#/components/examples/accountDetailsMulticurrencyAccount"
                            }
                        }
                    }
                }
            },
            "OK_200_CardAccountDetails": {
                "description": "OK",
                "headers": {
                    "X-Request-ID": {
                        "$ref": "#/components/headers/X-Request-ID"
                    }
                },
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/cardAccountDetails"
                        },
                        "examples": {
                            "Card Account": {
                                "$ref": "#/components/examples/cardAccountDetailsExample"
                            }
                        }
                    }
                }
            },
            "OK_200_TransactionDetails": {
                "description": "OK",
                "headers": {
                    "X-Request-ID": {
                        "$ref": "#/components/headers/X-Request-ID"
                    }
                },
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/transactionDetailsBody"
                        },
                        "examples": {
                            "Example": {
                                "$ref": "#/components/examples/transactionDetailsExample"
                            }
                        }
                    }
                }
            },
            "OK_200_Balances": {
                "description": "OK",
                "headers": {
                    "X-Request-ID": {
                        "$ref": "#/components/headers/X-Request-ID"
                    }
                },
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/readAccountBalanceResponse-200"
                        },
                        "examples": {
                            "Example 1: Regular Account": {
                                "$ref": "#/components/examples/balancesExample1_RegularAccount"
                            },
                            "Example 2: Multicurrency Account": {
                                "$ref": "#/components/examples/balancesExample2_MulticurrencyAcount"
                            }
                        }
                    }
                }
            },
            "OK_200_CardAccountBalances": {
                "description": "OK",
                "headers": {
                    "X-Request-ID": {
                        "$ref": "#/components/headers/X-Request-ID"
                    }
                },
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/readCardAccountBalanceResponse-200"
                        },
                        "examples": {
                            "Example:": {
                                "$ref": "#/components/examples/balancesExample_CardAccount"
                            }
                        }
                    }
                }
            },
            "OK_200_AccountsTransactions": {
                "description": "OK",
                "headers": {
                    "X-Request-ID": {
                        "$ref": "#/components/headers/X-Request-ID"
                    }
                },
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/transactionsResponse-200_json"
                        },
                        "examples": {
                            "Example 1": {
                                "$ref": "#/components/examples/transactionsExample1_RegularAccount_json"
                            },
                            "Example 2": {
                                "$ref": "#/components/examples/transactionsExample2_paging_json"
                            },
                            "Example 3": {
                                "$ref": "#/components/examples/transactionsExample3_MulticurrencyAccount_json"
                            },
                            "Example 4": {
                                "$ref": "#/components/examples/transactionsExample4_checkDepositTransaction_json"
                            }
                        }
                    }
                }
            },
            "OK_200_CardAccountsTransactions": {
                "description": "OK",
                "headers": {
                    "X-Request-ID": {
                        "$ref": "#/components/headers/X-Request-ID"
                    }
                },
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/cardAccountsTransactionsResponse200"
                        },
                        "examples": {
                            "EExample 1": {
                                "$ref": "#/components/examples/cardAccountsTransactionsExample1_RegularAccount_json"
                            }
                        }
                    }
                }
            },
            "OK_200_ConsentInformation": {
                "description": "OK",
                "headers": {
                    "X-Request-ID": {
                        "$ref": "#/components/headers/X-Request-ID"
                    }
                },
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/consentInformationResponse-200_json"
                        },
                        "examples": {
                            "Example": {
                                "$ref": "#/components/examples/consentsInformationResponseExample"
                            }
                        }
                    }
                }
            },
            "OK_200_ConsentStatus": {
                "description": "OK",
                "headers": {
                    "X-Request-ID": {
                        "$ref": "#/components/headers/X-Request-ID"
                    }
                },
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/consentStatusResponse-200"
                        },
                        "examples": {
                            "Example": {
                                "$ref": "#/components/examples/consentStatusResponseExample1"
                            }
                        }
                    }
                }
            },
            "CREATED_201_PaymentInitiation": {
                "description": "CREATED",
                "headers": {
                    "X-Request-ID": {
                        "$ref": "#/components/headers/X-Request-ID"
                    },
                    "Location": {
                        "$ref": "#/components/headers/Location"
                    },
                    "ASPSP-SCA-Approach": {
                        "$ref": "#/components/headers/ASPSP-SCA-Approach"
                    },
                    "ASPSP-Notification-Support": {
                        "$ref": "#/components/headers/ASPSP-Notification-Support"
                    },
                    "ASPSP-Notification-Content": {
                        "$ref": "#/components/headers/ASPSP-Notification-Content"
                    }
                },
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/paymentInitationRequestResponse-201"
                        },
                        "examples": {
                            "Response in case of an OAuth2 SCA approach approach with implicitly creating an authorisation sub-resource": {
                                "$ref": "#/components/examples/paymentInitiationExample_json_OAuth2"
                            },
                            "Response in case of the decoupled approach with explicit start of authorisation needed (will be done with the update PSU identification function)": {
                                "$ref": "#/components/examples/paymentInitiationExample_json_Decoupled"
                            }
                        }
                    }
                }
            },
            "CREATED_201_StartScaProcess": {
                "description": "Created",
                "headers": {
                    "X-Request-ID": {
                        "$ref": "#/components/headers/X-Request-ID"
                    },
                    "ASPSP-SCA-Approach": {
                        "$ref": "#/components/headers/ASPSP-SCA-Approach"
                    }
                },
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/startScaprocessResponse"
                        },
                        "examples": {
                            "Example 1: payments - Decoupled Approach": {
                                "$ref": "#/components/examples/startScaProcessResponseExample1"
                            }
                        }
                    }
                }
            },
            "CREATED_201_Consents": {
                "description": "Created",
                "headers": {
                    "Location": {
                        "$ref": "#/components/headers/Location"
                    },
                    "X-Request-ID": {
                        "$ref": "#/components/headers/X-Request-ID"
                    },
                    "ASPSP-SCA-Approach": {
                        "$ref": "#/components/headers/ASPSP-SCA-Approach"
                    },
                    "ASPSP-Notification-Support": {
                        "$ref": "#/components/headers/ASPSP-Notification-Support"
                    },
                    "ASPSP-Notification-Content": {
                        "$ref": "#/components/headers/ASPSP-Notification-Content"
                    }
                },
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/consentsResponse-201"
                        },
                        "examples": {
                            "Response in case of the OAuth2 approach with an implicit generated authorisation resource": {
                                "$ref": "#/components/examples/consentResponseExample2_OAuth2"
                            },
                            "Response in case of the decoupled approach": {
                                "$ref": "#/components/examples/consentResponseExample3_Decoupled"
                            }
                        }
                    }
                }
            },
            "RECEIVED_202_PaymentInitiationCancel": {
                "description": "Received",
                "headers": {
                    "X-Request-ID": {
                        "$ref": "#/components/headers/X-Request-ID"
                    }
                },
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/paymentInitiationCancelResponse-202"
                        },
                        "examples": {
                            "Example": {
                                "$ref": "#/components/examples/paymentInitiationCancelResponse-202"
                            }
                        }
                    }
                }
            },
            "NO_CONTENT_204_PaymentInitiationCancel": {
                "description": "No Content",
                "headers": {
                    "X-Request-ID": {
                        "$ref": "#/components/headers/X-Request-ID"
                    }
                }
            },
            "NO_CONTENT_204_Consents": {
                "description": "No Content",
                "headers": {
                    "X-Request-ID": {
                        "$ref": "#/components/headers/X-Request-ID"
                    }
                }
            },
            "NO_CONTENT_204_SigningBasket": {
                "description": "No Content",
                "headers": {
                    "X-Request-ID": {
                        "$ref": "#/components/headers/X-Request-ID"
                    }
                }
            },
            "BAD_REQUEST_400_AIS": {
                "description": "Bad Request",
                "headers": {
                    "Location": {
                        "$ref": "#/components/headers/Location"
                    },
                    "X-Request-ID": {
                        "$ref": "#/components/headers/X-Request-ID"
                    }
                },
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error400_NG_AIS"
                        }
                    }
                }
            },
            "BAD_REQUEST_400_PIS": {
                "description": "Bad Request",
                "headers": {
                    "Location": {
                        "$ref": "#/components/headers/Location"
                    },
                    "X-Request-ID": {
                        "$ref": "#/components/headers/X-Request-ID"
                    }
                },
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error400_NG_PIS"
                        }
                    }
                }
            },
            "BAD_REQUEST_400_PIIS": {
                "description": "Bad Request",
                "headers": {
                    "Location": {
                        "$ref": "#/components/headers/Location"
                    },
                    "X-Request-ID": {
                        "$ref": "#/components/headers/X-Request-ID"
                    }
                },
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error400_NG_AIS"
                        }
                    }
                }
            },
            "UNAUTHORIZED_401_PIS": {
                "description": "Unauthorized",
                "headers": {
                    "Location": {
                        "$ref": "#/components/headers/Location"
                    },
                    "X-Request-ID": {
                        "$ref": "#/components/headers/X-Request-ID"
                    }
                },
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error401_NG_PIS"
                        }
                    }
                }
            },
            "UNAUTHORIZED_401_AIS": {
                "description": "Unauthorized",
                "headers": {
                    "Location": {
                        "$ref": "#/components/headers/Location"
                    },
                    "X-Request-ID": {
                        "$ref": "#/components/headers/X-Request-ID"
                    }
                },
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error401_NG_AIS"
                        }
                    }
                }
            },
            "UNAUTHORIZED_401_PIIS": {
                "description": "Unauthorized",
                "headers": {
                    "Location": {
                        "$ref": "#/components/headers/Location"
                    },
                    "X-Request-ID": {
                        "$ref": "#/components/headers/X-Request-ID"
                    }
                },
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error401_NG_PIIS"
                        }
                    }
                }
            },
            "UNAUTHORIZED_401_SBS": {
                "description": "Unauthorized",
                "headers": {
                    "Location": {
                        "$ref": "#/components/headers/Location"
                    },
                    "X-Request-ID": {
                        "$ref": "#/components/headers/X-Request-ID"
                    }
                },
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error401_NG_SBS"
                        }
                    }
                }
            },
            "FORBIDDEN_403_PIS": {
                "description": "Forbidden",
                "headers": {
                    "Location": {
                        "$ref": "#/components/headers/Location"
                    },
                    "X-Request-ID": {
                        "$ref": "#/components/headers/X-Request-ID"
                    }
                },
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error403_NG_PIS"
                        }
                    }
                }
            },
            "FORBIDDEN_403_AIS": {
                "description": "Forbidden",
                "headers": {
                    "Location": {
                        "$ref": "#/components/headers/Location"
                    },
                    "X-Request-ID": {
                        "$ref": "#/components/headers/X-Request-ID"
                    }
                },
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error403_NG_AIS"
                        }
                    }
                }
            },
            "FORBIDDEN_403_PIIS": {
                "description": "Forbidden",
                "headers": {
                    "Location": {
                        "$ref": "#/components/headers/Location"
                    },
                    "X-Request-ID": {
                        "$ref": "#/components/headers/X-Request-ID"
                    }
                },
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error403_NG_PIIS"
                        }
                    }
                }
            },
            "FORBIDDEN_403_SBS": {
                "description": "Forbidden",
                "headers": {
                    "Location": {
                        "$ref": "#/components/headers/Location"
                    },
                    "X-Request-ID": {
                        "$ref": "#/components/headers/X-Request-ID"
                    }
                },
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error403_NG_SBS"
                        }
                    }
                }
            },
            "NOT_FOUND_404_PIS": {
                "description": "Not found",
                "headers": {
                    "Location": {
                        "$ref": "#/components/headers/Location"
                    },
                    "X-Request-ID": {
                        "$ref": "#/components/headers/X-Request-ID"
                    }
                },
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error404_NG_PIS"
                        }
                    }
                }
            },
            "NOT_FOUND_404_AIS": {
                "description": "Not found",
                "headers": {
                    "Location": {
                        "$ref": "#/components/headers/Location"
                    },
                    "X-Request-ID": {
                        "$ref": "#/components/headers/X-Request-ID"
                    }
                },
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error404_NG_AIS"
                        }
                    }
                }
            },
            "NOT_FOUND_404_PIIS": {
                "description": "Not found",
                "headers": {
                    "Location": {
                        "$ref": "#/components/headers/Location"
                    },
                    "X-Request-ID": {
                        "$ref": "#/components/headers/X-Request-ID"
                    }
                },
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error404_NG_PIIS"
                        }
                    }
                }
            },
            "NOT_FOUND_404_SBS": {
                "description": "Not found",
                "headers": {
                    "Location": {
                        "$ref": "#/components/headers/Location"
                    },
                    "X-Request-ID": {
                        "$ref": "#/components/headers/X-Request-ID"
                    }
                },
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error404_NG_SBS"
                        }
                    }
                }
            },
            "METHOD_NOT_ALLOWED_405_PIS": {
                "description": "Method Not Allowed",
                "headers": {
                    "Location": {
                        "$ref": "#/components/headers/Location"
                    },
                    "X-Request-ID": {
                        "$ref": "#/components/headers/X-Request-ID"
                    }
                },
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error405_NG_PIS"
                        }
                    }
                }
            },
            "METHOD_NOT_ALLOWED_405_PIS_CANC": {
                "description": "Method Not Allowed",
                "headers": {
                    "Location": {
                        "$ref": "#/components/headers/Location"
                    },
                    "X-Request-ID": {
                        "$ref": "#/components/headers/X-Request-ID"
                    }
                },
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error405_NG_PIS_CANC"
                        }
                    }
                }
            },
            "METHOD_NOT_ALLOWED_405_AIS": {
                "description": "Method Not Allowed",
                "headers": {
                    "Location": {
                        "$ref": "#/components/headers/Location"
                    },
                    "X-Request-ID": {
                        "$ref": "#/components/headers/X-Request-ID"
                    }
                },
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error405_NG_AIS"
                        }
                    }
                }
            },
            "METHOD_NOT_ALLOWED_405_PIIS": {
                "description": "Method Not Allowed",
                "headers": {
                    "Location": {
                        "$ref": "#/components/headers/Location"
                    },
                    "X-Request-ID": {
                        "$ref": "#/components/headers/X-Request-ID"
                    }
                },
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error405_NG_PIIS"
                        }
                    }
                }
            },
            "METHOD_NOT_ALLOWED_405_SBS": {
                "description": "Method Not Allowed",
                "headers": {
                    "Location": {
                        "$ref": "#/components/headers/Location"
                    },
                    "X-Request-ID": {
                        "$ref": "#/components/headers/X-Request-ID"
                    }
                },
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error405_NG_SBS"
                        }
                    }
                }
            },
            "NOT_ACCEPTABLE_406_PIS": {
                "description": "Not Acceptable",
                "headers": {
                    "Location": {
                        "$ref": "#/components/headers/Location"
                    },
                    "X-Request-ID": {
                        "$ref": "#/components/headers/X-Request-ID"
                    }
                }
            },
            "NOT_ACCEPTABLE_406_AIS": {
                "description": "Not Acceptable",
                "headers": {
                    "Location": {
                        "$ref": "#/components/headers/Location"
                    },
                    "X-Request-ID": {
                        "$ref": "#/components/headers/X-Request-ID"
                    }
                },
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error406_NG_AIS"
                        }
                    }
                }
            },
            "NOT_ACCEPTABLE_406_PIIS": {
                "description": "Not Acceptable",
                "headers": {
                    "Location": {
                        "$ref": "#/components/headers/Location"
                    },
                    "X-Request-ID": {
                        "$ref": "#/components/headers/X-Request-ID"
                    }
                }
            },
            "NOT_ACCEPTABLE_406_SBS": {
                "description": "Not Acceptable",
                "headers": {
                    "Location": {
                        "$ref": "#/components/headers/Location"
                    },
                    "X-Request-ID": {
                        "$ref": "#/components/headers/X-Request-ID"
                    }
                }
            },
            "REQUEST_TIMEOUT_408_PIS": {
                "description": "Request Timeout",
                "headers": {
                    "Location": {
                        "$ref": "#/components/headers/Location"
                    },
                    "X-Request-ID": {
                        "$ref": "#/components/headers/X-Request-ID"
                    }
                }
            },
            "REQUEST_TIMEOUT_408_AIS": {
                "description": "Request Timeout",
                "headers": {
                    "Location": {
                        "$ref": "#/components/headers/Location"
                    },
                    "X-Request-ID": {
                        "$ref": "#/components/headers/X-Request-ID"
                    }
                }
            },
            "REQUEST_TIMEOUT_408_PIIS": {
                "description": "Request Timeout",
                "headers": {
                    "Location": {
                        "$ref": "#/components/headers/Location"
                    },
                    "X-Request-ID": {
                        "$ref": "#/components/headers/X-Request-ID"
                    }
                }
            },
            "REQUEST_TIMEOUT_408_SBS": {
                "description": "Request Timeout",
                "headers": {
                    "Location": {
                        "$ref": "#/components/headers/Location"
                    },
                    "X-Request-ID": {
                        "$ref": "#/components/headers/X-Request-ID"
                    }
                }
            },
            "CONFLICT_409_PIS": {
                "description": "Conflict",
                "headers": {
                    "Location": {
                        "$ref": "#/components/headers/Location"
                    },
                    "X-Request-ID": {
                        "$ref": "#/components/headers/X-Request-ID"
                    }
                },
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error409_NG_PIS"
                        }
                    }
                }
            },
            "CONFLICT_409_AIS": {
                "description": "Conflict",
                "headers": {
                    "Location": {
                        "$ref": "#/components/headers/Location"
                    },
                    "X-Request-ID": {
                        "$ref": "#/components/headers/X-Request-ID"
                    }
                },
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error409_NG_AIS"
                        }
                    }
                }
            },
            "CONFLICT_409_PIIS": {
                "description": "Conflict",
                "headers": {
                    "Location": {
                        "$ref": "#/components/headers/Location"
                    },
                    "X-Request-ID": {
                        "$ref": "#/components/headers/X-Request-ID"
                    }
                },
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error409_NG_PIIS"
                        }
                    }
                }
            },
            "CONFLICT_409_SBS": {
                "description": "Conflict",
                "headers": {
                    "Location": {
                        "$ref": "#/components/headers/Location"
                    },
                    "X-Request-ID": {
                        "$ref": "#/components/headers/X-Request-ID"
                    }
                },
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error409_NG_SBS"
                        }
                    }
                }
            },
            "UNSUPPORTED_MEDIA_TYPE_415_AIS": {
                "description": "Unsupported Media Type",
                "headers": {
                    "Location": {
                        "$ref": "#/components/headers/Location"
                    },
                    "X-Request-ID": {
                        "$ref": "#/components/headers/X-Request-ID"
                    }
                }
            },
            "UNSUPPORTED_MEDIA_TYPE_415_PIS": {
                "description": "Unsupported Media Type",
                "headers": {
                    "Location": {
                        "$ref": "#/components/headers/Location"
                    },
                    "X-Request-ID": {
                        "$ref": "#/components/headers/X-Request-ID"
                    }
                }
            },
            "UNSUPPORTED_MEDIA_TYPE_415_PIIS": {
                "description": "Unsupported Media Type",
                "headers": {
                    "Location": {
                        "$ref": "#/components/headers/Location"
                    },
                    "X-Request-ID": {
                        "$ref": "#/components/headers/X-Request-ID"
                    }
                }
            },
            "UNSUPPORTED_MEDIA_TYPE_415_SBS": {
                "description": "Unsupported Media Type",
                "headers": {
                    "Location": {
                        "$ref": "#/components/headers/Location"
                    },
                    "X-Request-ID": {
                        "$ref": "#/components/headers/X-Request-ID"
                    }
                }
            },
            "TOO_MANY_REQUESTS_429_PIS": {
                "description": "Too Many Requests",
                "headers": {
                    "Location": {
                        "$ref": "#/components/headers/Location"
                    },
                    "X-Request-ID": {
                        "$ref": "#/components/headers/X-Request-ID"
                    }
                }
            },
            "TOO_MANY_REQUESTS_429_AIS": {
                "description": "Too Many Requests",
                "headers": {
                    "Location": {
                        "$ref": "#/components/headers/Location"
                    },
                    "X-Request-ID": {
                        "$ref": "#/components/headers/X-Request-ID"
                    }
                },
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error429_NG_AIS"
                        }
                    }
                }
            },
            "TOO_MANY_REQUESTS_429_PIIS": {
                "description": "Too Many Requests",
                "headers": {
                    "Location": {
                        "$ref": "#/components/headers/Location"
                    },
                    "X-Request-ID": {
                        "$ref": "#/components/headers/X-Request-ID"
                    }
                }
            },
            "TOO_MANY_REQUESTS_429_SBS": {
                "description": "Too Many Requests",
                "headers": {
                    "Location": {
                        "$ref": "#/components/headers/Location"
                    },
                    "X-Request-ID": {
                        "$ref": "#/components/headers/X-Request-ID"
                    }
                }
            },
            "INTERNAL_SERVER_ERROR_500_PIS": {
                "description": "Internal Server Error",
                "headers": {
                    "Location": {
                        "$ref": "#/components/headers/Location"
                    },
                    "X-Request-ID": {
                        "$ref": "#/components/headers/X-Request-ID"
                    }
                }
            },
            "INTERNAL_SERVER_ERROR_500_AIS": {
                "description": "Internal Server Error",
                "headers": {
                    "Location": {
                        "$ref": "#/components/headers/Location"
                    },
                    "X-Request-ID": {
                        "$ref": "#/components/headers/X-Request-ID"
                    }
                }
            },
            "INTERNAL_SERVER_ERROR_500_PIIS": {
                "description": "Internal Server Error",
                "headers": {
                    "Location": {
                        "$ref": "#/components/headers/Location"
                    },
                    "X-Request-ID": {
                        "$ref": "#/components/headers/X-Request-ID"
                    }
                }
            },
            "INTERNAL_SERVER_ERROR_500_SBS": {
                "description": "Internal Server Error",
                "headers": {
                    "Location": {
                        "$ref": "#/components/headers/Location"
                    },
                    "X-Request-ID": {
                        "$ref": "#/components/headers/X-Request-ID"
                    }
                }
            },
            "SERVICE_UNAVAILABLE_503_PIS": {
                "description": "Service Unavailable",
                "headers": {
                    "Location": {
                        "$ref": "#/components/headers/Location"
                    },
                    "X-Request-ID": {
                        "$ref": "#/components/headers/X-Request-ID"
                    }
                }
            },
            "SERVICE_UNAVAILABLE_503_AIS": {
                "description": "Service Unavailable",
                "headers": {
                    "Location": {
                        "$ref": "#/components/headers/Location"
                    },
                    "X-Request-ID": {
                        "$ref": "#/components/headers/X-Request-ID"
                    }
                }
            },
            "SERVICE_UNAVAILABLE_503_PIIS": {
                "description": "Service Unavailable",
                "headers": {
                    "Location": {
                        "$ref": "#/components/headers/Location"
                    },
                    "X-Request-ID": {
                        "$ref": "#/components/headers/X-Request-ID"
                    }
                }
            },
            "SERVICE_UNAVAILABLE_503_SBS": {
                "description": "Service Unavailable",
                "headers": {
                    "Location": {
                        "$ref": "#/components/headers/Location"
                    },
                    "X-Request-ID": {
                        "$ref": "#/components/headers/X-Request-ID"
                    }
                }
            }
        },
        "examples": {
            "ibanExampleDe_01": {
                "value": "DE02100100109307118603"
            },
            "ibanExampleDe_02": {
                "value": "DE23100120020123456789"
            },
            "ibanExampleDe_03": {
                "value": "DE40100100103307118608"
            },
            "ibanExampleDe_04": {
                "value": "DE67100100101306118605"
            },
            "ibanExampleDe_05": {
                "value": "DE87200500001234567890"
            },
            "ibanExampleFr_01": {
                "value": "FR7612345987650123456789014"
            },
            "ibanExampleNl_01": {
                "value": "NL76RABO0359400371"
            },
            "ibanExampleSe_01": {
                "value": "SE9412309876543211234567"
            },
            "maskedPanExample": {
                "value": "123456xxxxxx1234"
            },
            "uuidExample": {
                "value": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721"
            },
            "paymentInitiationSctBody_payments_json": {
                "value": {
                    "instructedAmount": {
                        "currency": "EUR",
                        "amount": "123.50"
                    },
                    "debtorAccount": {
                        "iban": "DE40100100103307118608"
                    },
                    "creditorName": "Merchant123",
                    "creditorAccount": {
                        "iban": "DE02100100109307118603"
                    },
                    "remittanceInformationUnstructured": "Ref Number Merchant"
                }
            },
            "paymentInitiationSctBody_periodic-payments_json": {
                "value": {
                    "instructedAmount": {
                        "currency": "EUR",
                        "amount": "123"
                    },
                    "debtorAccount": {
                        "iban": "DE40100100103307118608"
                    },
                    "creditorName": "Merchant123",
                    "creditorAccount": {
                        "iban": "DE23100120020123456789"
                    },
                    "remittanceInformationUnstructured": "Ref Number Abonnement",
                    "startDate": "2018-03-01",
                    "executionRule": "preceding",
                    "frequency": "monthly",
                    "dayOfExecution": "01"
                }
            },
            "paymentInitiationSctBody_bulk-payments_json": {
                "value": {
                    "batchBookingPreferred": "true",
                    "debtorAccount": {
                        "iban": "DE40100100103307118608"
                    },
                    "paymentInformationId": "my-bulk-identification-1234",
                    "requestedExecutionDate": "2018-08-01",
                    "payments": [
                        {
                            "instructedAmount\"": {
                                "currency": "EUR",
                                "amount": "123.50"
                            },
                            "creditorName": "Merchant123",
                            "creditorAccount": {
                                "iban": "DE02100100109307118603"
                            },
                            "remittanceInformationUnstructured": "Ref Number Merchant 1"
                        },
                        {
                            "instructedAmount\"": {
                                "currency": "EUR",
                                "amount": "34.10"
                            },
                            "creditorName": "Merchant456",
                            "creditorAccount": {
                                "iban": "FR7612345987650123456789014"
                            },
                            "remittanceInformationUnstructured": "Ref Number Merchant 2"
                        }
                    ]
                }
            },
            "accountDetailsRegularAccount": {
                "description": "Account Details for a regular Account",
                "value": {
                    "account": {
                        "resourceId": "3dc3d5b3-7023-4848-9853-f5400a64e80f",
                        "iban": "FR7612345987650123456789014",
                        "currency": "EUR",
                        "product": "Girokonto",
                        "cashAccountType": "CACC",
                        "name": "Main Account",
                        "_links": {
                            "balances": {
                                "href": "/v1.0.8/accounts/3dc3d5b3-7023-4848-9853-f5400a64e80f/balances"
                            },
                            "transactions": {
                                "href": "/v1.0.8/accounts/3dc3d5b3-7023-4848-9853-f5400a64e80f/transactions"
                            }
                        }
                    }
                }
            },
            "accountDetailsMulticurrencyAccount": {
                "description": "Account Details for a multicurrency Account",
                "value": {
                    "account": {
                        "resourceId": "3dc3d5b3-7023-4848-9853-f5400a64e80f",
                        "iban": "FR7612345987650123456789014",
                        "currency": "XXX",
                        "product": "Multicurrency Account",
                        "cashAccountType": "CACC",
                        "name": "Aggregation Account",
                        "_links": {
                            "balances": {
                                "href": "/v1.0.8/accounts/3dc3d5b3-7023-4848-9853-f5400a64e80f/balances"
                            },
                            "transactions": {
                                "href": "/v1.0.8/accounts/3dc3d5b3-7023-4848-9853-f5400a64e80f/transactions"
                            }
                        }
                    }
                }
            },
            "accountListExample1": {
                "summary": "Account list Example 1",
                "description": "Response in case of an example, where the consent has been given on two different IBANs",
                "value": {
                    "accounts": [
                        {
                            "resourceId": "3dc3d5b3-7023-4848-9853-f5400a64e80f",
                            "iban": "DE2310010010123456789",
                            "currency": "EUR",
                            "product": "Girokonto",
                            "cashAccountType": "CACC",
                            "name": "Main Account",
                            "_links": {
                                "balances": {
                                    "href": "/v1.0.8/accounts/3dc3d5b3-7023-4848-9853-f5400a64e80f/balances"
                                },
                                "transactions": {
                                    "href": "/v1.0.8/accounts/3dc3d5b3-7023-4848-9853-f5400a64e80f/transactions"
                                }
                            }
                        },
                        {
                            "resourceId": "3dc3d5b3-7023-4848-9853-f5400a64e81g",
                            "iban": "DE2310010010123456788",
                            "currency": "USD",
                            "product": "Fremdw\u05b3\u20aahrungskonto",
                            "cashAccountType": "CACC",
                            "name": "US Dollar Account",
                            "_links": {
                                "balances": {
                                    "href": "/v1.0.8/accounts/3dc3d5b3-7023-4848-9853-f5400a64e81g/balances"
                                }
                            }
                        }
                    ]
                }
            },
            "accountListExample2": {
                "summary": "Account list Example 2",
                "description": "Response in case of an example where consent on transactions and balances has been given to a multicurrency account which has two sub-accounts with currencies EUR and USD, and where the ASPSP is giving the data access only on sub-account level\n",
                "value": {
                    "accounts": [
                        {
                            "resourceId": "3dc3d5b3-7023-4848-9853-f5400a64e80f",
                            "iban": "DE2310010010123456788",
                            "currency": "EUR",
                            "product": "Girokonto",
                            "cashAccountType": "CACC",
                            "name": "Main Account",
                            "_links": {
                                "balances": {
                                    "href": "/v1.0.8/accounts/3dc3d5b3-7023-4848-9853-f5400a64e80f/balances"
                                },
                                "transactions": {
                                    "href": "/v1.0.8/accounts/3dc3d5b3-7023-4848-9853-f5400a64e80f/transactions"
                                }
                            }
                        },
                        {
                            "resourceId": "3dc3d5b3-7023-4848-9853-f5400a64e81g",
                            "iban": "DE2310010010123456788",
                            "currency": "USD",
                            "product": "Fremdw\u05b3\u20aahrungskonto",
                            "cashAccountType": "CACC",
                            "name": "US Dollar Account",
                            "_links": {
                                "balances": {
                                    "href": "/v1.0.8/accounts/3dc3d5b3-7023-4848-9853-f5400a64e81g/balances"
                                },
                                "transactions": {
                                    "href": "/v1.0.8/accounts/3dc3d5b3-7023-4848-9853-f5400a64e81g/transactions"
                                }
                            }
                        }
                    ]
                }
            },
            "accountListExample3": {
                "summary": "Account list Example 3",
                "description": "Account list response in case of an example where consent on balances and transactions has been given to \na multicurrency account which has two sub-accounts with currencies EUR and USD and where the ASPSP is giving \nthe data access on aggregation level and on sub-account level\n",
                "value": {
                    "accounts": [
                        {
                            "resourceId": "3dc3d5b3-7023-4848-9853-f5400a64e80f",
                            "iban": "DE2310010010123456788",
                            "currency": "XXX",
                            "product": "Multi currency account",
                            "cashAccountType": "CACC",
                            "name": "Aggregation Account",
                            "_links": {
                                "balances": {
                                    "href": "/v1.0.8/accounts/3dc3d5b3-7023-4848-9853-f5400a64e333/balances"
                                },
                                "transactions": {
                                    "href": "/v1.0.8/accounts/3dc3d5b3-7023-4848-9853-f5400a64e333/transactions"
                                }
                            }
                        },
                        {
                            "resourceId": "3dc3d5b3-7023-4848-9853-f5400a64e80f",
                            "iban": "DE2310010010123456788",
                            "currency": "EUR",
                            "product": "Girokonto",
                            "cashAccountType": "CACC",
                            "name": "Main Account",
                            "_links": {
                                "balances": {
                                    "href": "/v1.0.8/accounts/3dc3d5b3-7023-4848-9853-f5400a64e80f/balances"
                                },
                                "transactions": {
                                    "href": "/v1.0.8/accounts/3dc3d5b3-7023-4848-9853-f5400a64e80f/transactions"
                                }
                            }
                        },
                        {
                            "resourceId": "3dc3d5b3-7023-4848-9853-f5400a64e81g",
                            "iban": "DE2310010010123456788",
                            "currency": "USD",
                            "product": "Fremdw\u05b3\u20aahrungskonto",
                            "cashAccountType": "CACC",
                            "name": "US Dollar Account",
                            "_links": {
                                "balances": {
                                    "href": "/v1.0.8/accounts/3dc3d5b3-7023-4848-9853-f5400a64e81g/balances"
                                },
                                "transactions": {
                                    "href": "/v1.0.8/accounts/3dc3d5b3-7023-4848-9853-f5400a64e81g/transactions"
                                }
                            }
                        }
                    ]
                }
            },
            "cardAccountListExample1": {
                "summary": "Card account list example 1",
                "description": "Card account list example\n",
                "value": {
                    "cardAccounts": [
                        {
                            "resourceId": "3d9a81b3-a47d-4130-8765-a9c0ff861b99",
                            "maskedPan": "525412******3241",
                            "currency": "EUR",
                            "name": "Main",
                            "product": "Basic Credit",
                            "status": "enabled",
                            "creditLimit": {
                                "currency": "EUR",
                                "amount": "15000"
                            },
                            "balances": [
                                {
                                    "balanceType": "interimBooked",
                                    "balanceAmount": {
                                        "currency": "EUR",
                                        "amount": "14355.78"
                                    }
                                },
                                {
                                    "balanceType": "nonInvoiced",
                                    "balanceAmount": {
                                        "currency": "EUR",
                                        "amount": "4175.86"
                                    }
                                }
                            ],
                            "_links": {
                                "transactions": {
                                    "href": "/v1.0.8/card-accounts/3d9a81b3-a47d-4130-8765-a9c0ff861b99/transactions"
                                }
                            }
                        }
                    ]
                }
            },
            "cardAccountDetailsExample": {
                "summary": "Card account details example 1",
                "description": "Card account details example\n",
                "value": {
                    "cardAccount": {
                        "resourceId": "3d9a81b3-a47d-4130-8765-a9c0ff861b99",
                        "maskedPan": "525412******3241",
                        "currency": "EUR",
                        "name": "Main",
                        "ownerName": "Gil Gila",
                        "product": "Basic Credit",
                        "status": "enabled",
                        "creditLimit": {
                            "currency": "EUR",
                            "amount": "15000"
                        },
                        "balances": [
                            {
                                "balanceType": "interimBooked",
                                "balanceAmount": {
                                    "currency": "EUR",
                                    "amount": "14355.78"
                                }
                            },
                            {
                                "balanceType": "nonInvoiced",
                                "balanceAmount": {
                                    "currency": "EUR",
                                    "amount": "4175.86"
                                }
                            }
                        ]
                    }
                }
            },
            "cardAccountsTransactionsExample1_RegularAccount_json": {
                "description": "Response in JSON format for an access on a regular account.",
                "value": {
                    "cardAccount": {
                        "maskedPan": "525412******3241"
                    },
                    "cardTransactions": {
                        "booked": [
                            {
                                "cardTransactionId": "201710020036959",
                                "transactionAmount": {
                                    "currency": "EUR",
                                    "amount": "256.67"
                                },
                                "transactionDate": "2017-10-25",
                                "bookingDate": "2017-10-26",
                                "originalAmount": {
                                    "currency": "SEK",
                                    "amount": "2499"
                                },
                                "cardAcceptorAddress": {
                                    "city": "STOCKHOLM",
                                    "country": "SE"
                                },
                                "maskedPan": "525412******3241",
                                "proprietaryBankTransactionCode": "PURCHASE",
                                "invoiced": false,
                                "transactionDetails": "WIFIMARKET.SE"
                            },
                            {
                                "cardTransactionId": "201710020091863",
                                "transactionAmount": {
                                    "currency": "EUR",
                                    "amount": "10.72"
                                },
                                "transactionDate": "2017-10-25",
                                "bookingDate": "2017-10-26",
                                "originalAmount": {
                                    "currency": "SEK",
                                    "amount": "99"
                                },
                                "cardAcceptorAddress": {
                                    "city": "STOCKHOLM",
                                    "country": "SE"
                                },
                                "maskedPan": "525412******8999",
                                "proprietaryBankTransactionCode": "PURCHASE",
                                "invoiced": false,
                                "transactionDetails": "ICA SUPERMARKET SKOGHA"
                            }
                        ],
                        "pending": [],
                        "_links": {
                            "cardAccount": {
                                "href": "/v1.0.8/card-accounts/3d9a81b3-a47d-4130-8765-a9c0ff861b99"
                            }
                        }
                    }
                }
            },
            "startScaProcessResponseExample1": {
                "value": {
                    "scaStatus": "received",
                    "authorisationId": "123auth456",
                    "psuMessage": "Please use your BankApp for transaction Authorisation.",
                    "_links": {
                        "scaStatus": {
                            "href": "/v1.0.8/payments/qwer3456tzui7890/authorisations/123auth456"
                        }
                    }
                }
            },
            "consentsExample_DedicatedAccounts": {
                "description": "Consent request on dedicated accounts",
                "value": {
                    "access": {
                        "balances": [
                            {
                                "iban": "DE40100100103307118608"
                            },
                            {
                                "iban": "DE02100100109307118603",
                                "currency": "ILS"
                            },
                            {
                                "iban": "DE67100100101306118605"
                            }
                        ],
                        "transactions": [
                            {
                                "iban": "DE40100100103307118608"
                            },
                            {
                                "maskedPan": "123456xxxxxx1234"
                            }
                        ]
                    },
                    "recurringIndicator": "true",
                    "validUntil": "2017-11-01",
                    "frequencyPerDay": 100
                }
            },
            "consentsExample_AccountList": {
                "description": "Consent on Account List of Available Accounts",
                "value": {
                    "access": {
                        "availableAccounts": "allAccounts"
                    },
                    "recurringIndicator": "false",
                    "validUntil": "2017-08-06",
                    "frequencyPerDay": 100
                }
            },
            "consentsExample_without_Accounts": {
                "description": "Consent request on account list or without indication of accounts",
                "value": {
                    "access": {
                        "balances": [],
                        "transactions": []
                    },
                    "recurringIndicator": "true",
                    "validUntil": "2017-11-01",
                    "frequencyPerDay": 100
                }
            },
            "consentsInformationResponseExample": {
                "description": "Consent request on account list or without indication of accounts",
                "value": {
                    "access": {
                        "balances": [
                            {
                                "iban": "DE2310010010123456789"
                            }
                        ],
                        "transactions": [
                            {
                                "iban": "DE2310010010123456789"
                            },
                            {
                                "maskedPan": "123456xxxxxx3457"
                            }
                        ]
                    },
                    "recurringIndicator": "true",
                    "validUntil": "2017-11-01",
                    "frequencyPerDay": 100,
                    "lastActionDate": "2017-10-09",
                    "consentStatus": "valid",
                    "_links": {
                        "account": {
                            "href": "/v1.0.8/accounts"
                        }
                    }
                }
            },
            "consentResponseExample2_OAuth2": {
                "description": "Response in case of the OAuth2 approach with an implicit generated authorisation resource",
                "value": {
                    "consentStatus": "received",
                    "consentId": "1234-wertiq-983",
                    "_links": {
                        "self": {
                            "href": "/v1.0.8/consents/1234-wertiq-983"
                        },
                        "scaStatus": {
                            "href": "v1.0.8/consents/1234-wertiq-983/authorisations/123auth567"
                        },
                        "scaOAuth": {
                            "href": "https://www.testbank.com/oauth/.well-known/oauth-authorization-server"
                        }
                    }
                }
            },
            "consentResponseExample3_Decoupled": {
                "description": "Response in case of the decoupled approach",
                "value": {
                    "consentStatus": "received",
                    "consentId": "1234-wertiq-983",
                    "_links": {
                        "self": {
                            "href": "/v1.0.8/consents/1234-wertiq-983"
                        }
                    }
                }
            },
            "consentStatusResponseExample1": {
                "description": "Response for a consent status request.",
                "value": {
                    "consentStatus": "valid"
                }
            },
            "paymentInitiationExample_json_OAuth2": {
                "description": "Response in case of an OAuth2 SCA approach approach with implicitly creating an authorisation sub-resource",
                "value": {
                    "transactionStatus": "RCVD",
                    "paymentId": "1234-wertiq-983",
                    "_links": {
                        "scaOAuth": {
                            "href": "https://www.testbank.com/oauth/.well-known/oauth-authorization-server"
                        },
                        "self": {
                            "href": "/v1.0.8/payments/masav/1234-wertiq-983"
                        },
                        "status": {
                            "href": "/v1.0.8/payments/masav/1234-wertiq-983/status"
                        },
                        "scaStatus": {
                            "href": "/v1.0.8/payments/masav/1234-wertiq-983/authorisations/123auth456"
                        }
                    }
                }
            },
            "paymentInitiationExample_json_Decoupled": {
                "description": "Response in case of the decoupled approach with explicit start of authorisation needed",
                "value": {
                    "transactionStatus": "RCVD",
                    "paymentId": "1234-wertiq-983",
                    "_links": {
                        "self": {
                            "href": "/v1.0.8/payments/masav/1234-wertiq-983"
                        }
                    }
                }
            },
            "paymentInitiationStatusResponse_json_Simple": {
                "value": {
                    "transactionStatus": "ACCP"
                }
            },
            "paymentInitiationCancelResponse-202": {
                "value": {
                    "transactionStatus": "ACTC",
                    "_links": {
                        "self": {
                            "href": "/v1.0.8/payments/123456scheduled789"
                        },
                        "status": {
                            "href": "/v1.0.8/payments/123456scheduled789/status"
                        },
                        "startAuthorisation": {
                            "href": "/v1.0.8/payments/123456scheduled789/cancellation-authorisations"
                        }
                    }
                }
            },
            "paymentInitiationStatusResponse_json_Extended": {
                "value": "{ \n  \"transactionStatus\": \"ACCP\",\n  \"scaStatus\": \"Some SCA Status\"\n}\n"
            },
            "updatePsuIdentificationResponseExample_Decoupled_payments": {
                "description": "Response of an Update PSU Identification for a payment initiation request for the decoupled approach.",
                "value": {
                    "scatransactionStatus": "psuIdentified",
                    "psuMessage": "Please use your BankApp for transaction Authorisation.",
                    "_links": {
                        "scaStatus": {
                            "href": "/v1.0.8/payments/qwer3456tzui7890/authorisations/123auth456"
                        }
                    }
                }
            },
            "transactionAuthorisationResponseExample": {
                "description": "Response of a Transaction Authorisation request for the embedded approach.",
                "value": {
                    "scaStatus": "finalised"
                }
            },
            "confirmationOfFundsExample": {
                "description": "Request body for a confirmation of funds.",
                "value": {
                    "cardNumber": "12345678901234",
                    "account": {
                        "iban": "DE23100120020123456789"
                    },
                    "instructedAmount": {
                        "currency": "EUR",
                        "amount": "123"
                    }
                }
            },
            "confirmationOfFundsResponseExample": {
                "description": "Response for a confirmation of funds request.",
                "value": {
                    "fundsAvailable": "true"
                }
            },
            "balancesExample1_RegularAccount": {
                "description": "Response for a read balance request in case of a regular account.",
                "value": {
                    "account": {
                        "iban": "FR7612345987650123456789014"
                    },
                    "balances": [
                        {
                            "balanceType": "closingBooked",
                            "balanceAmount": {
                                "currency": "EUR",
                                "amount": "500.00"
                            },
                            "referenceDate": "2017-10-25"
                        },
                        {
                            "balanceType": "expected",
                            "balanceAmount": {
                                "currency": "EUR",
                                "amount": "900.00"
                            },
                            "lastChangeDateTime": "2017-10-25T15:30:35.035Z"
                        }
                    ]
                }
            },
            "balancesExample2_MulticurrencyAcount": {
                "description": "Response in case of a multicurrency account with one account in EUR, \none in USD, where the ASPSP has delivered a link to the balance endpoint relative to the aggregated \nmulticurrency account (aggregation level).\n",
                "value": {
                    "balances": [
                        {
                            "balanceType": "closingBooked",
                            "balanceAmount": {
                                "currency": "EUR",
                                "amount": "500.00"
                            },
                            "referenceDate": "2017-10-25"
                        },
                        {
                            "balanceType": "expected",
                            "balanceAmount": {
                                "currency": "EUR",
                                "amount": "900.00"
                            },
                            "lastChangeDateTime": "2017-10-25T15:30:35.035Z"
                        },
                        {
                            "balanceType": "closingBooked",
                            "balanceAmount": {
                                "currency": "USD",
                                "amount": "350.00"
                            },
                            "referenceDate": "2017-10-25"
                        },
                        {
                            "balanceType": "expected",
                            "balanceAmount": {
                                "currency": "USD",
                                "amount": "350.00"
                            },
                            "lastChangeDateTime": "2017-10-24T14:30:21Z"
                        }
                    ]
                }
            },
            "balancesExample_CardAccount": {
                "description": "Response in case of card Acoount balance request\n",
                "value": {
                    "cardAccount": {
                        "maskedPan": "525412******3241"
                    },
                    "balances": [
                        {
                            "balanceType": "interimBooked",
                            "balanceAmount": {
                                "currency": "EUR",
                                "amount": "14355.78"
                            }
                        },
                        {
                            "balanceType": "nonInvoiced",
                            "balanceAmount": {
                                "currency": "EUR",
                                "amount": "4175.86"
                            }
                        }
                    ]
                }
            },
            "transactionsExample1_RegularAccount_json": {
                "description": "Response in JSON format for an access on a regular account",
                "value": {
                    "account": {
                        "iban": "DE2310010010123456788"
                    },
                    "transactions": {
                        "booked": [
                            {
                                "transactionId": "1234567",
                                "creditorName": "John Miles",
                                "creditorAccount": {
                                    "iban": "DE67100100101306118605"
                                },
                                "transactionAmount": {
                                    "currency": "EUR",
                                    "amount": "256.67"
                                },
                                "bookingDate": "2017-10-25",
                                "valueDate": "2017-10-26",
                                "remittanceInformationUnstructured": "Example 1"
                            },
                            {
                                "transactionId": "1234568",
                                "debtorName": "Paul Simpson",
                                "debtorAccount": {
                                    "iban": "NL76RABO0359400371"
                                },
                                "transactionAmount": {
                                    "currency": "EUR",
                                    "amount": "343.01"
                                },
                                "bookingDate": "2017-10-25",
                                "valueDate": "2017-10-26",
                                "remittanceInformationUnstructured": "Example 2"
                            }
                        ],
                        "pending": [
                            {
                                "transactionId": "1234569",
                                "creditorName": "Claude Renault",
                                "creditorAccount": {
                                    "iban": "FR7612345987650123456789014"
                                },
                                "transactionAmount": {
                                    "currency": "EUR",
                                    "amount": "-100.03"
                                },
                                "valueDate": "2017-10-26",
                                "remittanceInformationUnstructured": "Example 3"
                            }
                        ],
                        "_links": {
                            "account": {
                                "href": "/v1.0.8/accounts/3dc3d5b3-7023-4848-9853-f5400a64e80f"
                            }
                        }
                    }
                }
            },
            "transactionsExample2_paging_json": {
                "description": "Response in case of data paging.",
                "value": {
                    "_links": {
                        "first": {
                            "href": "/v1.0.8/accounts/12345678999/transactions"
                        },
                        "next": {
                            "href": "/v1.0.8/accounts/12345678999/transactions"
                        },
                        "previous": {
                            "href": "/v1.0.8/accounts/12345678999/transactions"
                        },
                        "last": {
                            "href": "/v1.0.8/accounts/12345678999/transactions"
                        }
                    }
                }
            },
            "transactionsExample3_MulticurrencyAccount_json": {
                "description": "Response in JSON format for an access on a multicurrency account on aggregation level",
                "value": {
                    "account": {
                        "iban": "DE40100100103307118608"
                    },
                    "transactions": {
                        "booked": [
                            {
                                "transactionId": "1234567",
                                "creditorName": "John Miles",
                                "creditorAccount": {
                                    "iban": "DE67100100101306118605"
                                },
                                "transactionAmount": {
                                    "currency": "EUR",
                                    "amount": "-256.67"
                                },
                                "bookingDate": "2017-10-25",
                                "valueDate": "2017-10-26",
                                "remittanceInformationUnstructured": "Example 1"
                            },
                            {
                                "transactionId": "1234568",
                                "debtorName": "Paul Simpson",
                                "debtorAccount": {
                                    "iban": "NL76RABO0359400371"
                                },
                                "transactionAmount": {
                                    "currency": "EUR",
                                    "amount": "343.01"
                                },
                                "bookingDate": "2017-10-25",
                                "valueDate": "2017-10-26",
                                "remittanceInformationUnstructured": "Example 2"
                            },
                            {
                                "transactionId": "1234569",
                                "debtorName": "Pepe Martin",
                                "debtorAccount": {
                                    "iban": "SE9412309876543211234567"
                                },
                                "transactionAmount": {
                                    "currency": "USD",
                                    "amount": "100"
                                },
                                "bookingDate": "2017-10-25",
                                "valueDate": "2017-10-26",
                                "remittanceInformationUnstructured": "Example 3"
                            }
                        ],
                        "pending": [
                            {
                                "transactionId": "1234570",
                                "creditorName": "Claude Renault",
                                "creditorAccount": {
                                    "iban": "FR7612345987650123456789014"
                                },
                                "transactionAmount": {
                                    "currency": "EUR",
                                    "amount": "-100.03"
                                },
                                "valueDate": "2017-10-26",
                                "remittanceInformationUnstructured": "Example 4"
                            }
                        ],
                        "_links": {
                            "account": {
                                "href": "/v1.0.8/accounts/3dc3d5b3-7023-4848-9853-f5400a64e80f"
                            }
                        }
                    }
                }
            },
            "transactionsExample4_checkDepositTransaction_json": {
                "description": "Response in json format in case of checks deposit transaction.",
                "value": {
                    "account": {
                        "iban": "DE40100100103307118608"
                    },
                    "transactions": {
                        "booked": [
                            {
                                "transactionId": "1234567",
                                "creditorName": "John Miles",
                                "creditorAccount": {
                                    "iban": "DE67100100101306118605"
                                },
                                "transactionAmount": {
                                    "currency": "EUR",
                                    "amount": "-256.67"
                                },
                                "bookingDate": "2017-10-25",
                                "valueDate": "2017-10-26",
                                "remittanceInformationUnstructured": "Example 1"
                            },
                            {
                                "transactionId": "1234568",
                                "transactionAmount": {
                                    "currency": "EUR",
                                    "amount": "343.01"
                                },
                                "bookingDate": "2017-10-25",
                                "valueDate": "2017-10-26",
                                "remittanceInformationUnstructured": "Example 2- checks",
                                "additionalInformationStructured": {
                                    "checksDetails": [
                                        {
                                            "checkId": "111",
                                            "bookingDate": "2017-7-25",
                                            "valueDate": "2017-7-26",
                                            "transactionAmount": {
                                                "currency": "ILS",
                                                "amount": "250"
                                            }
                                        },
                                        {
                                            "checkId": "222",
                                            "bookingDate": "2017-7-25",
                                            "valueDate": "2017-7-26",
                                            "transactionAmount": {
                                                "currency": "ILS",
                                                "amount": "450"
                                            }
                                        },
                                        {
                                            "checkId": "333",
                                            "bookingDate": "2017-7-25",
                                            "valueDate": "2017-7-26",
                                            "transactionAmount": {
                                                "currency": "ILS",
                                                "amount": "300"
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "_links": {
                        "account": {
                            "href": "/v1.0.8/accounts/3dc3d5b3-7023-4848-9853-f5400a64e80f"
                        }
                    }
                }
            },
            "transactionDetailsExample": {
                "description": "Example for transaction details",
                "value": {
                    "transactionsDetails": {
                        "transactionId": "1234567",
                        "creditorName": "John Miles",
                        "creditorAccount": {
                            "iban": "DE67100100101306118605"
                        },
                        "mandateId": "Mandate-2018-04-20-1234",
                        "transactionAmount": {
                            "currency": "EUR",
                            "amount": "-256.67"
                        },
                        "bookingDate": "2017-10-25",
                        "valueDate": "2017-10-26"
                    }
                }
            },
            "authorisationListExample": {
                "value": {
                    "authorisationIds": [
                        "123auth456"
                    ]
                }
            }
        }
    },
    "security": [
        {}
    ],
    "tags": [
        {
            "name": "Payment Initiation Service (PIS)",
            "description": "The Decription for Payment Initiation Service (PIS) offers the following services:\n  * Initiation and update of a payment request\n  * Status information of a payment\n"
        },
        {
            "name": "Confirmation of Funds Service (PIIS)",
            "description": "Confirmation of Funds Service (PIIS) returns a confirmation of funds request at the ASPSP.\n"
        },
        {
            "name": "Account Information Service (AIS)",
            "description": "The Account Information Service (AIS) offers the following services\n  * Transaction reports for a given account or card account including balances if applicable.\n  * Balances of a given account or card account ,\n  * A list of available accounts or card account ,\n  * Account details of a given account or card account or of the list of all accessible accounts or card account  relative to a granted consent\n"
        },
        {
            "name": "Signing Baskets Service (SBS)",
            "description": "Signing basket methods are used for authorising several transactions and resp. or consents with one SCA operation. \n"
        },
        {
            "name": "Common Services",
            "description": "Processes on starting authorisations, update PSU identification or PSU authentication data and explicit \nauthorisation of transactions by using SCA are very similar in PIS and AIS and signing baskets services. \nThe API calls supporting these processes are described in the following independently from the service/endpoint. \nFor reasons of clarity, the endpoints are defined always for the Payment Initiation Service, the Payment Cancellation, \nthe Account Information Service (Consents), and Signing Baskets separately. \nThese processes usually are used following a hyperlink of the ASPSP."
        }
    ]
}