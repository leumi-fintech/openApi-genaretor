{
  "service": {
    "service": "payment",
    "serviceObject": {
      "name": "payment"
    },
    "provider": {
      "apiName": "payment api gateway",
      "deploymentBucket": "payment-leumi",
      "endpointType": "private",
      "environment": {
        "APPLICATIONS_TABLE": "${REACT_APP_AWS_APPLICATIONS_TABLE}",
        "NODE_PATH": "/opt/nodejs/node12/node_modules/:/opt/nodejs/node_modules:$LAMBDA_RUNTIME_DIR/node_modules:/opt/:/"
      },
      "memorySize": 128,
      "name": "aws",
      "profile": "ob-leumi-sbx",
      "region": "eu-west-1",
      "resourcePolicy": [
        {
          "Action": [
            "*"
          ],
          "Effect": "Allow",
          "Principal": "*",
          "Resource": "*"
        }
      ],
      "role": "ApiRole",
      "runtime": "nodejs12.x",
      "stackName": "payment-dev",
      "stage": "dev",
      "tags": {
        "applications": "Open Banking Aws",
        "env": "dev",
        "system": "Open Banking Aws"
      },
      "timeout": 5,
      "variableSyntax": "\\${([^{}:]+?(?:\\(|:)(?:[^:{}][^{}]*?)?)}",
      "versionFunctions": true,
      "vpcEndpointIds": null,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "AuthorisationIdDashgetLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/authorisationId-get"
            }
          },
          "PaymentIdDashdeleteLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/paymentId-delete"
            }
          },
          "PaymentIdDashgetLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/paymentId-get"
            }
          },
          "PaymentproductDashpostLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/paymentproduct-post"
            }
          },
          "StatusDashgetLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/status-get"
            }
          },
          "NodeModulesUsagePlanLambdaLayer": {
            "Type": "AWS::Lambda::LayerVersion",
            "Properties": {
              "Content": {
                "S3Bucket": "payment-leumi",
                "S3Key": "serverless/payment/dev/1625920077576-2021-07-10T12:27:57.576Z/NodeModulesUsagePlan.zip"
              },
              "LayerName": "NodeModulesUsagePlan",
              "Description": "node modules dependencies",
              "CompatibleRuntimes": [
                "nodejs12.x"
              ]
            }
          },
          "AuthorisationIdDashgetLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "payment-leumi",
                "S3Key": "serverless/payment/dev/1625920077576-2021-07-10T12:27:57.576Z/payment.zip"
              },
              "Handler": "payment-handler.authorisationId-get",
              "Runtime": "nodejs12.x",
              "FunctionName": "authorisationId-get",
              "MemorySize": 128,
              "Timeout": 5,
              "Tags": [
                {
                  "Key": "applications",
                  "Value": "Open Banking Aws"
                },
                {
                  "Key": "env",
                  "Value": "dev"
                },
                {
                  "Key": "system",
                  "Value": "Open Banking Aws"
                }
              ],
              "Environment": {
                "Variables": {
                  "APPLICATIONS_TABLE": "${REACT_APP_AWS_APPLICATIONS_TABLE}",
                  "NODE_PATH": "/opt/nodejs/node12/node_modules/:/opt/nodejs/node_modules:$LAMBDA_RUNTIME_DIR/node_modules:/opt/:/"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "ApiRole",
                  "Arn"
                ]
              },
              "Layers": [
                {
                  "Ref": "NodeModulesUsagePlanLambdaLayer"
                }
              ]
            },
            "DependsOn": [
              "AuthorisationIdDashgetLogGroup",
              "ApiRole"
            ]
          },
          "PaymentIdDashdeleteLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "payment-leumi",
                "S3Key": "serverless/payment/dev/1625920077576-2021-07-10T12:27:57.576Z/payment.zip"
              },
              "Handler": "payment-handler.paymentId-delete",
              "Runtime": "nodejs12.x",
              "FunctionName": "paymentId-delete",
              "MemorySize": 128,
              "Timeout": 5,
              "Tags": [
                {
                  "Key": "applications",
                  "Value": "Open Banking Aws"
                },
                {
                  "Key": "env",
                  "Value": "dev"
                },
                {
                  "Key": "system",
                  "Value": "Open Banking Aws"
                }
              ],
              "Environment": {
                "Variables": {
                  "APPLICATIONS_TABLE": "${REACT_APP_AWS_APPLICATIONS_TABLE}",
                  "NODE_PATH": "/opt/nodejs/node12/node_modules/:/opt/nodejs/node_modules:$LAMBDA_RUNTIME_DIR/node_modules:/opt/:/"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "ApiRole",
                  "Arn"
                ]
              },
              "Layers": [
                {
                  "Ref": "NodeModulesUsagePlanLambdaLayer"
                }
              ]
            },
            "DependsOn": [
              "PaymentIdDashdeleteLogGroup",
              "ApiRole"
            ]
          },
          "PaymentIdDashgetLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "payment-leumi",
                "S3Key": "serverless/payment/dev/1625920077576-2021-07-10T12:27:57.576Z/payment.zip"
              },
              "Handler": "payment-handler.paymentId-get",
              "Runtime": "nodejs12.x",
              "FunctionName": "paymentId-get",
              "MemorySize": 128,
              "Timeout": 5,
              "Tags": [
                {
                  "Key": "applications",
                  "Value": "Open Banking Aws"
                },
                {
                  "Key": "env",
                  "Value": "dev"
                },
                {
                  "Key": "system",
                  "Value": "Open Banking Aws"
                }
              ],
              "Environment": {
                "Variables": {
                  "APPLICATIONS_TABLE": "${REACT_APP_AWS_APPLICATIONS_TABLE}",
                  "NODE_PATH": "/opt/nodejs/node12/node_modules/:/opt/nodejs/node_modules:$LAMBDA_RUNTIME_DIR/node_modules:/opt/:/"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "ApiRole",
                  "Arn"
                ]
              },
              "Layers": [
                {
                  "Ref": "NodeModulesUsagePlanLambdaLayer"
                }
              ]
            },
            "DependsOn": [
              "PaymentIdDashgetLogGroup",
              "ApiRole"
            ]
          },
          "PaymentproductDashpostLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "payment-leumi",
                "S3Key": "serverless/payment/dev/1625920077576-2021-07-10T12:27:57.576Z/payment.zip"
              },
              "Handler": "payment-handler.paymentproduct-post",
              "Runtime": "nodejs12.x",
              "FunctionName": "paymentproduct-post",
              "MemorySize": 128,
              "Timeout": 5,
              "Tags": [
                {
                  "Key": "applications",
                  "Value": "Open Banking Aws"
                },
                {
                  "Key": "env",
                  "Value": "dev"
                },
                {
                  "Key": "system",
                  "Value": "Open Banking Aws"
                }
              ],
              "Environment": {
                "Variables": {
                  "APPLICATIONS_TABLE": "${REACT_APP_AWS_APPLICATIONS_TABLE}",
                  "NODE_PATH": "/opt/nodejs/node12/node_modules/:/opt/nodejs/node_modules:$LAMBDA_RUNTIME_DIR/node_modules:/opt/:/"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "ApiRole",
                  "Arn"
                ]
              },
              "Layers": [
                {
                  "Ref": "NodeModulesUsagePlanLambdaLayer"
                }
              ]
            },
            "DependsOn": [
              "PaymentproductDashpostLogGroup",
              "ApiRole"
            ]
          },
          "StatusDashgetLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "payment-leumi",
                "S3Key": "serverless/payment/dev/1625920077576-2021-07-10T12:27:57.576Z/payment.zip"
              },
              "Handler": "payment-handler.status-get",
              "Runtime": "nodejs12.x",
              "FunctionName": "status-get",
              "MemorySize": 128,
              "Timeout": 5,
              "Tags": [
                {
                  "Key": "applications",
                  "Value": "Open Banking Aws"
                },
                {
                  "Key": "env",
                  "Value": "dev"
                },
                {
                  "Key": "system",
                  "Value": "Open Banking Aws"
                }
              ],
              "Environment": {
                "Variables": {
                  "APPLICATIONS_TABLE": "${REACT_APP_AWS_APPLICATIONS_TABLE}",
                  "NODE_PATH": "/opt/nodejs/node12/node_modules/:/opt/nodejs/node_modules:$LAMBDA_RUNTIME_DIR/node_modules:/opt/:/"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "ApiRole",
                  "Arn"
                ]
              },
              "Layers": [
                {
                  "Ref": "NodeModulesUsagePlanLambdaLayer"
                }
              ]
            },
            "DependsOn": [
              "StatusDashgetLogGroup",
              "ApiRole"
            ]
          },
          "AuthorisationIdDashgetLambdaVersion6gTDb7TD0A1smXREn7li8wjzKzxdZyki64jEY5PuDbA": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "AuthorisationIdDashgetLambdaFunction"
              },
              "CodeSha256": "f0Z69ovR9RXoWI2LDy+e4jFJtGpZgGbkgPnstIqwrOM="
            }
          },
          "PaymentIdDashgetLambdaVersionmiMg1hguS5e6BnBs5RdJ73AuNwa2fG6ZZQKePYRMYw": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "PaymentIdDashgetLambdaFunction"
              },
              "CodeSha256": "f0Z69ovR9RXoWI2LDy+e4jFJtGpZgGbkgPnstIqwrOM="
            }
          },
          "StatusDashgetLambdaVersionc5gUcpzmQmke3s11XeL8ttzmT5AIvfNi2x2w6hkhic": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "StatusDashgetLambdaFunction"
              },
              "CodeSha256": "f0Z69ovR9RXoWI2LDy+e4jFJtGpZgGbkgPnstIqwrOM="
            }
          },
          "PaymentIdDashdeleteLambdaVersionREzkzmYJP88Bfrned7JvAhNis8xBzqeGIYYgPpaOnk": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "PaymentIdDashdeleteLambdaFunction"
              },
              "CodeSha256": "f0Z69ovR9RXoWI2LDy+e4jFJtGpZgGbkgPnstIqwrOM="
            }
          },
          "PaymentproductDashpostLambdaVersiony4mBNPYVwkhQz9cxUBHeRtitDMQVBlbATHdWh4jTY": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "PaymentproductDashpostLambdaFunction"
              },
              "CodeSha256": "f0Z69ovR9RXoWI2LDy+e4jFJtGpZgGbkgPnstIqwrOM="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "payment api gateway",
              "EndpointConfiguration": {
                "Types": [
                  "PRIVATE"
                ]
              },
              "Policy": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Action": [
                      "*"
                    ],
                    "Effect": "Allow",
                    "Principal": "*",
                    "Resource": "*"
                  }
                ]
              }
            }
          },
          "ApiGatewayResourceV108": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "v1.0.8",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceV108Payments": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceV108"
              },
              "PathPart": "payments",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceV108PaymentsMasav": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceV108Payments"
              },
              "PathPart": "masav",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceV108PaymentsMasavPaymentidVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceV108PaymentsMasav"
              },
              "PathPart": "{paymentId}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceV108PaymentsMasavPaymentidVarAuthorisations": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceV108PaymentsMasavPaymentidVar"
              },
              "PathPart": "authorisations",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceV108PaymentsMasavPaymentidVarAuthorisationsAuthorisationidVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceV108PaymentsMasavPaymentidVarAuthorisations"
              },
              "PathPart": "{authorisationId}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceV108PaymentsMasavPaymentidVarStatus": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceV108PaymentsMasavPaymentidVar"
              },
              "PathPart": "status",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceV108PaymentsZahav": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceV108Payments"
              },
              "PathPart": "zahav",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceV108PaymentsZahavPaymentidVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceV108PaymentsZahav"
              },
              "PathPart": "{paymentId}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceV108PaymentsZahavPaymentidVarAuthorisations": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceV108PaymentsZahavPaymentidVar"
              },
              "PathPart": "authorisations",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceV108PaymentsZahavPaymentidVarAuthorisationsAuthorisationidVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceV108PaymentsZahavPaymentidVarAuthorisations"
              },
              "PathPart": "{authorisationId}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceV108PaymentsZahavPaymentidVarStatus": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceV108PaymentsZahavPaymentidVar"
              },
              "PathPart": "status",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceV108PaymentsFp": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceV108Payments"
              },
              "PathPart": "fp",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceV108PaymentsFpPaymentidVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceV108PaymentsFp"
              },
              "PathPart": "{paymentId}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceV108PaymentsFpPaymentidVarAuthorisations": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceV108PaymentsFpPaymentidVar"
              },
              "PathPart": "authorisations",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceV108PaymentsFpPaymentidVarAuthorisationsAuthorisationidVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceV108PaymentsFpPaymentidVarAuthorisations"
              },
              "PathPart": "{authorisationId}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceV108PaymentsFpPaymentidVarStatus": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceV108PaymentsFpPaymentidVar"
              },
              "PathPart": "status",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodV108PaymentsMasavPaymentidVarAuthorisationsAuthorisationidVarGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {
                "method.request.header.Digest": true,
                "method.request.header.PSU-IP-Address_mandatory": true,
                "method.request.header.Signature": true,
                "method.request.header.TPP-Signature-Certificate": true,
                "method.request.header.X-Request-ID": true
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceV108PaymentsMasavPaymentidVarAuthorisationsAuthorisationidVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "AuthorisationIdDashgetLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": [],
              "RequestValidatorId": {
                "Ref": "onlyHead"
              }
            }
          },
          "ApiGatewayMethodV108PaymentsZahavPaymentidVarAuthorisationsAuthorisationidVarGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {
                "method.request.header.Digest": true,
                "method.request.header.PSU-IP-Address_mandatory": true,
                "method.request.header.Signature": true,
                "method.request.header.TPP-Signature-Certificate": true,
                "method.request.header.X-Request-ID": true
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceV108PaymentsZahavPaymentidVarAuthorisationsAuthorisationidVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "AuthorisationIdDashgetLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": [],
              "RequestValidatorId": {
                "Ref": "onlyHead"
              }
            }
          },
          "ApiGatewayMethodV108PaymentsFpPaymentidVarAuthorisationsAuthorisationidVarGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {
                "method.request.header.Digest": true,
                "method.request.header.PSU-IP-Address_mandatory": true,
                "method.request.header.Signature": true,
                "method.request.header.TPP-Signature-Certificate": true,
                "method.request.header.X-Request-ID": true
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceV108PaymentsFpPaymentidVarAuthorisationsAuthorisationidVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "AuthorisationIdDashgetLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": [],
              "RequestValidatorId": {
                "Ref": "onlyHead"
              }
            }
          },
          "ApiGatewayMethodV108PaymentsMasavPaymentidVarGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {
                "method.request.header.Digest": true,
                "method.request.header.Signature": true,
                "method.request.header.TPP-Signature-Certificate": true,
                "method.request.header.X-Request-ID": true
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceV108PaymentsMasavPaymentidVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "PaymentIdDashgetLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": [],
              "RequestValidatorId": {
                "Ref": "onlyHead"
              }
            }
          },
          "ApiGatewayMethodV108PaymentsZahavPaymentidVarGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {
                "method.request.header.Digest": true,
                "method.request.header.Signature": true,
                "method.request.header.TPP-Signature-Certificate": true,
                "method.request.header.X-Request-ID": true
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceV108PaymentsZahavPaymentidVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "PaymentIdDashgetLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": [],
              "RequestValidatorId": {
                "Ref": "onlyHead"
              }
            }
          },
          "ApiGatewayMethodV108PaymentsFpPaymentidVarGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {
                "method.request.header.Digest": true,
                "method.request.header.Signature": true,
                "method.request.header.TPP-Signature-Certificate": true,
                "method.request.header.X-Request-ID": true
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceV108PaymentsFpPaymentidVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "PaymentIdDashgetLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": [],
              "RequestValidatorId": {
                "Ref": "onlyHead"
              }
            }
          },
          "ApiGatewayMethodV108PaymentsMasavPaymentidVarDelete": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "DELETE",
              "RequestParameters": {
                "method.request.header.Digest": true,
                "method.request.header.Signature": true,
                "method.request.header.TPP-Signature-Certificate": true,
                "method.request.header.X-Request-ID": true
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceV108PaymentsMasavPaymentidVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "PaymentIdDashgetLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": [],
              "RequestValidatorId": {
                "Ref": "onlyHead"
              }
            }
          },
          "ApiGatewayMethodV108PaymentsZahavPaymentidVarDelete": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "DELETE",
              "RequestParameters": {
                "method.request.header.Digest": true,
                "method.request.header.Signature": true,
                "method.request.header.TPP-Signature-Certificate": true,
                "method.request.header.X-Request-ID": true
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceV108PaymentsZahavPaymentidVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "PaymentIdDashgetLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": [],
              "RequestValidatorId": {
                "Ref": "onlyHead"
              }
            }
          },
          "ApiGatewayMethodV108PaymentsFpPaymentidVarDelete": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "DELETE",
              "RequestParameters": {
                "method.request.header.Digest": true,
                "method.request.header.Signature": true,
                "method.request.header.TPP-Signature-Certificate": true,
                "method.request.header.X-Request-ID": true
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceV108PaymentsFpPaymentidVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "PaymentIdDashgetLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": [],
              "RequestValidatorId": {
                "Ref": "onlyHead"
              }
            }
          },
          "ApiGatewayMethodV108PaymentsMasavPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {
                "method.request.header.Digest": true,
                "method.request.header.PSU-ID": true,
                "method.request.header.PSU-IP-Address_mandatory": true,
                "method.request.header.Signature": true,
                "method.request.header.TPP-Signature-Certificate": true,
                "method.request.header.X-Request-ID": true
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceV108PaymentsMasav"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "PaymentproductDashpostLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": [],
              "RequestValidatorId": {
                "Ref": "onlyHead"
              }
            }
          },
          "ApiGatewayMethodV108PaymentsZahavPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {
                "method.request.header.Digest": true,
                "method.request.header.PSU-ID": true,
                "method.request.header.PSU-IP-Address_mandatory": true,
                "method.request.header.Signature": true,
                "method.request.header.TPP-Signature-Certificate": true,
                "method.request.header.X-Request-ID": true
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceV108PaymentsZahav"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "PaymentproductDashpostLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": [],
              "RequestValidatorId": {
                "Ref": "onlyHead"
              }
            }
          },
          "ApiGatewayMethodV108PaymentsFpPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {
                "method.request.header.Digest": true,
                "method.request.header.PSU-ID": true,
                "method.request.header.PSU-IP-Address_mandatory": true,
                "method.request.header.Signature": true,
                "method.request.header.TPP-Signature-Certificate": true,
                "method.request.header.X-Request-ID": true
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceV108PaymentsFp"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "PaymentproductDashpostLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": [],
              "RequestValidatorId": {
                "Ref": "onlyHead"
              }
            }
          },
          "ApiGatewayMethodV108PaymentsMasavPaymentidVarStatusGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {
                "method.request.header.Digest": true,
                "method.request.header.Signature": true,
                "method.request.header.TPP-Signature-Certificate": true,
                "method.request.header.X-Request-ID": true
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceV108PaymentsMasavPaymentidVarStatus"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "StatusDashgetLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": [],
              "RequestValidatorId": {
                "Ref": "onlyHead"
              }
            }
          },
          "ApiGatewayMethodV108PaymentsZahavPaymentidVarStatusGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {
                "method.request.header.Digest": true,
                "method.request.header.Signature": true,
                "method.request.header.TPP-Signature-Certificate": true,
                "method.request.header.X-Request-ID": true
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceV108PaymentsZahavPaymentidVarStatus"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "StatusDashgetLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": [],
              "RequestValidatorId": {
                "Ref": "onlyHead"
              }
            }
          },
          "ApiGatewayMethodV108PaymentsFpPaymentidVarStatusGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {
                "method.request.header.Digest": true,
                "method.request.header.Signature": true,
                "method.request.header.TPP-Signature-Certificate": true,
                "method.request.header.X-Request-ID": true
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceV108PaymentsFpPaymentidVarStatus"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "StatusDashgetLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": [],
              "RequestValidatorId": {
                "Ref": "onlyHead"
              }
            }
          },
          "ApiGatewayDeployment1625920072306": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodV108PaymentsMasavPaymentidVarAuthorisationsAuthorisationidVarGet",
              "ApiGatewayMethodV108PaymentsZahavPaymentidVarAuthorisationsAuthorisationidVarGet",
              "ApiGatewayMethodV108PaymentsFpPaymentidVarAuthorisationsAuthorisationidVarGet",
              "ApiGatewayMethodV108PaymentsMasavPaymentidVarGet",
              "ApiGatewayMethodV108PaymentsZahavPaymentidVarGet",
              "ApiGatewayMethodV108PaymentsFpPaymentidVarGet",
              "ApiGatewayMethodV108PaymentsMasavPaymentidVarDelete",
              "ApiGatewayMethodV108PaymentsZahavPaymentidVarDelete",
              "ApiGatewayMethodV108PaymentsFpPaymentidVarDelete",
              "ApiGatewayMethodV108PaymentsMasavPaymentidVarGet",
              "ApiGatewayMethodV108PaymentsZahavPaymentidVarGet",
              "ApiGatewayMethodV108PaymentsFpPaymentidVarGet",
              "ApiGatewayMethodV108PaymentsMasavPaymentidVarDelete",
              "ApiGatewayMethodV108PaymentsZahavPaymentidVarDelete",
              "ApiGatewayMethodV108PaymentsFpPaymentidVarDelete",
              "ApiGatewayMethodV108PaymentsMasavPost",
              "ApiGatewayMethodV108PaymentsZahavPost",
              "ApiGatewayMethodV108PaymentsFpPost",
              "ApiGatewayMethodV108PaymentsMasavPaymentidVarStatusGet",
              "ApiGatewayMethodV108PaymentsZahavPaymentidVarStatusGet",
              "ApiGatewayMethodV108PaymentsFpPaymentidVarStatusGet"
            ]
          },
          "AuthorisationIdDashgetLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "AuthorisationIdDashgetLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "PaymentIdDashdeleteLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "PaymentIdDashdeleteLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "PaymentIdDashgetLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "PaymentIdDashgetLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "PaymentproductDashpostLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "PaymentproductDashpostLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "StatusDashgetLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "StatusDashgetLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "ApiRole": {
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Statement": [
                  {
                    "Action": "sts:AssumeRole",
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    }
                  }
                ],
                "Version": "2012-10-17"
              },
              "ManagedPolicyArns": [
                "arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess",
                "arn:aws:iam::aws:policy/CloudWatchLogsFullAccess",
                "arn:aws:iam::aws:policy/AmazonAPIGatewayAdministrator",
                "arn:aws:iam::aws:policy/AmazonCognitoPowerUser"
              ],
              "RoleName": "openApiRole"
            },
            "Type": "AWS::IAM::Role"
          },
          "SubLambdaRole": {
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Statement": [
                  {
                    "Action": "sts:AssumeRole",
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    }
                  }
                ],
                "Version": "2012-10-17"
              },
              "ManagedPolicyArns": [
                "arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess",
                "arn:aws:iam::aws:policy/CloudWatchLogsFullAccess"
              ],
              "RoleName": "usage-plans-invocation-role"
            },
            "Type": "AWS::IAM::Role"
          },
          "onlyHead": {
            "Properties": {
              "Name": "only-head",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ValidateRequestBody": false,
              "ValidateRequestParameters": true
            },
            "Type": "AWS::ApiGateway::RequestValidator"
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": "payment-leumi",
            "Export": {
              "Name": "sls-payment-dev-ServerlessDeploymentBucketName"
            }
          },
          "NodeModulesUsagePlanLambdaLayerQualifiedArn": {
            "Description": "Current Lambda layer version",
            "Value": {
              "Ref": "NodeModulesUsagePlanLambdaLayer"
            },
            "Export": {
              "Name": "sls-payment-dev-NodeModulesUsagePlanLambdaLayerQualifiedArn"
            }
          },
          "NodeModulesUsagePlanLambdaLayerHash": {
            "Description": "Current Lambda layer hash",
            "Value": "4f12ca3013fbcf324eb701aef0490e74a1089e38",
            "Export": {
              "Name": "sls-payment-dev-NodeModulesUsagePlanLambdaLayerHash"
            }
          },
          "NodeModulesUsagePlanLambdaLayerS3Key": {
            "Description": "Current Lambda layer S3Key",
            "Value": "serverless/payment/dev/1625920077576-2021-07-10T12:27:57.576Z/NodeModulesUsagePlan.zip",
            "Export": {
              "Name": "sls-payment-dev-NodeModulesUsagePlanLambdaLayerS3Key"
            }
          },
          "AuthorisationIdDashgetLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "AuthorisationIdDashgetLambdaVersion6gTDb7TD0A1smXREn7li8wjzKzxdZyki64jEY5PuDbA"
            },
            "Export": {
              "Name": "sls-payment-dev-AuthorisationIdDashgetLambdaFunctionQualifiedArn"
            }
          },
          "PaymentIdDashgetLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "PaymentIdDashgetLambdaVersionmiMg1hguS5e6BnBs5RdJ73AuNwa2fG6ZZQKePYRMYw"
            },
            "Export": {
              "Name": "sls-payment-dev-PaymentIdDashgetLambdaFunctionQualifiedArn"
            }
          },
          "StatusDashgetLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "StatusDashgetLambdaVersionc5gUcpzmQmke3s11XeL8ttzmT5AIvfNi2x2w6hkhic"
            },
            "Export": {
              "Name": "sls-payment-dev-StatusDashgetLambdaFunctionQualifiedArn"
            }
          },
          "PaymentIdDashdeleteLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "PaymentIdDashdeleteLambdaVersionREzkzmYJP88Bfrned7JvAhNis8xBzqeGIYYgPpaOnk"
            },
            "Export": {
              "Name": "sls-payment-dev-PaymentIdDashdeleteLambdaFunctionQualifiedArn"
            }
          },
          "PaymentproductDashpostLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "PaymentproductDashpostLambdaVersiony4mBNPYVwkhQz9cxUBHeRtitDMQVBlbATHdWh4jTY"
            },
            "Export": {
              "Name": "sls-payment-dev-PaymentproductDashpostLambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            },
            "Export": {
              "Name": "sls-payment-dev-ServiceEndpoint"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "output": {
        "file": "build-output.yml"
      }
    },
    "plugins": [
      "serverless-offline-direct-lambda",
      "serverless-offline",
      "serverless-reqvalidator-plugin",
      "serverless-stack-output",
      "serverless-plugin-scripts"
    ],
    "pluginsData": {},
    "functions": {
      "authorisationId-get": {
        "events": [
          {
            "http": {
              "method": "get",
              "path": "v1.0.8/payments/masav/{paymentId}/authorisations/{authorisationId}",
              "reqValidatorName": "onlyHead",
              "request": {
                "parameters": {
                  "method.request.header.Digest": true,
                  "method.request.header.PSU-IP-Address_mandatory": true,
                  "method.request.header.Signature": true,
                  "method.request.header.TPP-Signature-Certificate": true,
                  "method.request.header.X-Request-ID": true
                }
              },
              "integration": "AWS_PROXY"
            }
          },
          {
            "http": {
              "method": "get",
              "path": "v1.0.8/payments/zahav/{paymentId}/authorisations/{authorisationId}",
              "reqValidatorName": "onlyHead",
              "request": {
                "parameters": {
                  "method.request.header.Digest": true,
                  "method.request.header.PSU-IP-Address_mandatory": true,
                  "method.request.header.Signature": true,
                  "method.request.header.TPP-Signature-Certificate": true,
                  "method.request.header.X-Request-ID": true
                }
              },
              "integration": "AWS_PROXY"
            }
          },
          {
            "http": {
              "method": "get",
              "path": "v1.0.8/payments/fp/{paymentId}/authorisations/{authorisationId}",
              "reqValidatorName": "onlyHead",
              "request": {
                "parameters": {
                  "method.request.header.Digest": true,
                  "method.request.header.PSU-IP-Address_mandatory": true,
                  "method.request.header.Signature": true,
                  "method.request.header.TPP-Signature-Certificate": true,
                  "method.request.header.X-Request-ID": true
                }
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "handler": "payment-handler.authorisationId-get",
        "layers": {
          "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"AuthorisationIdDashgetLambdaFunction\"][\"Properties\"][\"Layers\"]"
        },
        "name": "authorisationId-get",
        "package": {},
        "memory": 128,
        "timeout": 5,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "AuthorisationIdDashgetLambdaVersion6gTDb7TD0A1smXREn7li8wjzKzxdZyki64jEY5PuDbA"
      },
      "paymentId-delete": {
        "events": [
          {
            "http": {
              "method": "get",
              "path": "v1.0.8/payments/masav/{paymentId}",
              "reqValidatorName": "onlyHead",
              "request": {
                "parameters": {
                  "method.request.header.Digest": true,
                  "method.request.header.Signature": true,
                  "method.request.header.TPP-Signature-Certificate": true,
                  "method.request.header.X-Request-ID": true
                }
              },
              "integration": "AWS_PROXY"
            }
          },
          {
            "http": {
              "method": "get",
              "path": "v1.0.8/payments/zahav/{paymentId}",
              "reqValidatorName": "onlyHead",
              "request": {
                "parameters": {
                  "method.request.header.Digest": true,
                  "method.request.header.Signature": true,
                  "method.request.header.TPP-Signature-Certificate": true,
                  "method.request.header.X-Request-ID": true
                }
              },
              "integration": "AWS_PROXY"
            }
          },
          {
            "http": {
              "method": "get",
              "path": "v1.0.8/payments/fp/{paymentId}",
              "reqValidatorName": "onlyHead",
              "request": {
                "parameters": {
                  "method.request.header.Digest": true,
                  "method.request.header.Signature": true,
                  "method.request.header.TPP-Signature-Certificate": true,
                  "method.request.header.X-Request-ID": true
                }
              },
              "integration": "AWS_PROXY"
            }
          },
          {
            "http": {
              "method": "delete",
              "path": "v1.0.8/payments/masav/{paymentId}",
              "reqValidatorName": "onlyHead",
              "request": {
                "parameters": {
                  "method.request.header.Digest": true,
                  "method.request.header.Signature": true,
                  "method.request.header.TPP-Signature-Certificate": true,
                  "method.request.header.X-Request-ID": true
                }
              },
              "integration": "AWS_PROXY"
            }
          },
          {
            "http": {
              "method": "delete",
              "path": "v1.0.8/payments/zahav/{paymentId}",
              "reqValidatorName": "onlyHead",
              "request": {
                "parameters": {
                  "method.request.header.Digest": true,
                  "method.request.header.Signature": true,
                  "method.request.header.TPP-Signature-Certificate": true,
                  "method.request.header.X-Request-ID": true
                }
              },
              "integration": "AWS_PROXY"
            }
          },
          {
            "http": {
              "method": "delete",
              "path": "v1.0.8/payments/fp/{paymentId}",
              "reqValidatorName": "onlyHead",
              "request": {
                "parameters": {
                  "method.request.header.Digest": true,
                  "method.request.header.Signature": true,
                  "method.request.header.TPP-Signature-Certificate": true,
                  "method.request.header.X-Request-ID": true
                }
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "handler": "payment-handler.paymentId-delete",
        "layers": {
          "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"PaymentIdDashdeleteLambdaFunction\"][\"Properties\"][\"Layers\"]"
        },
        "name": "paymentId-delete",
        "package": {},
        "memory": 128,
        "timeout": 5,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "PaymentIdDashdeleteLambdaVersionREzkzmYJP88Bfrned7JvAhNis8xBzqeGIYYgPpaOnk"
      },
      "paymentId-get": {
        "events": [
          {
            "http": {
              "method": "get",
              "path": "v1.0.8/payments/masav/{paymentId}",
              "reqValidatorName": "onlyHead",
              "request": {
                "parameters": {
                  "method.request.header.Digest": true,
                  "method.request.header.Signature": true,
                  "method.request.header.TPP-Signature-Certificate": true,
                  "method.request.header.X-Request-ID": true
                }
              },
              "integration": "AWS_PROXY"
            }
          },
          {
            "http": {
              "method": "get",
              "path": "v1.0.8/payments/zahav/{paymentId}",
              "reqValidatorName": "onlyHead",
              "request": {
                "parameters": {
                  "method.request.header.Digest": true,
                  "method.request.header.Signature": true,
                  "method.request.header.TPP-Signature-Certificate": true,
                  "method.request.header.X-Request-ID": true
                }
              },
              "integration": "AWS_PROXY"
            }
          },
          {
            "http": {
              "method": "get",
              "path": "v1.0.8/payments/fp/{paymentId}",
              "reqValidatorName": "onlyHead",
              "request": {
                "parameters": {
                  "method.request.header.Digest": true,
                  "method.request.header.Signature": true,
                  "method.request.header.TPP-Signature-Certificate": true,
                  "method.request.header.X-Request-ID": true
                }
              },
              "integration": "AWS_PROXY"
            }
          },
          {
            "http": {
              "method": "delete",
              "path": "v1.0.8/payments/masav/{paymentId}",
              "reqValidatorName": "onlyHead",
              "request": {
                "parameters": {
                  "method.request.header.Digest": true,
                  "method.request.header.Signature": true,
                  "method.request.header.TPP-Signature-Certificate": true,
                  "method.request.header.X-Request-ID": true
                }
              },
              "integration": "AWS_PROXY"
            }
          },
          {
            "http": {
              "method": "delete",
              "path": "v1.0.8/payments/zahav/{paymentId}",
              "reqValidatorName": "onlyHead",
              "request": {
                "parameters": {
                  "method.request.header.Digest": true,
                  "method.request.header.Signature": true,
                  "method.request.header.TPP-Signature-Certificate": true,
                  "method.request.header.X-Request-ID": true
                }
              },
              "integration": "AWS_PROXY"
            }
          },
          {
            "http": {
              "method": "delete",
              "path": "v1.0.8/payments/fp/{paymentId}",
              "reqValidatorName": "onlyHead",
              "request": {
                "parameters": {
                  "method.request.header.Digest": true,
                  "method.request.header.Signature": true,
                  "method.request.header.TPP-Signature-Certificate": true,
                  "method.request.header.X-Request-ID": true
                }
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "handler": "payment-handler.paymentId-get",
        "layers": {
          "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"PaymentIdDashgetLambdaFunction\"][\"Properties\"][\"Layers\"]"
        },
        "name": "paymentId-get",
        "package": {},
        "memory": 128,
        "timeout": 5,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "PaymentIdDashgetLambdaVersionmiMg1hguS5e6BnBs5RdJ73AuNwa2fG6ZZQKePYRMYw"
      },
      "paymentproduct-post": {
        "events": [
          {
            "http": {
              "method": "post",
              "path": "v1.0.8/payments/masav",
              "reqValidatorName": "onlyHead",
              "request": {
                "parameters": {
                  "method.request.header.Digest": true,
                  "method.request.header.PSU-ID": true,
                  "method.request.header.PSU-IP-Address_mandatory": true,
                  "method.request.header.Signature": true,
                  "method.request.header.TPP-Signature-Certificate": true,
                  "method.request.header.X-Request-ID": true
                }
              },
              "integration": "AWS_PROXY"
            }
          },
          {
            "http": {
              "method": "post",
              "path": "v1.0.8/payments/zahav",
              "reqValidatorName": "onlyHead",
              "request": {
                "parameters": {
                  "method.request.header.Digest": true,
                  "method.request.header.PSU-ID": true,
                  "method.request.header.PSU-IP-Address_mandatory": true,
                  "method.request.header.Signature": true,
                  "method.request.header.TPP-Signature-Certificate": true,
                  "method.request.header.X-Request-ID": true
                }
              },
              "integration": "AWS_PROXY"
            }
          },
          {
            "http": {
              "method": "post",
              "path": "v1.0.8/payments/fp",
              "reqValidatorName": "onlyHead",
              "request": {
                "parameters": {
                  "method.request.header.Digest": true,
                  "method.request.header.PSU-ID": true,
                  "method.request.header.PSU-IP-Address_mandatory": true,
                  "method.request.header.Signature": true,
                  "method.request.header.TPP-Signature-Certificate": true,
                  "method.request.header.X-Request-ID": true
                }
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "handler": "payment-handler.paymentproduct-post",
        "layers": {
          "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"PaymentproductDashpostLambdaFunction\"][\"Properties\"][\"Layers\"]"
        },
        "name": "paymentproduct-post",
        "package": {},
        "memory": 128,
        "timeout": 5,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "PaymentproductDashpostLambdaVersiony4mBNPYVwkhQz9cxUBHeRtitDMQVBlbATHdWh4jTY"
      },
      "status-get": {
        "events": [
          {
            "http": {
              "method": "get",
              "path": "v1.0.8/payments/masav/{paymentId}/status",
              "reqValidatorName": "onlyHead",
              "request": {
                "parameters": {
                  "method.request.header.Digest": true,
                  "method.request.header.Signature": true,
                  "method.request.header.TPP-Signature-Certificate": true,
                  "method.request.header.X-Request-ID": true
                }
              },
              "integration": "AWS_PROXY"
            }
          },
          {
            "http": {
              "method": "get",
              "path": "v1.0.8/payments/zahav/{paymentId}/status",
              "reqValidatorName": "onlyHead",
              "request": {
                "parameters": {
                  "method.request.header.Digest": true,
                  "method.request.header.Signature": true,
                  "method.request.header.TPP-Signature-Certificate": true,
                  "method.request.header.X-Request-ID": true
                }
              },
              "integration": "AWS_PROXY"
            }
          },
          {
            "http": {
              "method": "get",
              "path": "v1.0.8/payments/fp/{paymentId}/status",
              "reqValidatorName": "onlyHead",
              "request": {
                "parameters": {
                  "method.request.header.Digest": true,
                  "method.request.header.Signature": true,
                  "method.request.header.TPP-Signature-Certificate": true,
                  "method.request.header.X-Request-ID": true
                }
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "handler": "payment-handler.status-get",
        "layers": {
          "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"StatusDashgetLambdaFunction\"][\"Properties\"][\"Layers\"]"
        },
        "name": "status-get",
        "package": {},
        "memory": 128,
        "timeout": 5,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "StatusDashgetLambdaVersionc5gUcpzmQmke3s11XeL8ttzmT5AIvfNi2x2w6hkhic"
      }
    },
    "resources": {
      "Resources": {
        "ApiRole": {
          "Properties": {
            "AssumeRolePolicyDocument": {
              "Statement": [
                {
                  "Action": "sts:AssumeRole",
                  "Effect": "Allow",
                  "Principal": {
                    "Service": [
                      "lambda.amazonaws.com"
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "ManagedPolicyArns": [
              "arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess",
              "arn:aws:iam::aws:policy/CloudWatchLogsFullAccess",
              "arn:aws:iam::aws:policy/AmazonAPIGatewayAdministrator",
              "arn:aws:iam::aws:policy/AmazonCognitoPowerUser"
            ],
            "RoleName": "openApiRole"
          },
          "Type": "AWS::IAM::Role"
        },
        "SubLambdaRole": {
          "Properties": {
            "AssumeRolePolicyDocument": {
              "Statement": [
                {
                  "Action": "sts:AssumeRole",
                  "Effect": "Allow",
                  "Principal": {
                    "Service": [
                      "lambda.amazonaws.com"
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "ManagedPolicyArns": [
              "arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess",
              "arn:aws:iam::aws:policy/CloudWatchLogsFullAccess"
            ],
            "RoleName": "usage-plans-invocation-role"
          },
          "Type": "AWS::IAM::Role"
        },
        "onlyHead": {
          "Properties": {
            "Name": "only-head",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ValidateRequestBody": false,
            "ValidateRequestParameters": true
          },
          "Type": "AWS::ApiGateway::RequestValidator"
        }
      },
      "Outputs": {}
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "layers": {
      "NodeModulesUsagePlan": {
        "compatibleRuntimes": {
          "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"NodeModulesUsagePlanLambdaLayer\"][\"Properties\"][\"CompatibleRuntimes\"]"
        },
        "description": "node modules dependencies",
        "path": "node_modules",
        "package": {
          "artifact": "/Users/danieldagot/Desktop/ron/Test/open-banking/devops/generatorLambda/demo/payment/.serverless/NodeModulesUsagePlan.zip"
        }
      }
    },
    "initialServerlessConfig": {
      "custom": {
        "$ref": "$[\"service\"][\"custom\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "layers": {
        "$ref": "$[\"service\"][\"layers\"]"
      },
      "package": {
        "exclude": [
          "node_modules/**"
        ],
        "deploymentBucket": "payment-leumi",
        "artifact": "/Users/danieldagot/Desktop/ron/Test/open-banking/devops/generatorLambda/demo/payment/.serverless/payment.zip",
        "artifactDirectoryName": "serverless/payment/dev/1625920077576-2021-07-10T12:27:57.576Z"
      },
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      },
      "service": {
        "$ref": "$[\"service\"][\"serviceObject\"]"
      }
    },
    "isDashboardMonitoringPreconfigured": false,
    "artifact": "/Users/danieldagot/Desktop/ron/Test/open-banking/devops/generatorLambda/demo/payment/.serverless/payment.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/payment/dev/1625920077576-2021-07-10T12:27:57.576Z",
    "artifact": "payment.zip"
  }
}